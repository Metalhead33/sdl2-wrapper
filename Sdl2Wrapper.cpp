#include "Sdl2Wrapper.hpp"
#include <stdexcept>

void OffloadSDL2()
{
	dlclose(SDL2_LIBRARY);
}
void LoadSDL2()
{
	SDL2_LIBRARY = dlopen("libSDL2.so",RTLD_LAZY);
	if(!SDL2_LIBRARY) throw std::runtime_error("Couldn't load SDL2!");
	SDL2::AddEventWatch = reinterpret_cast<PF_SDL2_AddEventWatch>(dlsym(SDL2_LIBRARY,"SDL_AddEventWatch"));
	SDL2::AddHintCallback = reinterpret_cast<PF_SDL2_AddHintCallback>(dlsym(SDL2_LIBRARY,"SDL_AddHintCallback"));
	SDL2::AddTimer = reinterpret_cast<PF_SDL2_AddTimer>(dlsym(SDL2_LIBRARY,"SDL_AddTimer"));
	SDL2::AllocFormat = reinterpret_cast<PF_SDL2_AllocFormat>(dlsym(SDL2_LIBRARY,"SDL_AllocFormat"));
	SDL2::AllocPalette = reinterpret_cast<PF_SDL2_AllocPalette>(dlsym(SDL2_LIBRARY,"SDL_AllocPalette"));
	SDL2::AllocRW = reinterpret_cast<PF_SDL2_AllocRW>(dlsym(SDL2_LIBRARY,"SDL_AllocRW"));
	/*pSDL_AndroidGetActivity = reinterpret_cast<PF_SDL2_AndroidGetActivity>(dlsym(SDL2_LIBRARY,"SDL_AndroidGetActivity"));
	SDL2::AndroidGetExternalStoragePath = reinterpret_cast<PF_SDL2_AndroidGetExternalStoragePath>(dlsym(SDL2_LIBRARY,"SDL_AndroidGetExternalStoragePath"));
	SDL2::AndroidGetExternalStorageState = reinterpret_cast<PF_SDL2_AndroidGetExternalStorageState>(dlsym(SDL2_LIBRARY,"SDL_AndroidGetExternalStorageState"));
	SDL2::AndroidGetInternalStoragePath = reinterpret_cast<PF_SDL2_AndroidGetInternalStoragePath>(dlsym(SDL2_LIBRARY,"SDL_AndroidGetInternalStoragePath"));
	SDL2::AndroidGetJNIEnv = reinterpret_cast<PF_SDL2_AndroidGetJNIEnv>(dlsym(SDL2_LIBRARY,"SDL_AndroidGetJNIEnv"));*/
	SDL2::AtomicAdd = reinterpret_cast<PF_SDL2_AtomicAdd>(dlsym(SDL2_LIBRARY,"SDL_AtomicAdd"));
	SDL2::AtomicCAS = reinterpret_cast<PF_SDL2_AtomicCAS>(dlsym(SDL2_LIBRARY,"SDL_AtomicCAS"));
	SDL2::AtomicCASPtr = reinterpret_cast<PF_SDL2_AtomicCASPtr>(dlsym(SDL2_LIBRARY,"SDL_AtomicCASPtr"));
	SDL2::AtomicGet = reinterpret_cast<PF_SDL2_AtomicGet>(dlsym(SDL2_LIBRARY,"SDL_AtomicGet"));
	SDL2::AtomicGetPtr = reinterpret_cast<PF_SDL2_AtomicGetPtr>(dlsym(SDL2_LIBRARY,"SDL_AtomicGetPtr"));
	SDL2::AtomicLock = reinterpret_cast<PF_SDL2_AtomicLock>(dlsym(SDL2_LIBRARY,"SDL_AtomicLock"));
	SDL2::AtomicSet = reinterpret_cast<PF_SDL2_AtomicSet>(dlsym(SDL2_LIBRARY,"SDL_AtomicSet"));
	SDL2::AtomicSetPtr = reinterpret_cast<PF_SDL2_AtomicSetPtr>(dlsym(SDL2_LIBRARY,"SDL_AtomicSetPtr"));
	SDL2::AtomicTryLock = reinterpret_cast<PF_SDL2_AtomicTryLock>(dlsym(SDL2_LIBRARY,"SDL_AtomicTryLock"));
	SDL2::AtomicUnlock = reinterpret_cast<PF_SDL2_AtomicUnlock>(dlsym(SDL2_LIBRARY,"SDL_AtomicUnlock"));
	SDL2::AudioInit = reinterpret_cast<PF_SDL2_AudioInit>(dlsym(SDL2_LIBRARY,"SDL_AudioInit"));
	SDL2::AudioQuit = reinterpret_cast<PF_SDL2_AudioQuit>(dlsym(SDL2_LIBRARY,"SDL_AudioQuit"));
	SDL2::BuildAudioCVT = reinterpret_cast<PF_SDL2_BuildAudioCVT>(dlsym(SDL2_LIBRARY,"SDL_BuildAudioCVT"));
	SDL2::CalculateGammaRamp = reinterpret_cast<PF_SDL2_CalculateGammaRamp>(dlsym(SDL2_LIBRARY,"SDL_CalculateGammaRamp"));
	SDL2::CaptureMouse = reinterpret_cast<PF_SDL2_CaptureMouse>(dlsym(SDL2_LIBRARY,"SDL_CaptureMouse"));
	SDL2::ClearError = reinterpret_cast<PF_SDL2_ClearError>(dlsym(SDL2_LIBRARY,"SDL_ClearError"));
	SDL2::ClearHints = reinterpret_cast<PF_SDL2_ClearHints>(dlsym(SDL2_LIBRARY,"SDL_ClearHints"));
	SDL2::ClearQueuedAudio = reinterpret_cast<PF_SDL2_ClearQueuedAudio>(dlsym(SDL2_LIBRARY,"SDL_ClearQueuedAudio"));
	SDL2::CloseAudio = reinterpret_cast<PF_SDL2_CloseAudio>(dlsym(SDL2_LIBRARY,"SDL_CloseAudio"));
	SDL2::CloseAudioDevice = reinterpret_cast<PF_SDL2_CloseAudioDevice>(dlsym(SDL2_LIBRARY,"SDL_CloseAudioDevice"));
	SDL2::CondBroadcast = reinterpret_cast<PF_SDL2_CondBroadcast>(dlsym(SDL2_LIBRARY,"SDL_CondBroadcast"));
	SDL2::CondSignal = reinterpret_cast<PF_SDL2_CondSignal>(dlsym(SDL2_LIBRARY,"SDL_CondSignal"));
	SDL2::CondWait = reinterpret_cast<PF_SDL2_CondWait>(dlsym(SDL2_LIBRARY,"SDL_CondWait"));
	SDL2::CondWaitTimeout = reinterpret_cast<PF_SDL2_CondWaitTimeout>(dlsym(SDL2_LIBRARY,"SDL_CondWaitTimeout"));
	SDL2::ConvertAudio = reinterpret_cast<PF_SDL2_ConvertAudio>(dlsym(SDL2_LIBRARY,"SDL_ConvertAudio"));
	SDL2::ConvertPixels = reinterpret_cast<PF_SDL2_ConvertPixels>(dlsym(SDL2_LIBRARY,"SDL_ConvertPixels"));
	SDL2::ConvertSurface = reinterpret_cast<PF_SDL2_ConvertSurface>(dlsym(SDL2_LIBRARY,"SDL_ConvertSurface"));
	SDL2::ConvertSurfaceFormat = reinterpret_cast<PF_SDL2_ConvertSurfaceFormat>(dlsym(SDL2_LIBRARY,"SDL_ConvertSurfaceFormat"));
	SDL2::CreateColorCursor = reinterpret_cast<PF_SDL2_CreateColorCursor>(dlsym(SDL2_LIBRARY,"SDL_CreateColorCursor"));
	SDL2::CreateCond = reinterpret_cast<PF_SDL2_CreateCond>(dlsym(SDL2_LIBRARY,"SDL_CreateCond"));
	SDL2::CreateCursor = reinterpret_cast<PF_SDL2_CreateCursor>(dlsym(SDL2_LIBRARY,"SDL_CreateCursor"));
	SDL2::CreateMutex = reinterpret_cast<PF_SDL2_CreateMutex>(dlsym(SDL2_LIBRARY,"SDL_CreateMutex"));
	SDL2::CreateRGBSurface = reinterpret_cast<PF_SDL2_CreateRGBSurface>(dlsym(SDL2_LIBRARY,"SDL_CreateRGBSurface"));
	SDL2::CreateRGBSurfaceFrom = reinterpret_cast<PF_SDL2_CreateRGBSurfaceFrom>(dlsym(SDL2_LIBRARY,"SDL_CreateRGBSurfaceFrom"));
	SDL2::CreateRenderer = reinterpret_cast<PF_SDL2_CreateRenderer>(dlsym(SDL2_LIBRARY,"SDL_CreateRenderer"));
	SDL2::CreateSemaphore = reinterpret_cast<PF_SDL2_CreateSemaphore>(dlsym(SDL2_LIBRARY,"SDL_CreateSemaphore"));
	//pSDL_CreateShapedWindow = reinterpret_cast<PF_SDL2_CreateShapedWindow>(dlsym(SDL2_LIBRARY,"SDL_CreateShapedWindow"));
	SDL2::CreateSoftwareRenderer = reinterpret_cast<PF_SDL2_CreateSoftwareRenderer>(dlsym(SDL2_LIBRARY,"SDL_CreateSoftwareRenderer"));
	SDL2::CreateSystemCursor = reinterpret_cast<PF_SDL2_CreateSystemCursor>(dlsym(SDL2_LIBRARY,"SDL_CreateSystemCursor"));
	SDL2::CreateTexture = reinterpret_cast<PF_SDL2_CreateTexture>(dlsym(SDL2_LIBRARY,"SDL_CreateTexture"));
	SDL2::CreateTextureFromSurface = reinterpret_cast<PF_SDL2_CreateTextureFromSurface>(dlsym(SDL2_LIBRARY,"SDL_CreateTextureFromSurface"));
	SDL2::CreateThread = reinterpret_cast<PF_SDL2_CreateThread>(dlsym(SDL2_LIBRARY,"SDL_CreateThread"));
	SDL2::CreateThread = reinterpret_cast<PF_SDL2_CreateThread>(dlsym(SDL2_LIBRARY,"SDL_CreateThread"));
	SDL2::CreateWindow = reinterpret_cast<PF_SDL2_CreateWindow>(dlsym(SDL2_LIBRARY,"SDL_CreateWindow"));
	SDL2::CreateWindowAndRenderer = reinterpret_cast<PF_SDL2_CreateWindowAndRenderer>(dlsym(SDL2_LIBRARY,"SDL_CreateWindowAndRenderer"));
	SDL2::CreateWindowFrom = reinterpret_cast<PF_SDL2_CreateWindowFrom>(dlsym(SDL2_LIBRARY,"SDL_CreateWindowFrom"));
	//pSDL_DXGIGetOutputInfo = reinterpret_cast<PF_SDL2_DXGIGetOutputInfo>(dlsym(SDL2_LIBRARY,"SDL_DXGIGetOutputInfo"));
	SDL2::DelEventWatch = reinterpret_cast<PF_SDL2_DelEventWatch>(dlsym(SDL2_LIBRARY,"SDL_DelEventWatch"));
	SDL2::DelHintCallback = reinterpret_cast<PF_SDL2_DelHintCallback>(dlsym(SDL2_LIBRARY,"SDL_DelHintCallback"));
	SDL2::Delay = reinterpret_cast<PF_SDL2_Delay>(dlsym(SDL2_LIBRARY,"SDL_Delay"));
	SDL2::DestroyCond = reinterpret_cast<PF_SDL2_DestroyCond>(dlsym(SDL2_LIBRARY,"SDL_DestroyCond"));
	SDL2::DestroyMutex = reinterpret_cast<PF_SDL2_DestroyMutex>(dlsym(SDL2_LIBRARY,"SDL_DestroyMutex"));
	SDL2::DestroyRenderer = reinterpret_cast<PF_SDL2_DestroyRenderer>(dlsym(SDL2_LIBRARY,"SDL_DestroyRenderer"));
	SDL2::DestroySemaphore = reinterpret_cast<PF_SDL2_DestroySemaphore>(dlsym(SDL2_LIBRARY,"SDL_DestroySemaphore"));
	SDL2::DestroyTexture = reinterpret_cast<PF_SDL2_DestroyTexture>(dlsym(SDL2_LIBRARY,"SDL_DestroyTexture"));
	SDL2::DestroyWindow = reinterpret_cast<PF_SDL2_DestroyWindow>(dlsym(SDL2_LIBRARY,"SDL_DestroyWindow"));
	SDL2::DetachThread = reinterpret_cast<PF_SDL2_DetachThread>(dlsym(SDL2_LIBRARY,"SDL_DetachThread"));
	//pSDL_Direct3D9GetAdapterIndex = reinterpret_cast<PF_SDL2_Direct3D9GetAdapterIndex>(dlsym(SDL2_LIBRARY,"SDL_Direct3D9GetAdapterIndex"));
	SDL2::DisableScreenSaver = reinterpret_cast<PF_SDL2_DisableScreenSaver>(dlsym(SDL2_LIBRARY,"SDL_DisableScreenSaver"));
	SDL2::EnableScreenSaver = reinterpret_cast<PF_SDL2_EnableScreenSaver>(dlsym(SDL2_LIBRARY,"SDL_EnableScreenSaver"));
	SDL2::EnclosePoints = reinterpret_cast<PF_SDL2_EnclosePoints>(dlsym(SDL2_LIBRARY,"SDL_EnclosePoints"));
	SDL2::Error = reinterpret_cast<PF_SDL2_Error>(dlsym(SDL2_LIBRARY,"SDL_Error"));
	SDL2::EventState = reinterpret_cast<PF_SDL2_EventState>(dlsym(SDL2_LIBRARY,"SDL_EventState"));
	SDL2::FillRect = reinterpret_cast<PF_SDL2_FillRect>(dlsym(SDL2_LIBRARY,"SDL_FillRect"));
	SDL2::FillRects = reinterpret_cast<PF_SDL2_FillRects>(dlsym(SDL2_LIBRARY,"SDL_FillRects"));
	SDL2::FilterEvents = reinterpret_cast<PF_SDL2_FilterEvents>(dlsym(SDL2_LIBRARY,"SDL_FilterEvents"));
	SDL2::FlushEvent = reinterpret_cast<PF_SDL2_FlushEvent>(dlsym(SDL2_LIBRARY,"SDL_FlushEvent"));
	SDL2::FlushEvents = reinterpret_cast<PF_SDL2_FlushEvents>(dlsym(SDL2_LIBRARY,"SDL_FlushEvents"));
	SDL2::FreeCursor = reinterpret_cast<PF_SDL2_FreeCursor>(dlsym(SDL2_LIBRARY,"SDL_FreeCursor"));
	SDL2::FreeFormat = reinterpret_cast<PF_SDL2_FreeFormat>(dlsym(SDL2_LIBRARY,"SDL_FreeFormat"));
	SDL2::FreePalette = reinterpret_cast<PF_SDL2_FreePalette>(dlsym(SDL2_LIBRARY,"SDL_FreePalette"));
	SDL2::FreeRW = reinterpret_cast<PF_SDL2_FreeRW>(dlsym(SDL2_LIBRARY,"SDL_FreeRW"));
	SDL2::FreeSurface = reinterpret_cast<PF_SDL2_FreeSurface>(dlsym(SDL2_LIBRARY,"SDL_FreeSurface"));
	SDL2::FreeWAV = reinterpret_cast<PF_SDL2_FreeWAV>(dlsym(SDL2_LIBRARY,"SDL_FreeWAV"));
	SDL2::GL_BindTexture = reinterpret_cast<PF_SDL2_GL_BindTexture>(dlsym(SDL2_LIBRARY,"SDL_GL_BindTexture"));
	SDL2::GL_CreateContext = reinterpret_cast<PF_SDL2_GL_CreateContext>(dlsym(SDL2_LIBRARY,"SDL_GL_CreateContext"));
	SDL2::GL_DeleteContext = reinterpret_cast<PF_SDL2_GL_DeleteContext>(dlsym(SDL2_LIBRARY,"SDL_GL_DeleteContext"));
	SDL2::GL_ExtensionSupported = reinterpret_cast<PF_SDL2_GL_ExtensionSupported>(dlsym(SDL2_LIBRARY,"SDL_GL_ExtensionSupported"));
	SDL2::GL_GetAttribute = reinterpret_cast<PF_SDL2_GL_GetAttribute>(dlsym(SDL2_LIBRARY,"SDL_GL_GetAttribute"));
	SDL2::GL_GetCurrentContext = reinterpret_cast<PF_SDL2_GL_GetCurrentContext>(dlsym(SDL2_LIBRARY,"SDL_GL_GetCurrentContext"));
	SDL2::GL_GetCurrentWindow = reinterpret_cast<PF_SDL2_GL_GetCurrentWindow>(dlsym(SDL2_LIBRARY,"SDL_GL_GetCurrentWindow"));
	SDL2::GL_GetDrawableSize = reinterpret_cast<PF_SDL2_GL_GetDrawableSize>(dlsym(SDL2_LIBRARY,"SDL_GL_GetDrawableSize"));
	SDL2::GL_GetProcAddress = reinterpret_cast<PF_SDL2_GL_GetProcAddress>(dlsym(SDL2_LIBRARY,"SDL_GL_GetProcAddress"));
	SDL2::GL_GetSwapInterval = reinterpret_cast<PF_SDL2_GL_GetSwapInterval>(dlsym(SDL2_LIBRARY,"SDL_GL_GetSwapInterval"));
	SDL2::GL_LoadLibrary = reinterpret_cast<PF_SDL2_GL_LoadLibrary>(dlsym(SDL2_LIBRARY,"SDL_GL_LoadLibrary"));
	SDL2::GL_MakeCurrent = reinterpret_cast<PF_SDL2_GL_MakeCurrent>(dlsym(SDL2_LIBRARY,"SDL_GL_MakeCurrent"));
	SDL2::GL_ResetAttributes = reinterpret_cast<PF_SDL2_GL_ResetAttributes>(dlsym(SDL2_LIBRARY,"SDL_GL_ResetAttributes"));
	SDL2::GL_SetAttribute = reinterpret_cast<PF_SDL2_GL_SetAttribute>(dlsym(SDL2_LIBRARY,"SDL_GL_SetAttribute"));
	SDL2::GL_SetSwapInterval = reinterpret_cast<PF_SDL2_GL_SetSwapInterval>(dlsym(SDL2_LIBRARY,"SDL_GL_SetSwapInterval"));
	SDL2::GL_SwapWindow = reinterpret_cast<PF_SDL2_GL_SwapWindow>(dlsym(SDL2_LIBRARY,"SDL_GL_SwapWindow"));
	SDL2::GL_UnbindTexture = reinterpret_cast<PF_SDL2_GL_UnbindTexture>(dlsym(SDL2_LIBRARY,"SDL_GL_UnbindTexture"));
	SDL2::GL_UnloadLibrary = reinterpret_cast<PF_SDL2_GL_UnloadLibrary>(dlsym(SDL2_LIBRARY,"SDL_GL_UnloadLibrary"));
	SDL2::GameControllerAddMapping = reinterpret_cast<PF_SDL2_GameControllerAddMapping>(dlsym(SDL2_LIBRARY,"SDL_GameControllerAddMapping"));
	SDL2::GameControllerAddMappingsFromRW = reinterpret_cast<PF_SDL2_GameControllerAddMappingsFromRW>(dlsym(SDL2_LIBRARY,"SDL_GameControllerAddMappingsFromRW"));
	SDL2::GameControllerClose = reinterpret_cast<PF_SDL2_GameControllerClose>(dlsym(SDL2_LIBRARY,"SDL_GameControllerClose"));
	SDL2::GameControllerEventState = reinterpret_cast<PF_SDL2_GameControllerEventState>(dlsym(SDL2_LIBRARY,"SDL_GameControllerEventState"));
	SDL2::GameControllerFromInstanceID = reinterpret_cast<PF_SDL2_GameControllerFromInstanceID>(dlsym(SDL2_LIBRARY,"SDL_GameControllerFromInstanceID"));
	SDL2::GameControllerGetAttached = reinterpret_cast<PF_SDL2_GameControllerGetAttached>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetAttached"));
	SDL2::GameControllerGetAxis = reinterpret_cast<PF_SDL2_GameControllerGetAxis>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetAxis"));
	SDL2::GameControllerGetAxisFromString = reinterpret_cast<PF_SDL2_GameControllerGetAxisFromString>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetAxisFromString"));
	SDL2::GameControllerGetBindForAxis = reinterpret_cast<PF_SDL2_GameControllerGetBindForAxis>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetBindForAxis"));
	SDL2::GameControllerGetBindForButton = reinterpret_cast<PF_SDL2_GameControllerGetBindForButton>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetBindForButton"));
	SDL2::GameControllerGetButton = reinterpret_cast<PF_SDL2_GameControllerGetButton>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetButton"));
	SDL2::GameControllerGetButtonFromString = reinterpret_cast<PF_SDL2_GameControllerGetButtonFromString>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetButtonFromString"));
	SDL2::GameControllerGetJoystick = reinterpret_cast<PF_SDL2_GameControllerGetJoystick>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetJoystick"));
	SDL2::GameControllerGetStringForAxis = reinterpret_cast<PF_SDL2_GameControllerGetStringForAxis>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetStringForAxis"));
	SDL2::GameControllerGetStringForButton = reinterpret_cast<PF_SDL2_GameControllerGetStringForButton>(dlsym(SDL2_LIBRARY,"SDL_GameControllerGetStringForButton"));
	SDL2::GameControllerMapping = reinterpret_cast<PF_SDL2_GameControllerMapping>(dlsym(SDL2_LIBRARY,"SDL_GameControllerMapping"));
	SDL2::GameControllerMappingForGUID = reinterpret_cast<PF_SDL2_GameControllerMappingForGUID>(dlsym(SDL2_LIBRARY,"SDL_GameControllerMappingForGUID"));
	SDL2::GameControllerName = reinterpret_cast<PF_SDL2_GameControllerName>(dlsym(SDL2_LIBRARY,"SDL_GameControllerName"));
	SDL2::GameControllerNameForIndex = reinterpret_cast<PF_SDL2_GameControllerNameForIndex>(dlsym(SDL2_LIBRARY,"SDL_GameControllerNameForIndex"));
	SDL2::GameControllerOpen = reinterpret_cast<PF_SDL2_GameControllerOpen>(dlsym(SDL2_LIBRARY,"SDL_GameControllerOpen"));
	SDL2::GameControllerUpdate = reinterpret_cast<PF_SDL2_GameControllerUpdate>(dlsym(SDL2_LIBRARY,"SDL_GameControllerUpdate"));
	SDL2::GetAssertionHandler = reinterpret_cast<PF_SDL2_GetAssertionHandler>(dlsym(SDL2_LIBRARY,"SDL_GetAssertionHandler"));
	SDL2::GetAssertionReport = reinterpret_cast<PF_SDL2_GetAssertionReport>(dlsym(SDL2_LIBRARY,"SDL_GetAssertionReport"));
	SDL2::GetAudioDeviceName = reinterpret_cast<PF_SDL2_GetAudioDeviceName>(dlsym(SDL2_LIBRARY,"SDL_GetAudioDeviceName"));
	SDL2::GetAudioDeviceStatus = reinterpret_cast<PF_SDL2_GetAudioDeviceStatus>(dlsym(SDL2_LIBRARY,"SDL_GetAudioDeviceStatus"));
	SDL2::GetAudioDriver = reinterpret_cast<PF_SDL2_GetAudioDriver>(dlsym(SDL2_LIBRARY,"SDL_GetAudioDriver"));
	SDL2::GetAudioStatus = reinterpret_cast<PF_SDL2_GetAudioStatus>(dlsym(SDL2_LIBRARY,"SDL_GetAudioStatus"));
	SDL2::GetBasePath = reinterpret_cast<PF_SDL2_GetBasePath>(dlsym(SDL2_LIBRARY,"SDL_GetBasePath"));
	SDL2::GetCPUCacheLineSize = reinterpret_cast<PF_SDL2_GetCPUCacheLineSize>(dlsym(SDL2_LIBRARY,"SDL_GetCPUCacheLineSize"));
	SDL2::GetCPUCount = reinterpret_cast<PF_SDL2_GetCPUCount>(dlsym(SDL2_LIBRARY,"SDL_GetCPUCount"));
	SDL2::GetClipRect = reinterpret_cast<PF_SDL2_GetClipRect>(dlsym(SDL2_LIBRARY,"SDL_GetClipRect"));
	SDL2::GetClipboardText = reinterpret_cast<PF_SDL2_GetClipboardText>(dlsym(SDL2_LIBRARY,"SDL_GetClipboardText"));
	SDL2::GetClosestDisplayMode = reinterpret_cast<PF_SDL2_GetClosestDisplayMode>(dlsym(SDL2_LIBRARY,"SDL_GetClosestDisplayMode"));
	SDL2::GetColorKey = reinterpret_cast<PF_SDL2_GetColorKey>(dlsym(SDL2_LIBRARY,"SDL_GetColorKey"));
	SDL2::GetCurrentAudioDriver = reinterpret_cast<PF_SDL2_GetCurrentAudioDriver>(dlsym(SDL2_LIBRARY,"SDL_GetCurrentAudioDriver"));
	SDL2::GetCurrentDisplayMode = reinterpret_cast<PF_SDL2_GetCurrentDisplayMode>(dlsym(SDL2_LIBRARY,"SDL_GetCurrentDisplayMode"));
	SDL2::GetCurrentVideoDriver = reinterpret_cast<PF_SDL2_GetCurrentVideoDriver>(dlsym(SDL2_LIBRARY,"SDL_GetCurrentVideoDriver"));
	SDL2::GetCursor = reinterpret_cast<PF_SDL2_GetCursor>(dlsym(SDL2_LIBRARY,"SDL_GetCursor"));
	SDL2::GetDefaultAssertionHandler = reinterpret_cast<PF_SDL2_GetDefaultAssertionHandler>(dlsym(SDL2_LIBRARY,"SDL_GetDefaultAssertionHandler"));
	SDL2::GetDefaultCursor = reinterpret_cast<PF_SDL2_GetDefaultCursor>(dlsym(SDL2_LIBRARY,"SDL_GetDefaultCursor"));
	SDL2::GetDesktopDisplayMode = reinterpret_cast<PF_SDL2_GetDesktopDisplayMode>(dlsym(SDL2_LIBRARY,"SDL_GetDesktopDisplayMode"));
	SDL2::GetDisplayBounds = reinterpret_cast<PF_SDL2_GetDisplayBounds>(dlsym(SDL2_LIBRARY,"SDL_GetDisplayBounds"));
	SDL2::GetDisplayDPI = reinterpret_cast<PF_SDL2_GetDisplayDPI>(dlsym(SDL2_LIBRARY,"SDL_GetDisplayDPI"));
	SDL2::GetDisplayMode = reinterpret_cast<PF_SDL2_GetDisplayMode>(dlsym(SDL2_LIBRARY,"SDL_GetDisplayMode"));
	SDL2::GetDisplayName = reinterpret_cast<PF_SDL2_GetDisplayName>(dlsym(SDL2_LIBRARY,"SDL_GetDisplayName"));
	SDL2::GetError = reinterpret_cast<PF_SDL2_GetError>(dlsym(SDL2_LIBRARY,"SDL_GetError"));
	SDL2::GetEventFilter = reinterpret_cast<PF_SDL2_GetEventFilter>(dlsym(SDL2_LIBRARY,"SDL_GetEventFilter"));
	SDL2::GetGlobalMouseState = reinterpret_cast<PF_SDL2_GetGlobalMouseState>(dlsym(SDL2_LIBRARY,"SDL_GetGlobalMouseState"));
	SDL2::GetGrabbedWindow = reinterpret_cast<PF_SDL2_GetGrabbedWindow>(dlsym(SDL2_LIBRARY,"SDL_GetGrabbedWindow"));
	SDL2::GetHint = reinterpret_cast<PF_SDL2_GetHint>(dlsym(SDL2_LIBRARY,"SDL_GetHint"));
	SDL2::GetKeyFromName = reinterpret_cast<PF_SDL2_GetKeyFromName>(dlsym(SDL2_LIBRARY,"SDL_GetKeyFromName"));
	SDL2::GetKeyFromScancode = reinterpret_cast<PF_SDL2_GetKeyFromScancode>(dlsym(SDL2_LIBRARY,"SDL_GetKeyFromScancode"));
	SDL2::GetKeyName = reinterpret_cast<PF_SDL2_GetKeyName>(dlsym(SDL2_LIBRARY,"SDL_GetKeyName"));
	SDL2::GetKeyboardFocus = reinterpret_cast<PF_SDL2_GetKeyboardFocus>(dlsym(SDL2_LIBRARY,"SDL_GetKeyboardFocus"));
	SDL2::GetKeyboardState = reinterpret_cast<PF_SDL2_GetKeyboardState>(dlsym(SDL2_LIBRARY,"SDL_GetKeyboardState"));
	SDL2::GetModState = reinterpret_cast<PF_SDL2_GetModState>(dlsym(SDL2_LIBRARY,"SDL_GetModState"));
	SDL2::GetMouseFocus = reinterpret_cast<PF_SDL2_GetMouseFocus>(dlsym(SDL2_LIBRARY,"SDL_GetMouseFocus"));
	SDL2::GetMouseState = reinterpret_cast<PF_SDL2_GetMouseState>(dlsym(SDL2_LIBRARY,"SDL_GetMouseState"));
	SDL2::GetNumAudioDevices = reinterpret_cast<PF_SDL2_GetNumAudioDevices>(dlsym(SDL2_LIBRARY,"SDL_GetNumAudioDevices"));
	SDL2::GetNumAudioDrivers = reinterpret_cast<PF_SDL2_GetNumAudioDrivers>(dlsym(SDL2_LIBRARY,"SDL_GetNumAudioDrivers"));
	SDL2::GetNumDisplayModes = reinterpret_cast<PF_SDL2_GetNumDisplayModes>(dlsym(SDL2_LIBRARY,"SDL_GetNumDisplayModes"));
	SDL2::GetNumRenderDrivers = reinterpret_cast<PF_SDL2_GetNumRenderDrivers>(dlsym(SDL2_LIBRARY,"SDL_GetNumRenderDrivers"));
	SDL2::GetNumTouchDevices = reinterpret_cast<PF_SDL2_GetNumTouchDevices>(dlsym(SDL2_LIBRARY,"SDL_GetNumTouchDevices"));
	SDL2::GetNumTouchFingers = reinterpret_cast<PF_SDL2_GetNumTouchFingers>(dlsym(SDL2_LIBRARY,"SDL_GetNumTouchFingers"));
	SDL2::GetNumVideoDisplays = reinterpret_cast<PF_SDL2_GetNumVideoDisplays>(dlsym(SDL2_LIBRARY,"SDL_GetNumVideoDisplays"));
	SDL2::GetNumVideoDrivers = reinterpret_cast<PF_SDL2_GetNumVideoDrivers>(dlsym(SDL2_LIBRARY,"SDL_GetNumVideoDrivers"));
	SDL2::GetPerformanceCounter = reinterpret_cast<PF_SDL2_GetPerformanceCounter>(dlsym(SDL2_LIBRARY,"SDL_GetPerformanceCounter"));
	SDL2::GetPerformanceFrequency = reinterpret_cast<PF_SDL2_GetPerformanceFrequency>(dlsym(SDL2_LIBRARY,"SDL_GetPerformanceFrequency"));
	SDL2::GetPixelFormatName = reinterpret_cast<PF_SDL2_GetPixelFormatName>(dlsym(SDL2_LIBRARY,"SDL_GetPixelFormatName"));
	SDL2::GetPlatform = reinterpret_cast<PF_SDL2_GetPlatform>(dlsym(SDL2_LIBRARY,"SDL_GetPlatform"));
	SDL2::GetPowerInfo = reinterpret_cast<PF_SDL2_GetPowerInfo>(dlsym(SDL2_LIBRARY,"SDL_GetPowerInfo"));
	SDL2::GetPrefPath = reinterpret_cast<PF_SDL2_GetPrefPath>(dlsym(SDL2_LIBRARY,"SDL_GetPrefPath"));
	SDL2::GetQueuedAudioSize = reinterpret_cast<PF_SDL2_GetQueuedAudioSize>(dlsym(SDL2_LIBRARY,"SDL_GetQueuedAudioSize"));
	SDL2::GetRGB = reinterpret_cast<PF_SDL2_GetRGB>(dlsym(SDL2_LIBRARY,"SDL_GetRGB"));
	SDL2::GetRGBA = reinterpret_cast<PF_SDL2_GetRGBA>(dlsym(SDL2_LIBRARY,"SDL_GetRGBA"));
	SDL2::GetRelativeMouseMode = reinterpret_cast<PF_SDL2_GetRelativeMouseMode>(dlsym(SDL2_LIBRARY,"SDL_GetRelativeMouseMode"));
	SDL2::GetRelativeMouseState = reinterpret_cast<PF_SDL2_GetRelativeMouseState>(dlsym(SDL2_LIBRARY,"SDL_GetRelativeMouseState"));
	SDL2::GetRenderDrawBlendMode = reinterpret_cast<PF_SDL2_GetRenderDrawBlendMode>(dlsym(SDL2_LIBRARY,"SDL_GetRenderDrawBlendMode"));
	SDL2::GetRenderDrawColor = reinterpret_cast<PF_SDL2_GetRenderDrawColor>(dlsym(SDL2_LIBRARY,"SDL_GetRenderDrawColor"));
	SDL2::GetRenderDriverInfo = reinterpret_cast<PF_SDL2_GetRenderDriverInfo>(dlsym(SDL2_LIBRARY,"SDL_GetRenderDriverInfo"));
	SDL2::GetRenderTarget = reinterpret_cast<PF_SDL2_GetRenderTarget>(dlsym(SDL2_LIBRARY,"SDL_GetRenderTarget"));
	SDL2::GetRenderer = reinterpret_cast<PF_SDL2_GetRenderer>(dlsym(SDL2_LIBRARY,"SDL_GetRenderer"));
	SDL2::GetRendererInfo = reinterpret_cast<PF_SDL2_GetRendererInfo>(dlsym(SDL2_LIBRARY,"SDL_GetRendererInfo"));
	SDL2::GetRendererOutputSize = reinterpret_cast<PF_SDL2_GetRendererOutputSize>(dlsym(SDL2_LIBRARY,"SDL_GetRendererOutputSize"));
	SDL2::GetRevision = reinterpret_cast<PF_SDL2_GetRevision>(dlsym(SDL2_LIBRARY,"SDL_GetRevision"));
	SDL2::GetRevisionNumber = reinterpret_cast<PF_SDL2_GetRevisionNumber>(dlsym(SDL2_LIBRARY,"SDL_GetRevisionNumber"));
	SDL2::GetScancodeFromKey = reinterpret_cast<PF_SDL2_GetScancodeFromKey>(dlsym(SDL2_LIBRARY,"SDL_GetScancodeFromKey"));
	SDL2::GetScancodeFromName = reinterpret_cast<PF_SDL2_GetScancodeFromName>(dlsym(SDL2_LIBRARY,"SDL_GetScancodeFromName"));
	SDL2::GetScancodeName = reinterpret_cast<PF_SDL2_GetScancodeName>(dlsym(SDL2_LIBRARY,"SDL_GetScancodeName"));
	//pSDL_GetShapedWindowMode = reinterpret_cast<PF_SDL2_GetShapedWindowMode>(dlsym(SDL2_LIBRARY,"SDL_GetShapedWindowMode"));
	SDL2::GetSurfaceAlphaMod = reinterpret_cast<PF_SDL2_GetSurfaceAlphaMod>(dlsym(SDL2_LIBRARY,"SDL_GetSurfaceAlphaMod"));
	SDL2::GetSurfaceBlendMode = reinterpret_cast<PF_SDL2_GetSurfaceBlendMode>(dlsym(SDL2_LIBRARY,"SDL_GetSurfaceBlendMode"));
	SDL2::GetSurfaceColorMod = reinterpret_cast<PF_SDL2_GetSurfaceColorMod>(dlsym(SDL2_LIBRARY,"SDL_GetSurfaceColorMod"));
	SDL2::GetSystemRAM = reinterpret_cast<PF_SDL2_GetSystemRAM>(dlsym(SDL2_LIBRARY,"SDL_GetSystemRAM"));
	SDL2::GetTextureAlphaMod = reinterpret_cast<PF_SDL2_GetTextureAlphaMod>(dlsym(SDL2_LIBRARY,"SDL_GetTextureAlphaMod"));
	SDL2::GetTextureBlendMode = reinterpret_cast<PF_SDL2_GetTextureBlendMode>(dlsym(SDL2_LIBRARY,"SDL_GetTextureBlendMode"));
	SDL2::GetTextureColorMod = reinterpret_cast<PF_SDL2_GetTextureColorMod>(dlsym(SDL2_LIBRARY,"SDL_GetTextureColorMod"));
	SDL2::GetThreadID = reinterpret_cast<PF_SDL2_GetThreadID>(dlsym(SDL2_LIBRARY,"SDL_GetThreadID"));
	SDL2::GetThreadName = reinterpret_cast<PF_SDL2_GetThreadName>(dlsym(SDL2_LIBRARY,"SDL_GetThreadName"));
	SDL2::GetTicks = reinterpret_cast<PF_SDL2_GetTicks>(dlsym(SDL2_LIBRARY,"SDL_GetTicks"));
	SDL2::GetTouchDevice = reinterpret_cast<PF_SDL2_GetTouchDevice>(dlsym(SDL2_LIBRARY,"SDL_GetTouchDevice"));
	SDL2::GetTouchFinger = reinterpret_cast<PF_SDL2_GetTouchFinger>(dlsym(SDL2_LIBRARY,"SDL_GetTouchFinger"));
	SDL2::GetVersion = reinterpret_cast<PF_SDL2_GetVersion>(dlsym(SDL2_LIBRARY,"SDL_GetVersion"));
	SDL2::GetVideoDriver = reinterpret_cast<PF_SDL2_GetVideoDriver>(dlsym(SDL2_LIBRARY,"SDL_GetVideoDriver"));
	SDL2::GetWindowBrightness = reinterpret_cast<PF_SDL2_GetWindowBrightness>(dlsym(SDL2_LIBRARY,"SDL_GetWindowBrightness"));
	SDL2::GetWindowData = reinterpret_cast<PF_SDL2_GetWindowData>(dlsym(SDL2_LIBRARY,"SDL_GetWindowData"));
	SDL2::GetWindowDisplayIndex = reinterpret_cast<PF_SDL2_GetWindowDisplayIndex>(dlsym(SDL2_LIBRARY,"SDL_GetWindowDisplayIndex"));
	SDL2::GetWindowDisplayMode = reinterpret_cast<PF_SDL2_GetWindowDisplayMode>(dlsym(SDL2_LIBRARY,"SDL_GetWindowDisplayMode"));
	SDL2::GetWindowFlags = reinterpret_cast<PF_SDL2_GetWindowFlags>(dlsym(SDL2_LIBRARY,"SDL_GetWindowFlags"));
	SDL2::GetWindowFromID = reinterpret_cast<PF_SDL2_GetWindowFromID>(dlsym(SDL2_LIBRARY,"SDL_GetWindowFromID"));
	SDL2::GetWindowGammaRamp = reinterpret_cast<PF_SDL2_GetWindowGammaRamp>(dlsym(SDL2_LIBRARY,"SDL_GetWindowGammaRamp"));
	SDL2::GetWindowGrab = reinterpret_cast<PF_SDL2_GetWindowGrab>(dlsym(SDL2_LIBRARY,"SDL_GetWindowGrab"));
	SDL2::GetWindowID = reinterpret_cast<PF_SDL2_GetWindowID>(dlsym(SDL2_LIBRARY,"SDL_GetWindowID"));
	SDL2::GetWindowMaximumSize = reinterpret_cast<PF_SDL2_GetWindowMaximumSize>(dlsym(SDL2_LIBRARY,"SDL_GetWindowMaximumSize"));
	SDL2::GetWindowMinimumSize = reinterpret_cast<PF_SDL2_GetWindowMinimumSize>(dlsym(SDL2_LIBRARY,"SDL_GetWindowMinimumSize"));
	SDL2::GetWindowPixelFormat = reinterpret_cast<PF_SDL2_GetWindowPixelFormat>(dlsym(SDL2_LIBRARY,"SDL_GetWindowPixelFormat"));
	SDL2::GetWindowPosition = reinterpret_cast<PF_SDL2_GetWindowPosition>(dlsym(SDL2_LIBRARY,"SDL_GetWindowPosition"));
	SDL2::GetWindowSize = reinterpret_cast<PF_SDL2_GetWindowSize>(dlsym(SDL2_LIBRARY,"SDL_GetWindowSize"));
	SDL2::GetWindowSurface = reinterpret_cast<PF_SDL2_GetWindowSurface>(dlsym(SDL2_LIBRARY,"SDL_GetWindowSurface"));
	SDL2::GetWindowTitle = reinterpret_cast<PF_SDL2_GetWindowTitle>(dlsym(SDL2_LIBRARY,"SDL_GetWindowTitle"));
	//pSDL_GetWindowWMInfo = reinterpret_cast<PF_SDL2_GetWindowWMInfo>(dlsym(SDL2_LIBRARY,"SDL_GetWindowWMInfo"));
	SDL2::HapticClose = reinterpret_cast<PF_SDL2_HapticClose>(dlsym(SDL2_LIBRARY,"SDL_HapticClose"));
	SDL2::HapticDestroyEffect = reinterpret_cast<PF_SDL2_HapticDestroyEffect>(dlsym(SDL2_LIBRARY,"SDL_HapticDestroyEffect"));
	SDL2::HapticEffectSupported = reinterpret_cast<PF_SDL2_HapticEffectSupported>(dlsym(SDL2_LIBRARY,"SDL_HapticEffectSupported"));
	SDL2::HapticGetEffectStatus = reinterpret_cast<PF_SDL2_HapticGetEffectStatus>(dlsym(SDL2_LIBRARY,"SDL_HapticGetEffectStatus"));
	SDL2::HapticIndex = reinterpret_cast<PF_SDL2_HapticIndex>(dlsym(SDL2_LIBRARY,"SDL_HapticIndex"));
	SDL2::HapticName = reinterpret_cast<PF_SDL2_HapticName>(dlsym(SDL2_LIBRARY,"SDL_HapticName"));
	SDL2::HapticNewEffect = reinterpret_cast<PF_SDL2_HapticNewEffect>(dlsym(SDL2_LIBRARY,"SDL_HapticNewEffect"));
	SDL2::HapticNumAxes = reinterpret_cast<PF_SDL2_HapticNumAxes>(dlsym(SDL2_LIBRARY,"SDL_HapticNumAxes"));
	SDL2::HapticNumEffects = reinterpret_cast<PF_SDL2_HapticNumEffects>(dlsym(SDL2_LIBRARY,"SDL_HapticNumEffects"));
	SDL2::HapticNumEffectsPlaying = reinterpret_cast<PF_SDL2_HapticNumEffectsPlaying>(dlsym(SDL2_LIBRARY,"SDL_HapticNumEffectsPlaying"));
	SDL2::HapticOpen = reinterpret_cast<PF_SDL2_HapticOpen>(dlsym(SDL2_LIBRARY,"SDL_HapticOpen"));
	SDL2::HapticOpenFromJoystick = reinterpret_cast<PF_SDL2_HapticOpenFromJoystick>(dlsym(SDL2_LIBRARY,"SDL_HapticOpenFromJoystick"));
	SDL2::HapticOpenFromMouse = reinterpret_cast<PF_SDL2_HapticOpenFromMouse>(dlsym(SDL2_LIBRARY,"SDL_HapticOpenFromMouse"));
	SDL2::HapticOpened = reinterpret_cast<PF_SDL2_HapticOpened>(dlsym(SDL2_LIBRARY,"SDL_HapticOpened"));
	SDL2::HapticPause = reinterpret_cast<PF_SDL2_HapticPause>(dlsym(SDL2_LIBRARY,"SDL_HapticPause"));
	SDL2::HapticQuery = reinterpret_cast<PF_SDL2_HapticQuery>(dlsym(SDL2_LIBRARY,"SDL_HapticQuery"));
	SDL2::HapticRumbleInit = reinterpret_cast<PF_SDL2_HapticRumbleInit>(dlsym(SDL2_LIBRARY,"SDL_HapticRumbleInit"));
	SDL2::HapticRumblePlay = reinterpret_cast<PF_SDL2_HapticRumblePlay>(dlsym(SDL2_LIBRARY,"SDL_HapticRumblePlay"));
	SDL2::HapticRumbleStop = reinterpret_cast<PF_SDL2_HapticRumbleStop>(dlsym(SDL2_LIBRARY,"SDL_HapticRumbleStop"));
	SDL2::HapticRumbleSupported = reinterpret_cast<PF_SDL2_HapticRumbleSupported>(dlsym(SDL2_LIBRARY,"SDL_HapticRumbleSupported"));
	SDL2::HapticRunEffect = reinterpret_cast<PF_SDL2_HapticRunEffect>(dlsym(SDL2_LIBRARY,"SDL_HapticRunEffect"));
	SDL2::HapticSetAutocenter = reinterpret_cast<PF_SDL2_HapticSetAutocenter>(dlsym(SDL2_LIBRARY,"SDL_HapticSetAutocenter"));
	SDL2::HapticSetGain = reinterpret_cast<PF_SDL2_HapticSetGain>(dlsym(SDL2_LIBRARY,"SDL_HapticSetGain"));
	SDL2::HapticStopAll = reinterpret_cast<PF_SDL2_HapticStopAll>(dlsym(SDL2_LIBRARY,"SDL_HapticStopAll"));
	SDL2::HapticStopEffect = reinterpret_cast<PF_SDL2_HapticStopEffect>(dlsym(SDL2_LIBRARY,"SDL_HapticStopEffect"));
	SDL2::HapticUnpause = reinterpret_cast<PF_SDL2_HapticUnpause>(dlsym(SDL2_LIBRARY,"SDL_HapticUnpause"));
	SDL2::HapticUpdateEffect = reinterpret_cast<PF_SDL2_HapticUpdateEffect>(dlsym(SDL2_LIBRARY,"SDL_HapticUpdateEffect"));
	SDL2::Has3DNow = reinterpret_cast<PF_SDL2_Has3DNow>(dlsym(SDL2_LIBRARY,"SDL_Has3DNow"));
	SDL2::HasAVX = reinterpret_cast<PF_SDL2_HasAVX>(dlsym(SDL2_LIBRARY,"SDL_HasAVX"));
	SDL2::HasAVX2 = reinterpret_cast<PF_SDL2_HasAVX2>(dlsym(SDL2_LIBRARY,"SDL_HasAVX2"));
	SDL2::HasAltiVec = reinterpret_cast<PF_SDL2_HasAltiVec>(dlsym(SDL2_LIBRARY,"SDL_HasAltiVec"));
	SDL2::HasClipboardText = reinterpret_cast<PF_SDL2_HasClipboardText>(dlsym(SDL2_LIBRARY,"SDL_HasClipboardText"));
	SDL2::HasEvent = reinterpret_cast<PF_SDL2_HasEvent>(dlsym(SDL2_LIBRARY,"SDL_HasEvent"));
	SDL2::HasEvents = reinterpret_cast<PF_SDL2_HasEvents>(dlsym(SDL2_LIBRARY,"SDL_HasEvents"));
	SDL2::HasIntersection = reinterpret_cast<PF_SDL2_HasIntersection>(dlsym(SDL2_LIBRARY,"SDL_HasIntersection"));
	SDL2::HasMMX = reinterpret_cast<PF_SDL2_HasMMX>(dlsym(SDL2_LIBRARY,"SDL_HasMMX"));
	SDL2::HasRDTSC = reinterpret_cast<PF_SDL2_HasRDTSC>(dlsym(SDL2_LIBRARY,"SDL_HasRDTSC"));
	SDL2::HasSSE = reinterpret_cast<PF_SDL2_HasSSE>(dlsym(SDL2_LIBRARY,"SDL_HasSSE"));
	SDL2::HasSSE2 = reinterpret_cast<PF_SDL2_HasSSE2>(dlsym(SDL2_LIBRARY,"SDL_HasSSE2"));
	SDL2::HasSSE3 = reinterpret_cast<PF_SDL2_HasSSE3>(dlsym(SDL2_LIBRARY,"SDL_HasSSE3"));
	SDL2::HasSSE41 = reinterpret_cast<PF_SDL2_HasSSE41>(dlsym(SDL2_LIBRARY,"SDL_HasSSE41"));
	SDL2::HasSSE42 = reinterpret_cast<PF_SDL2_HasSSE42>(dlsym(SDL2_LIBRARY,"SDL_HasSSE42"));
	SDL2::HasScreenKeyboardSupport = reinterpret_cast<PF_SDL2_HasScreenKeyboardSupport>(dlsym(SDL2_LIBRARY,"SDL_HasScreenKeyboardSupport"));
	SDL2::HideWindow = reinterpret_cast<PF_SDL2_HideWindow>(dlsym(SDL2_LIBRARY,"SDL_HideWindow"));
	SDL2::Init = reinterpret_cast<PF_SDL2_Init>(dlsym(SDL2_LIBRARY,"SDL_Init"));
	SDL2::InitSubSystem = reinterpret_cast<PF_SDL2_InitSubSystem>(dlsym(SDL2_LIBRARY,"SDL_InitSubSystem"));
	SDL2::IntersectRect = reinterpret_cast<PF_SDL2_IntersectRect>(dlsym(SDL2_LIBRARY,"SDL_IntersectRect"));
	SDL2::IntersectRectAndLine = reinterpret_cast<PF_SDL2_IntersectRectAndLine>(dlsym(SDL2_LIBRARY,"SDL_IntersectRectAndLine"));
	SDL2::IsGameController = reinterpret_cast<PF_SDL2_IsGameController>(dlsym(SDL2_LIBRARY,"SDL_IsGameController"));
	SDL2::IsScreenKeyboardShown = reinterpret_cast<PF_SDL2_IsScreenKeyboardShown>(dlsym(SDL2_LIBRARY,"SDL_IsScreenKeyboardShown"));
	SDL2::IsScreenSaverEnabled = reinterpret_cast<PF_SDL2_IsScreenSaverEnabled>(dlsym(SDL2_LIBRARY,"SDL_IsScreenSaverEnabled"));
	//pSDL_IsShapedWindow = reinterpret_cast<PF_SDL2_IsShapedWindow>(dlsym(SDL2_LIBRARY,"SDL_IsShapedWindow"));
	SDL2::IsTextInputActive = reinterpret_cast<PF_SDL2_IsTextInputActive>(dlsym(SDL2_LIBRARY,"SDL_IsTextInputActive"));
	SDL2::JoystickClose = reinterpret_cast<PF_SDL2_JoystickClose>(dlsym(SDL2_LIBRARY,"SDL_JoystickClose"));
	SDL2::JoystickCurrentPowerLevel = reinterpret_cast<PF_SDL2_JoystickCurrentPowerLevel>(dlsym(SDL2_LIBRARY,"SDL_JoystickCurrentPowerLevel"));
	SDL2::JoystickEventState = reinterpret_cast<PF_SDL2_JoystickEventState>(dlsym(SDL2_LIBRARY,"SDL_JoystickEventState"));
	SDL2::JoystickFromInstanceID = reinterpret_cast<PF_SDL2_JoystickFromInstanceID>(dlsym(SDL2_LIBRARY,"SDL_JoystickFromInstanceID"));
	SDL2::JoystickGetAttached = reinterpret_cast<PF_SDL2_JoystickGetAttached>(dlsym(SDL2_LIBRARY,"SDL_JoystickGetAttached"));
	SDL2::JoystickGetAxis = reinterpret_cast<PF_SDL2_JoystickGetAxis>(dlsym(SDL2_LIBRARY,"SDL_JoystickGetAxis"));
	SDL2::JoystickGetBall = reinterpret_cast<PF_SDL2_JoystickGetBall>(dlsym(SDL2_LIBRARY,"SDL_JoystickGetBall"));
	SDL2::JoystickGetButton = reinterpret_cast<PF_SDL2_JoystickGetButton>(dlsym(SDL2_LIBRARY,"SDL_JoystickGetButton"));
	SDL2::JoystickGetDeviceGUID = reinterpret_cast<PF_SDL2_JoystickGetDeviceGUID>(dlsym(SDL2_LIBRARY,"SDL_JoystickGetDeviceGUID"));
	SDL2::JoystickGetGUID = reinterpret_cast<PF_SDL2_JoystickGetGUID>(dlsym(SDL2_LIBRARY,"SDL_JoystickGetGUID"));
	SDL2::JoystickGetGUIDFromString = reinterpret_cast<PF_SDL2_JoystickGetGUIDFromString>(dlsym(SDL2_LIBRARY,"SDL_JoystickGetGUIDFromString"));
	SDL2::JoystickGetGUIDString = reinterpret_cast<PF_SDL2_JoystickGetGUIDString>(dlsym(SDL2_LIBRARY,"SDL_JoystickGetGUIDString"));
	SDL2::JoystickGetHat = reinterpret_cast<PF_SDL2_JoystickGetHat>(dlsym(SDL2_LIBRARY,"SDL_JoystickGetHat"));
	SDL2::JoystickInstanceID = reinterpret_cast<PF_SDL2_JoystickInstanceID>(dlsym(SDL2_LIBRARY,"SDL_JoystickInstanceID"));
	SDL2::JoystickIsHaptic = reinterpret_cast<PF_SDL2_JoystickIsHaptic>(dlsym(SDL2_LIBRARY,"SDL_JoystickIsHaptic"));
	SDL2::JoystickName = reinterpret_cast<PF_SDL2_JoystickName>(dlsym(SDL2_LIBRARY,"SDL_JoystickName"));
	SDL2::JoystickNameForIndex = reinterpret_cast<PF_SDL2_JoystickNameForIndex>(dlsym(SDL2_LIBRARY,"SDL_JoystickNameForIndex"));
	SDL2::JoystickNumAxes = reinterpret_cast<PF_SDL2_JoystickNumAxes>(dlsym(SDL2_LIBRARY,"SDL_JoystickNumAxes"));
	SDL2::JoystickNumBalls = reinterpret_cast<PF_SDL2_JoystickNumBalls>(dlsym(SDL2_LIBRARY,"SDL_JoystickNumBalls"));
	SDL2::JoystickNumButtons = reinterpret_cast<PF_SDL2_JoystickNumButtons>(dlsym(SDL2_LIBRARY,"SDL_JoystickNumButtons"));
	SDL2::JoystickNumHats = reinterpret_cast<PF_SDL2_JoystickNumHats>(dlsym(SDL2_LIBRARY,"SDL_JoystickNumHats"));
	SDL2::JoystickOpen = reinterpret_cast<PF_SDL2_JoystickOpen>(dlsym(SDL2_LIBRARY,"SDL_JoystickOpen"));
	SDL2::JoystickUpdate = reinterpret_cast<PF_SDL2_JoystickUpdate>(dlsym(SDL2_LIBRARY,"SDL_JoystickUpdate"));
	SDL2::LoadBMP_RW = reinterpret_cast<PF_SDL2_LoadBMP_RW>(dlsym(SDL2_LIBRARY,"SDL_LoadBMP_RW"));
	SDL2::LoadDollarTemplates = reinterpret_cast<PF_SDL2_LoadDollarTemplates>(dlsym(SDL2_LIBRARY,"SDL_LoadDollarTemplates"));
	SDL2::LoadFunction = reinterpret_cast<PF_SDL2_LoadFunction>(dlsym(SDL2_LIBRARY,"SDL_LoadFunction"));
	SDL2::LoadObject = reinterpret_cast<PF_SDL2_LoadObject>(dlsym(SDL2_LIBRARY,"SDL_LoadObject"));
	SDL2::LoadWAV_RW = reinterpret_cast<PF_SDL2_LoadWAV_RW>(dlsym(SDL2_LIBRARY,"SDL_LoadWAV_RW"));
	SDL2::LockAudio = reinterpret_cast<PF_SDL2_LockAudio>(dlsym(SDL2_LIBRARY,"SDL_LockAudio"));
	SDL2::LockAudioDevice = reinterpret_cast<PF_SDL2_LockAudioDevice>(dlsym(SDL2_LIBRARY,"SDL_LockAudioDevice"));
	SDL2::LockMutex = reinterpret_cast<PF_SDL2_LockMutex>(dlsym(SDL2_LIBRARY,"SDL_LockMutex"));
	SDL2::LockSurface = reinterpret_cast<PF_SDL2_LockSurface>(dlsym(SDL2_LIBRARY,"SDL_LockSurface"));
	SDL2::LockTexture = reinterpret_cast<PF_SDL2_LockTexture>(dlsym(SDL2_LIBRARY,"SDL_LockTexture"));
	SDL2::Log = reinterpret_cast<PF_SDL2_Log>(dlsym(SDL2_LIBRARY,"SDL_Log"));
	SDL2::LogCritical = reinterpret_cast<PF_SDL2_LogCritical>(dlsym(SDL2_LIBRARY,"SDL_LogCritical"));
	SDL2::LogDebug = reinterpret_cast<PF_SDL2_LogDebug>(dlsym(SDL2_LIBRARY,"SDL_LogDebug"));
	SDL2::LogError = reinterpret_cast<PF_SDL2_LogError>(dlsym(SDL2_LIBRARY,"SDL_LogError"));
	SDL2::LogGetOutputFunction = reinterpret_cast<PF_SDL2_LogGetOutputFunction>(dlsym(SDL2_LIBRARY,"SDL_LogGetOutputFunction"));
	SDL2::LogGetPriority = reinterpret_cast<PF_SDL2_LogGetPriority>(dlsym(SDL2_LIBRARY,"SDL_LogGetPriority"));
	SDL2::LogInfo = reinterpret_cast<PF_SDL2_LogInfo>(dlsym(SDL2_LIBRARY,"SDL_LogInfo"));
	SDL2::LogMessage = reinterpret_cast<PF_SDL2_LogMessage>(dlsym(SDL2_LIBRARY,"SDL_LogMessage"));
	SDL2::LogMessageV = reinterpret_cast<PF_SDL2_LogMessageV>(dlsym(SDL2_LIBRARY,"SDL_LogMessageV"));
	SDL2::LogResetPriorities = reinterpret_cast<PF_SDL2_LogResetPriorities>(dlsym(SDL2_LIBRARY,"SDL_LogResetPriorities"));
	SDL2::LogSetAllPriority = reinterpret_cast<PF_SDL2_LogSetAllPriority>(dlsym(SDL2_LIBRARY,"SDL_LogSetAllPriority"));
	SDL2::LogSetOutputFunction = reinterpret_cast<PF_SDL2_LogSetOutputFunction>(dlsym(SDL2_LIBRARY,"SDL_LogSetOutputFunction"));
	SDL2::LogSetPriority = reinterpret_cast<PF_SDL2_LogSetPriority>(dlsym(SDL2_LIBRARY,"SDL_LogSetPriority"));
	SDL2::LogVerbose = reinterpret_cast<PF_SDL2_LogVerbose>(dlsym(SDL2_LIBRARY,"SDL_LogVerbose"));
	SDL2::LogWarn = reinterpret_cast<PF_SDL2_LogWarn>(dlsym(SDL2_LIBRARY,"SDL_LogWarn"));
	SDL2::LowerBlit = reinterpret_cast<PF_SDL2_LowerBlit>(dlsym(SDL2_LIBRARY,"SDL_LowerBlit"));
	SDL2::LowerBlitScaled = reinterpret_cast<PF_SDL2_LowerBlitScaled>(dlsym(SDL2_LIBRARY,"SDL_LowerBlitScaled"));
	SDL2::MapRGB = reinterpret_cast<PF_SDL2_MapRGB>(dlsym(SDL2_LIBRARY,"SDL_MapRGB"));
	SDL2::MapRGBA = reinterpret_cast<PF_SDL2_MapRGBA>(dlsym(SDL2_LIBRARY,"SDL_MapRGBA"));
	SDL2::MasksToPixelFormatEnum = reinterpret_cast<PF_SDL2_MasksToPixelFormatEnum>(dlsym(SDL2_LIBRARY,"SDL_MasksToPixelFormatEnum"));
	SDL2::MaximizeWindow = reinterpret_cast<PF_SDL2_MaximizeWindow>(dlsym(SDL2_LIBRARY,"SDL_MaximizeWindow"));
	//pSDL_MemoryBarrierAcquire = reinterpret_cast<PF_SDL2_MemoryBarrierAcquire>(dlsym(SDL2_LIBRARY,"SDL_MemoryBarrierAcquire"));
	//pSDL_MemoryBarrierRelease = reinterpret_cast<PF_SDL2_MemoryBarrierRelease>(dlsym(SDL2_LIBRARY,"SDL_MemoryBarrierRelease"));
	SDL2::MinimizeWindow = reinterpret_cast<PF_SDL2_MinimizeWindow>(dlsym(SDL2_LIBRARY,"SDL_MinimizeWindow"));
	SDL2::MixAudio = reinterpret_cast<PF_SDL2_MixAudio>(dlsym(SDL2_LIBRARY,"SDL_MixAudio"));
	SDL2::MixAudioFormat = reinterpret_cast<PF_SDL2_MixAudioFormat>(dlsym(SDL2_LIBRARY,"SDL_MixAudioFormat"));
	//pSDL_MostSignificantBitIndex32 = reinterpret_cast<PF_SDL2_MostSignificantBitIndex32>(dlsym(SDL2_LIBRARY,"SDL_MostSignificantBitIndex32"));
	SDL2::MouseIsHaptic = reinterpret_cast<PF_SDL2_MouseIsHaptic>(dlsym(SDL2_LIBRARY,"SDL_MouseIsHaptic"));
	SDL2::NumHaptics = reinterpret_cast<PF_SDL2_NumHaptics>(dlsym(SDL2_LIBRARY,"SDL_NumHaptics"));
	SDL2::NumJoysticks = reinterpret_cast<PF_SDL2_NumJoysticks>(dlsym(SDL2_LIBRARY,"SDL_NumJoysticks"));
	SDL2::OpenAudio = reinterpret_cast<PF_SDL2_OpenAudio>(dlsym(SDL2_LIBRARY,"SDL_OpenAudio"));
	SDL2::OpenAudioDevice = reinterpret_cast<PF_SDL2_OpenAudioDevice>(dlsym(SDL2_LIBRARY,"SDL_OpenAudioDevice"));
	SDL2::PauseAudio = reinterpret_cast<PF_SDL2_PauseAudio>(dlsym(SDL2_LIBRARY,"SDL_PauseAudio"));
	SDL2::PauseAudioDevice = reinterpret_cast<PF_SDL2_PauseAudioDevice>(dlsym(SDL2_LIBRARY,"SDL_PauseAudioDevice"));
	SDL2::PeepEvents = reinterpret_cast<PF_SDL2_PeepEvents>(dlsym(SDL2_LIBRARY,"SDL_PeepEvents"));
	SDL2::PixelFormatEnumToMasks = reinterpret_cast<PF_SDL2_PixelFormatEnumToMasks>(dlsym(SDL2_LIBRARY,"SDL_PixelFormatEnumToMasks"));
	SDL2::PointInRect = reinterpret_cast<PF_SDL2_PointInRect>(dlsym(SDL2_LIBRARY,"SDL_PointInRect"));
	SDL2::PollEvent = reinterpret_cast<PF_SDL2_PollEvent>(dlsym(SDL2_LIBRARY,"SDL_PollEvent"));
	SDL2::PumpEvents = reinterpret_cast<PF_SDL2_PumpEvents>(dlsym(SDL2_LIBRARY,"SDL_PumpEvents"));
	SDL2::PushEvent = reinterpret_cast<PF_SDL2_PushEvent>(dlsym(SDL2_LIBRARY,"SDL_PushEvent"));
	SDL2::QueryTexture = reinterpret_cast<PF_SDL2_QueryTexture>(dlsym(SDL2_LIBRARY,"SDL_QueryTexture"));
	SDL2::QueueAudio = reinterpret_cast<PF_SDL2_QueueAudio>(dlsym(SDL2_LIBRARY,"SDL_QueueAudio"));
	SDL2::Quit = reinterpret_cast<PF_SDL2_Quit>(dlsym(SDL2_LIBRARY,"SDL_Quit"));
	SDL2::QuitSubSystem = reinterpret_cast<PF_SDL2_QuitSubSystem>(dlsym(SDL2_LIBRARY,"SDL_QuitSubSystem"));
	SDL2::RWFromConstMem = reinterpret_cast<PF_SDL2_RWFromConstMem>(dlsym(SDL2_LIBRARY,"SDL_RWFromConstMem"));
	SDL2::RWFromFP = reinterpret_cast<PF_SDL2_RWFromFP>(dlsym(SDL2_LIBRARY,"SDL_RWFromFP"));
	SDL2::RWFromFP = reinterpret_cast<PF_SDL2_RWFromFP>(dlsym(SDL2_LIBRARY,"SDL_RWFromFP"));
	SDL2::RWFromFile = reinterpret_cast<PF_SDL2_RWFromFile>(dlsym(SDL2_LIBRARY,"SDL_RWFromFile"));
	SDL2::RWFromMem = reinterpret_cast<PF_SDL2_RWFromMem>(dlsym(SDL2_LIBRARY,"SDL_RWFromMem"));
	SDL2::RaiseWindow = reinterpret_cast<PF_SDL2_RaiseWindow>(dlsym(SDL2_LIBRARY,"SDL_RaiseWindow"));
	SDL2::ReadBE16 = reinterpret_cast<PF_SDL2_ReadBE16>(dlsym(SDL2_LIBRARY,"SDL_ReadBE16"));
	SDL2::ReadBE32 = reinterpret_cast<PF_SDL2_ReadBE32>(dlsym(SDL2_LIBRARY,"SDL_ReadBE32"));
	SDL2::ReadBE64 = reinterpret_cast<PF_SDL2_ReadBE64>(dlsym(SDL2_LIBRARY,"SDL_ReadBE64"));
	SDL2::ReadLE16 = reinterpret_cast<PF_SDL2_ReadLE16>(dlsym(SDL2_LIBRARY,"SDL_ReadLE16"));
	SDL2::ReadLE32 = reinterpret_cast<PF_SDL2_ReadLE32>(dlsym(SDL2_LIBRARY,"SDL_ReadLE32"));
	SDL2::ReadLE64 = reinterpret_cast<PF_SDL2_ReadLE64>(dlsym(SDL2_LIBRARY,"SDL_ReadLE64"));
	SDL2::ReadU8 = reinterpret_cast<PF_SDL2_ReadU8>(dlsym(SDL2_LIBRARY,"SDL_ReadU8"));
	SDL2::RecordGesture = reinterpret_cast<PF_SDL2_RecordGesture>(dlsym(SDL2_LIBRARY,"SDL_RecordGesture"));
	SDL2::RectEmpty = reinterpret_cast<PF_SDL2_RectEmpty>(dlsym(SDL2_LIBRARY,"SDL_RectEmpty"));
	SDL2::RectEquals = reinterpret_cast<PF_SDL2_RectEquals>(dlsym(SDL2_LIBRARY,"SDL_RectEquals"));
	//pSDL_RegisterApp = reinterpret_cast<PF_SDL2_RegisterApp>(dlsym(SDL2_LIBRARY,"SDL_RegisterApp"));
	SDL2::RegisterEvents = reinterpret_cast<PF_SDL2_RegisterEvents>(dlsym(SDL2_LIBRARY,"SDL_RegisterEvents"));
	SDL2::RemoveTimer = reinterpret_cast<PF_SDL2_RemoveTimer>(dlsym(SDL2_LIBRARY,"SDL_RemoveTimer"));
	SDL2::RenderClear = reinterpret_cast<PF_SDL2_RenderClear>(dlsym(SDL2_LIBRARY,"SDL_RenderClear"));
	SDL2::RenderCopy = reinterpret_cast<PF_SDL2_RenderCopy>(dlsym(SDL2_LIBRARY,"SDL_RenderCopy"));
	SDL2::RenderCopyEx = reinterpret_cast<PF_SDL2_RenderCopyEx>(dlsym(SDL2_LIBRARY,"SDL_RenderCopyEx"));
	SDL2::RenderDrawLine = reinterpret_cast<PF_SDL2_RenderDrawLine>(dlsym(SDL2_LIBRARY,"SDL_RenderDrawLine"));
	SDL2::RenderDrawLines = reinterpret_cast<PF_SDL2_RenderDrawLines>(dlsym(SDL2_LIBRARY,"SDL_RenderDrawLines"));
	SDL2::RenderDrawPoint = reinterpret_cast<PF_SDL2_RenderDrawPoint>(dlsym(SDL2_LIBRARY,"SDL_RenderDrawPoint"));
	SDL2::RenderDrawPoints = reinterpret_cast<PF_SDL2_RenderDrawPoints>(dlsym(SDL2_LIBRARY,"SDL_RenderDrawPoints"));
	SDL2::RenderDrawRect = reinterpret_cast<PF_SDL2_RenderDrawRect>(dlsym(SDL2_LIBRARY,"SDL_RenderDrawRect"));
	SDL2::RenderDrawRects = reinterpret_cast<PF_SDL2_RenderDrawRects>(dlsym(SDL2_LIBRARY,"SDL_RenderDrawRects"));
	SDL2::RenderFillRect = reinterpret_cast<PF_SDL2_RenderFillRect>(dlsym(SDL2_LIBRARY,"SDL_RenderFillRect"));
	SDL2::RenderFillRects = reinterpret_cast<PF_SDL2_RenderFillRects>(dlsym(SDL2_LIBRARY,"SDL_RenderFillRects"));
	SDL2::RenderGetClipRect = reinterpret_cast<PF_SDL2_RenderGetClipRect>(dlsym(SDL2_LIBRARY,"SDL_RenderGetClipRect"));
	//pSDL_RenderGetD3D9Device = reinterpret_cast<PF_SDL2_RenderGetD3D9Device>(dlsym(SDL2_LIBRARY,"SDL_RenderGetD3D9Device"));
	SDL2::RenderGetLogicalSize = reinterpret_cast<PF_SDL2_RenderGetLogicalSize>(dlsym(SDL2_LIBRARY,"SDL_RenderGetLogicalSize"));
	SDL2::RenderGetScale = reinterpret_cast<PF_SDL2_RenderGetScale>(dlsym(SDL2_LIBRARY,"SDL_RenderGetScale"));
	SDL2::RenderGetViewport = reinterpret_cast<PF_SDL2_RenderGetViewport>(dlsym(SDL2_LIBRARY,"SDL_RenderGetViewport"));
	SDL2::RenderIsClipEnabled = reinterpret_cast<PF_SDL2_RenderIsClipEnabled>(dlsym(SDL2_LIBRARY,"SDL_RenderIsClipEnabled"));
	SDL2::RenderPresent = reinterpret_cast<PF_SDL2_RenderPresent>(dlsym(SDL2_LIBRARY,"SDL_RenderPresent"));
	SDL2::RenderReadPixels = reinterpret_cast<PF_SDL2_RenderReadPixels>(dlsym(SDL2_LIBRARY,"SDL_RenderReadPixels"));
	SDL2::RenderSetClipRect = reinterpret_cast<PF_SDL2_RenderSetClipRect>(dlsym(SDL2_LIBRARY,"SDL_RenderSetClipRect"));
	SDL2::RenderSetLogicalSize = reinterpret_cast<PF_SDL2_RenderSetLogicalSize>(dlsym(SDL2_LIBRARY,"SDL_RenderSetLogicalSize"));
	SDL2::RenderSetScale = reinterpret_cast<PF_SDL2_RenderSetScale>(dlsym(SDL2_LIBRARY,"SDL_RenderSetScale"));
	SDL2::RenderSetViewport = reinterpret_cast<PF_SDL2_RenderSetViewport>(dlsym(SDL2_LIBRARY,"SDL_RenderSetViewport"));
	SDL2::RenderTargetSupported = reinterpret_cast<PF_SDL2_RenderTargetSupported>(dlsym(SDL2_LIBRARY,"SDL_RenderTargetSupported"));
	SDL2::ReportAssertion = reinterpret_cast<PF_SDL2_ReportAssertion>(dlsym(SDL2_LIBRARY,"SDL_ReportAssertion"));
	SDL2::ResetAssertionReport = reinterpret_cast<PF_SDL2_ResetAssertionReport>(dlsym(SDL2_LIBRARY,"SDL_ResetAssertionReport"));
	SDL2::RestoreWindow = reinterpret_cast<PF_SDL2_RestoreWindow>(dlsym(SDL2_LIBRARY,"SDL_RestoreWindow"));
	SDL2::SaveAllDollarTemplates = reinterpret_cast<PF_SDL2_SaveAllDollarTemplates>(dlsym(SDL2_LIBRARY,"SDL_SaveAllDollarTemplates"));
	SDL2::SaveBMP_RW = reinterpret_cast<PF_SDL2_SaveBMP_RW>(dlsym(SDL2_LIBRARY,"SDL_SaveBMP_RW"));
	SDL2::SaveDollarTemplate = reinterpret_cast<PF_SDL2_SaveDollarTemplate>(dlsym(SDL2_LIBRARY,"SDL_SaveDollarTemplate"));
	SDL2::SemPost = reinterpret_cast<PF_SDL2_SemPost>(dlsym(SDL2_LIBRARY,"SDL_SemPost"));
	SDL2::SemTryWait = reinterpret_cast<PF_SDL2_SemTryWait>(dlsym(SDL2_LIBRARY,"SDL_SemTryWait"));
	SDL2::SemValue = reinterpret_cast<PF_SDL2_SemValue>(dlsym(SDL2_LIBRARY,"SDL_SemValue"));
	SDL2::SemWait = reinterpret_cast<PF_SDL2_SemWait>(dlsym(SDL2_LIBRARY,"SDL_SemWait"));
	SDL2::SemWaitTimeout = reinterpret_cast<PF_SDL2_SemWaitTimeout>(dlsym(SDL2_LIBRARY,"SDL_SemWaitTimeout"));
	SDL2::SetAssertionHandler = reinterpret_cast<PF_SDL2_SetAssertionHandler>(dlsym(SDL2_LIBRARY,"SDL_SetAssertionHandler"));
	SDL2::SetClipRect = reinterpret_cast<PF_SDL2_SetClipRect>(dlsym(SDL2_LIBRARY,"SDL_SetClipRect"));
	SDL2::SetClipboardText = reinterpret_cast<PF_SDL2_SetClipboardText>(dlsym(SDL2_LIBRARY,"SDL_SetClipboardText"));
	SDL2::SetColorKey = reinterpret_cast<PF_SDL2_SetColorKey>(dlsym(SDL2_LIBRARY,"SDL_SetColorKey"));
	SDL2::SetCursor = reinterpret_cast<PF_SDL2_SetCursor>(dlsym(SDL2_LIBRARY,"SDL_SetCursor"));
	SDL2::SetError = reinterpret_cast<PF_SDL2_SetError>(dlsym(SDL2_LIBRARY,"SDL_SetError"));
	SDL2::SetEventFilter = reinterpret_cast<PF_SDL2_SetEventFilter>(dlsym(SDL2_LIBRARY,"SDL_SetEventFilter"));
	SDL2::SetHint = reinterpret_cast<PF_SDL2_SetHint>(dlsym(SDL2_LIBRARY,"SDL_SetHint"));
	SDL2::SetHintWithPriority = reinterpret_cast<PF_SDL2_SetHintWithPriority>(dlsym(SDL2_LIBRARY,"SDL_SetHintWithPriority"));
	SDL2::SetMainReady = reinterpret_cast<PF_SDL2_SetMainReady>(dlsym(SDL2_LIBRARY,"SDL_SetMainReady"));
	SDL2::SetModState = reinterpret_cast<PF_SDL2_SetModState>(dlsym(SDL2_LIBRARY,"SDL_SetModState"));
	SDL2::SetPaletteColors = reinterpret_cast<PF_SDL2_SetPaletteColors>(dlsym(SDL2_LIBRARY,"SDL_SetPaletteColors"));
	SDL2::SetPixelFormatPalette = reinterpret_cast<PF_SDL2_SetPixelFormatPalette>(dlsym(SDL2_LIBRARY,"SDL_SetPixelFormatPalette"));
	SDL2::SetRelativeMouseMode = reinterpret_cast<PF_SDL2_SetRelativeMouseMode>(dlsym(SDL2_LIBRARY,"SDL_SetRelativeMouseMode"));
	SDL2::SetRenderDrawBlendMode = reinterpret_cast<PF_SDL2_SetRenderDrawBlendMode>(dlsym(SDL2_LIBRARY,"SDL_SetRenderDrawBlendMode"));
	SDL2::SetRenderDrawColor = reinterpret_cast<PF_SDL2_SetRenderDrawColor>(dlsym(SDL2_LIBRARY,"SDL_SetRenderDrawColor"));
	SDL2::SetRenderTarget = reinterpret_cast<PF_SDL2_SetRenderTarget>(dlsym(SDL2_LIBRARY,"SDL_SetRenderTarget"));
	SDL2::SetSurfaceAlphaMod = reinterpret_cast<PF_SDL2_SetSurfaceAlphaMod>(dlsym(SDL2_LIBRARY,"SDL_SetSurfaceAlphaMod"));
	SDL2::SetSurfaceBlendMode = reinterpret_cast<PF_SDL2_SetSurfaceBlendMode>(dlsym(SDL2_LIBRARY,"SDL_SetSurfaceBlendMode"));
	SDL2::SetSurfaceColorMod = reinterpret_cast<PF_SDL2_SetSurfaceColorMod>(dlsym(SDL2_LIBRARY,"SDL_SetSurfaceColorMod"));
	SDL2::SetSurfacePalette = reinterpret_cast<PF_SDL2_SetSurfacePalette>(dlsym(SDL2_LIBRARY,"SDL_SetSurfacePalette"));
	SDL2::SetSurfaceRLE = reinterpret_cast<PF_SDL2_SetSurfaceRLE>(dlsym(SDL2_LIBRARY,"SDL_SetSurfaceRLE"));
	SDL2::SetTextInputRect = reinterpret_cast<PF_SDL2_SetTextInputRect>(dlsym(SDL2_LIBRARY,"SDL_SetTextInputRect"));
	SDL2::SetTextureAlphaMod = reinterpret_cast<PF_SDL2_SetTextureAlphaMod>(dlsym(SDL2_LIBRARY,"SDL_SetTextureAlphaMod"));
	SDL2::SetTextureBlendMode = reinterpret_cast<PF_SDL2_SetTextureBlendMode>(dlsym(SDL2_LIBRARY,"SDL_SetTextureBlendMode"));
	SDL2::SetTextureColorMod = reinterpret_cast<PF_SDL2_SetTextureColorMod>(dlsym(SDL2_LIBRARY,"SDL_SetTextureColorMod"));
	SDL2::SetThreadPriority = reinterpret_cast<PF_SDL2_SetThreadPriority>(dlsym(SDL2_LIBRARY,"SDL_SetThreadPriority"));
	SDL2::SetWindowBordered = reinterpret_cast<PF_SDL2_SetWindowBordered>(dlsym(SDL2_LIBRARY,"SDL_SetWindowBordered"));
	SDL2::SetWindowBrightness = reinterpret_cast<PF_SDL2_SetWindowBrightness>(dlsym(SDL2_LIBRARY,"SDL_SetWindowBrightness"));
	SDL2::SetWindowData = reinterpret_cast<PF_SDL2_SetWindowData>(dlsym(SDL2_LIBRARY,"SDL_SetWindowData"));
	SDL2::SetWindowDisplayMode = reinterpret_cast<PF_SDL2_SetWindowDisplayMode>(dlsym(SDL2_LIBRARY,"SDL_SetWindowDisplayMode"));
	SDL2::SetWindowFullscreen = reinterpret_cast<PF_SDL2_SetWindowFullscreen>(dlsym(SDL2_LIBRARY,"SDL_SetWindowFullscreen"));
	SDL2::SetWindowGammaRamp = reinterpret_cast<PF_SDL2_SetWindowGammaRamp>(dlsym(SDL2_LIBRARY,"SDL_SetWindowGammaRamp"));
	SDL2::SetWindowGrab = reinterpret_cast<PF_SDL2_SetWindowGrab>(dlsym(SDL2_LIBRARY,"SDL_SetWindowGrab"));
	SDL2::SetWindowHitTest = reinterpret_cast<PF_SDL2_SetWindowHitTest>(dlsym(SDL2_LIBRARY,"SDL_SetWindowHitTest"));
	SDL2::SetWindowIcon = reinterpret_cast<PF_SDL2_SetWindowIcon>(dlsym(SDL2_LIBRARY,"SDL_SetWindowIcon"));
	SDL2::SetWindowMaximumSize = reinterpret_cast<PF_SDL2_SetWindowMaximumSize>(dlsym(SDL2_LIBRARY,"SDL_SetWindowMaximumSize"));
	SDL2::SetWindowMinimumSize = reinterpret_cast<PF_SDL2_SetWindowMinimumSize>(dlsym(SDL2_LIBRARY,"SDL_SetWindowMinimumSize"));
	SDL2::SetWindowPosition = reinterpret_cast<PF_SDL2_SetWindowPosition>(dlsym(SDL2_LIBRARY,"SDL_SetWindowPosition"));
	//pSDL_SetWindowShape = reinterpret_cast<PF_SDL2_SetWindowShape>(dlsym(SDL2_LIBRARY,"SDL_SetWindowShape"));
	SDL2::SetWindowSize = reinterpret_cast<PF_SDL2_SetWindowSize>(dlsym(SDL2_LIBRARY,"SDL_SetWindowSize"));
	SDL2::SetWindowTitle = reinterpret_cast<PF_SDL2_SetWindowTitle>(dlsym(SDL2_LIBRARY,"SDL_SetWindowTitle"));
	//pSDL_SetWindowsMessageHook = reinterpret_cast<PF_SDL2_SetWindowsMessageHook>(dlsym(SDL2_LIBRARY,"SDL_SetWindowsMessageHook"));
	SDL2::ShowCursor = reinterpret_cast<PF_SDL2_ShowCursor>(dlsym(SDL2_LIBRARY,"SDL_ShowCursor"));
	SDL2::ShowMessageBox = reinterpret_cast<PF_SDL2_ShowMessageBox>(dlsym(SDL2_LIBRARY,"SDL_ShowMessageBox"));
	SDL2::ShowSimpleMessageBox = reinterpret_cast<PF_SDL2_ShowSimpleMessageBox>(dlsym(SDL2_LIBRARY,"SDL_ShowSimpleMessageBox"));
	SDL2::ShowWindow = reinterpret_cast<PF_SDL2_ShowWindow>(dlsym(SDL2_LIBRARY,"SDL_ShowWindow"));
	SDL2::SoftStretch = reinterpret_cast<PF_SDL2_SoftStretch>(dlsym(SDL2_LIBRARY,"SDL_SoftStretch"));
	SDL2::StartTextInput = reinterpret_cast<PF_SDL2_StartTextInput>(dlsym(SDL2_LIBRARY,"SDL_StartTextInput"));
	SDL2::StopTextInput = reinterpret_cast<PF_SDL2_StopTextInput>(dlsym(SDL2_LIBRARY,"SDL_StopTextInput"));
	/*pSDL_Swap16 = reinterpret_cast<PF_SDL2_Swap16>(dlsym(SDL2_LIBRARY,"SDL_Swap16"));
	SDL2::Swap32 = reinterpret_cast<PF_SDL2_Swap32>(dlsym(SDL2_LIBRARY,"SDL_Swap32"));
	SDL2::Swap32 = reinterpret_cast<PF_SDL2_Swap32>(dlsym(SDL2_LIBRARY,"SDL_Swap32"));
	SDL2::Swap32 = reinterpret_cast<PF_SDL2_Swap32>(dlsym(SDL2_LIBRARY,"SDL_Swap32"));
	SDL2::Swap32 = reinterpret_cast<PF_SDL2_Swap32>(dlsym(SDL2_LIBRARY,"SDL_Swap32"));
	SDL2::Swap32 = reinterpret_cast<PF_SDL2_Swap32>(dlsym(SDL2_LIBRARY,"SDL_Swap32"));
	SDL2::Swap64 = reinterpret_cast<PF_SDL2_Swap64>(dlsym(SDL2_LIBRARY,"SDL_Swap64"));
	SDL2::Swap64 = reinterpret_cast<PF_SDL2_Swap64>(dlsym(SDL2_LIBRARY,"SDL_Swap64"));
	SDL2::Swap64 = reinterpret_cast<PF_SDL2_Swap64>(dlsym(SDL2_LIBRARY,"SDL_Swap64"));*/
	SDL2::SwapFloat = reinterpret_cast<PF_SDL2_SwapFloat>(dlsym(SDL2_LIBRARY,"SDL_SwapFloat"));
	SDL2::TLSCreate = reinterpret_cast<PF_SDL2_TLSCreate>(dlsym(SDL2_LIBRARY,"SDL_TLSCreate"));
	SDL2::TLSGet = reinterpret_cast<PF_SDL2_TLSGet>(dlsym(SDL2_LIBRARY,"SDL_TLSGet"));
	SDL2::TLSSet = reinterpret_cast<PF_SDL2_TLSSet>(dlsym(SDL2_LIBRARY,"SDL_TLSSet"));
	SDL2::ThreadID = reinterpret_cast<PF_SDL2_ThreadID>(dlsym(SDL2_LIBRARY,"SDL_ThreadID"));
	SDL2::TryLockMutex = reinterpret_cast<PF_SDL2_TryLockMutex>(dlsym(SDL2_LIBRARY,"SDL_TryLockMutex"));
	SDL2::UnionRect = reinterpret_cast<PF_SDL2_UnionRect>(dlsym(SDL2_LIBRARY,"SDL_UnionRect"));
	SDL2::UnloadObject = reinterpret_cast<PF_SDL2_UnloadObject>(dlsym(SDL2_LIBRARY,"SDL_UnloadObject"));
	SDL2::UnlockAudio = reinterpret_cast<PF_SDL2_UnlockAudio>(dlsym(SDL2_LIBRARY,"SDL_UnlockAudio"));
	SDL2::UnlockAudioDevice = reinterpret_cast<PF_SDL2_UnlockAudioDevice>(dlsym(SDL2_LIBRARY,"SDL_UnlockAudioDevice"));
	SDL2::UnlockMutex = reinterpret_cast<PF_SDL2_UnlockMutex>(dlsym(SDL2_LIBRARY,"SDL_UnlockMutex"));
	SDL2::UnlockSurface = reinterpret_cast<PF_SDL2_UnlockSurface>(dlsym(SDL2_LIBRARY,"SDL_UnlockSurface"));
	SDL2::UnlockTexture = reinterpret_cast<PF_SDL2_UnlockTexture>(dlsym(SDL2_LIBRARY,"SDL_UnlockTexture"));
	//pSDL_UnregisterApp = reinterpret_cast<PF_SDL2_UnregisterApp>(dlsym(SDL2_LIBRARY,"SDL_UnregisterApp"));
	SDL2::UpdateTexture = reinterpret_cast<PF_SDL2_UpdateTexture>(dlsym(SDL2_LIBRARY,"SDL_UpdateTexture"));
	SDL2::UpdateWindowSurface = reinterpret_cast<PF_SDL2_UpdateWindowSurface>(dlsym(SDL2_LIBRARY,"SDL_UpdateWindowSurface"));
	SDL2::UpdateWindowSurfaceRects = reinterpret_cast<PF_SDL2_UpdateWindowSurfaceRects>(dlsym(SDL2_LIBRARY,"SDL_UpdateWindowSurfaceRects"));
	SDL2::UpdateYUVTexture = reinterpret_cast<PF_SDL2_UpdateYUVTexture>(dlsym(SDL2_LIBRARY,"SDL_UpdateYUVTexture"));
	SDL2::UpperBlit = reinterpret_cast<PF_SDL2_UpperBlit>(dlsym(SDL2_LIBRARY,"SDL_UpperBlit"));
	SDL2::UpperBlitScaled = reinterpret_cast<PF_SDL2_UpperBlitScaled>(dlsym(SDL2_LIBRARY,"SDL_UpperBlitScaled"));
	SDL2::VideoInit = reinterpret_cast<PF_SDL2_VideoInit>(dlsym(SDL2_LIBRARY,"SDL_VideoInit"));
	SDL2::VideoQuit = reinterpret_cast<PF_SDL2_VideoQuit>(dlsym(SDL2_LIBRARY,"SDL_VideoQuit"));
	SDL2::WaitEvent = reinterpret_cast<PF_SDL2_WaitEvent>(dlsym(SDL2_LIBRARY,"SDL_WaitEvent"));
	SDL2::WaitEventTimeout = reinterpret_cast<PF_SDL2_WaitEventTimeout>(dlsym(SDL2_LIBRARY,"SDL_WaitEventTimeout"));
	SDL2::WaitThread = reinterpret_cast<PF_SDL2_WaitThread>(dlsym(SDL2_LIBRARY,"SDL_WaitThread"));
	SDL2::WarpMouseGlobal = reinterpret_cast<PF_SDL2_WarpMouseGlobal>(dlsym(SDL2_LIBRARY,"SDL_WarpMouseGlobal"));
	SDL2::WarpMouseInWindow = reinterpret_cast<PF_SDL2_WarpMouseInWindow>(dlsym(SDL2_LIBRARY,"SDL_WarpMouseInWindow"));
	SDL2::WasInit = reinterpret_cast<PF_SDL2_WasInit>(dlsym(SDL2_LIBRARY,"SDL_WasInit"));
	//pSDL_WinRTGetFSPathUNICODE = reinterpret_cast<PF_SDL2_WinRTGetFSPathUNICODE>(dlsym(SDL2_LIBRARY,"SDL_WinRTGetFSPathUNICODE"));
	//pSDL_WinRTGetFSPathUTF8 = reinterpret_cast<PF_SDL2_WinRTGetFSPathUTF8>(dlsym(SDL2_LIBRARY,"SDL_WinRTGetFSPathUTF8"));
	//pSDL_WinRTRunApp = reinterpret_cast<PF_SDL2_WinRTRunApp>(dlsym(SDL2_LIBRARY,"SDL_WinRTRunApp"));
	SDL2::WriteBE16 = reinterpret_cast<PF_SDL2_WriteBE16>(dlsym(SDL2_LIBRARY,"SDL_WriteBE16"));
	SDL2::WriteBE32 = reinterpret_cast<PF_SDL2_WriteBE32>(dlsym(SDL2_LIBRARY,"SDL_WriteBE32"));
	SDL2::WriteBE64 = reinterpret_cast<PF_SDL2_WriteBE64>(dlsym(SDL2_LIBRARY,"SDL_WriteBE64"));
	SDL2::WriteLE16 = reinterpret_cast<PF_SDL2_WriteLE16>(dlsym(SDL2_LIBRARY,"SDL_WriteLE16"));
	SDL2::WriteLE32 = reinterpret_cast<PF_SDL2_WriteLE32>(dlsym(SDL2_LIBRARY,"SDL_WriteLE32"));
	SDL2::WriteLE64 = reinterpret_cast<PF_SDL2_WriteLE64>(dlsym(SDL2_LIBRARY,"SDL_WriteLE64"));
	SDL2::WriteU8 = reinterpret_cast<PF_SDL2_WriteU8>(dlsym(SDL2_LIBRARY,"SDL_WriteU8"));
	SDL2::abs = reinterpret_cast<PF_SDL2_abs>(dlsym(SDL2_LIBRARY,"SDL_abs"));
	SDL2::acos = reinterpret_cast<PF_SDL2_acos>(dlsym(SDL2_LIBRARY,"SDL_acos"));
	SDL2::asin = reinterpret_cast<PF_SDL2_asin>(dlsym(SDL2_LIBRARY,"SDL_asin"));
	SDL2::atan = reinterpret_cast<PF_SDL2_atan>(dlsym(SDL2_LIBRARY,"SDL_atan"));
	SDL2::atan2 = reinterpret_cast<PF_SDL2_atan2>(dlsym(SDL2_LIBRARY,"SDL_atan2"));
	SDL2::atof = reinterpret_cast<PF_SDL2_atof>(dlsym(SDL2_LIBRARY,"SDL_atof"));
	SDL2::atoi = reinterpret_cast<PF_SDL2_atoi>(dlsym(SDL2_LIBRARY,"SDL_atoi"));
	SDL2::calloc = reinterpret_cast<PF_SDL2_calloc>(dlsym(SDL2_LIBRARY,"SDL_calloc"));
	SDL2::ceil = reinterpret_cast<PF_SDL2_ceil>(dlsym(SDL2_LIBRARY,"SDL_ceil"));
	SDL2::copysign = reinterpret_cast<PF_SDL2_copysign>(dlsym(SDL2_LIBRARY,"SDL_copysign"));
	SDL2::cos = reinterpret_cast<PF_SDL2_cos>(dlsym(SDL2_LIBRARY,"SDL_cos"));
	SDL2::cosf = reinterpret_cast<PF_SDL2_cosf>(dlsym(SDL2_LIBRARY,"SDL_cosf"));
	SDL2::fabs = reinterpret_cast<PF_SDL2_fabs>(dlsym(SDL2_LIBRARY,"SDL_fabs"));
	SDL2::floor = reinterpret_cast<PF_SDL2_floor>(dlsym(SDL2_LIBRARY,"SDL_floor"));
	SDL2::free = reinterpret_cast<PF_SDL2_free>(dlsym(SDL2_LIBRARY,"SDL_free"));
	SDL2::getenv = reinterpret_cast<PF_SDL2_getenv>(dlsym(SDL2_LIBRARY,"SDL_getenv"));
	//pSDL_iPhoneSetAnimationCallback = reinterpret_cast<PF_SDL2_iPhoneSetAnimationCallback>(dlsym(SDL2_LIBRARY,"SDL_iPhoneSetAnimationCallback"));
	//pSDL_iPhoneSetEventPump = reinterpret_cast<PF_SDL2_iPhoneSetEventPump>(dlsym(SDL2_LIBRARY,"SDL_iPhoneSetEventPump"));
	SDL2::iconv = reinterpret_cast<PF_SDL2_iconv>(dlsym(SDL2_LIBRARY,"SDL_iconv"));
	SDL2::iconv_close = reinterpret_cast<PF_SDL2_iconv_close>(dlsym(SDL2_LIBRARY,"SDL_iconv_close"));
	SDL2::iconv_open = reinterpret_cast<PF_SDL2_iconv_open>(dlsym(SDL2_LIBRARY,"SDL_iconv_open"));
	SDL2::iconv_string = reinterpret_cast<PF_SDL2_iconv_string>(dlsym(SDL2_LIBRARY,"SDL_iconv_string"));
	SDL2::isdigit = reinterpret_cast<PF_SDL2_isdigit>(dlsym(SDL2_LIBRARY,"SDL_isdigit"));
	SDL2::isspace = reinterpret_cast<PF_SDL2_isspace>(dlsym(SDL2_LIBRARY,"SDL_isspace"));
	SDL2::itoa = reinterpret_cast<PF_SDL2_itoa>(dlsym(SDL2_LIBRARY,"SDL_itoa"));
	SDL2::lltoa = reinterpret_cast<PF_SDL2_lltoa>(dlsym(SDL2_LIBRARY,"SDL_lltoa"));
	SDL2::log = reinterpret_cast<PF_SDL2_log>(dlsym(SDL2_LIBRARY,"SDL_log"));
	SDL2::ltoa = reinterpret_cast<PF_SDL2_ltoa>(dlsym(SDL2_LIBRARY,"SDL_ltoa"));
	SDL2::main = reinterpret_cast<PF_SDL2_main>(dlsym(SDL2_LIBRARY,"SDL_main"));
	SDL2::malloc = reinterpret_cast<PF_SDL2_malloc>(dlsym(SDL2_LIBRARY,"SDL_malloc"));
	SDL2::memcmp = reinterpret_cast<PF_SDL2_memcmp>(dlsym(SDL2_LIBRARY,"SDL_memcmp"));
	SDL2::memcpy = reinterpret_cast<PF_SDL2_memcpy>(dlsym(SDL2_LIBRARY,"SDL_memcpy"));
	SDL2::memmove = reinterpret_cast<PF_SDL2_memmove>(dlsym(SDL2_LIBRARY,"SDL_memmove"));
	SDL2::memset = reinterpret_cast<PF_SDL2_memset>(dlsym(SDL2_LIBRARY,"SDL_memset"));
	SDL2::memset4 = reinterpret_cast<PF_SDL2_memset4>(dlsym(SDL2_LIBRARY,"SDL_memset4"));
	SDL2::pow = reinterpret_cast<PF_SDL2_pow>(dlsym(SDL2_LIBRARY,"SDL_pow"));
	SDL2::qsort = reinterpret_cast<PF_SDL2_qsort>(dlsym(SDL2_LIBRARY,"SDL_qsort"));
	SDL2::realloc = reinterpret_cast<PF_SDL2_realloc>(dlsym(SDL2_LIBRARY,"SDL_realloc"));
	SDL2::scalbn = reinterpret_cast<PF_SDL2_scalbn>(dlsym(SDL2_LIBRARY,"SDL_scalbn"));
	SDL2::setenv = reinterpret_cast<PF_SDL2_setenv>(dlsym(SDL2_LIBRARY,"SDL_setenv"));
	SDL2::sin = reinterpret_cast<PF_SDL2_sin>(dlsym(SDL2_LIBRARY,"SDL_sin"));
	SDL2::sinf = reinterpret_cast<PF_SDL2_sinf>(dlsym(SDL2_LIBRARY,"SDL_sinf"));
	SDL2::snprintf = reinterpret_cast<PF_SDL2_snprintf>(dlsym(SDL2_LIBRARY,"SDL_snprintf"));
	SDL2::sqrt = reinterpret_cast<PF_SDL2_sqrt>(dlsym(SDL2_LIBRARY,"SDL_sqrt"));
	SDL2::sqrtf = reinterpret_cast<PF_SDL2_sqrtf>(dlsym(SDL2_LIBRARY,"SDL_sqrtf"));
	SDL2::sscanf = reinterpret_cast<PF_SDL2_sscanf>(dlsym(SDL2_LIBRARY,"SDL_sscanf"));
	SDL2::strcasecmp = reinterpret_cast<PF_SDL2_strcasecmp>(dlsym(SDL2_LIBRARY,"SDL_strcasecmp"));
	SDL2::strchr = reinterpret_cast<PF_SDL2_strchr>(dlsym(SDL2_LIBRARY,"SDL_strchr"));
	SDL2::strcmp = reinterpret_cast<PF_SDL2_strcmp>(dlsym(SDL2_LIBRARY,"SDL_strcmp"));
	SDL2::strdup = reinterpret_cast<PF_SDL2_strdup>(dlsym(SDL2_LIBRARY,"SDL_strdup"));
	SDL2::strlcat = reinterpret_cast<PF_SDL2_strlcat>(dlsym(SDL2_LIBRARY,"SDL_strlcat"));
	SDL2::strlcpy = reinterpret_cast<PF_SDL2_strlcpy>(dlsym(SDL2_LIBRARY,"SDL_strlcpy"));
	SDL2::strlen = reinterpret_cast<PF_SDL2_strlen>(dlsym(SDL2_LIBRARY,"SDL_strlen"));
	SDL2::strlwr = reinterpret_cast<PF_SDL2_strlwr>(dlsym(SDL2_LIBRARY,"SDL_strlwr"));
	SDL2::strncasecmp = reinterpret_cast<PF_SDL2_strncasecmp>(dlsym(SDL2_LIBRARY,"SDL_strncasecmp"));
	SDL2::strncmp = reinterpret_cast<PF_SDL2_strncmp>(dlsym(SDL2_LIBRARY,"SDL_strncmp"));
	SDL2::strrchr = reinterpret_cast<PF_SDL2_strrchr>(dlsym(SDL2_LIBRARY,"SDL_strrchr"));
	SDL2::strrev = reinterpret_cast<PF_SDL2_strrev>(dlsym(SDL2_LIBRARY,"SDL_strrev"));
	SDL2::strstr = reinterpret_cast<PF_SDL2_strstr>(dlsym(SDL2_LIBRARY,"SDL_strstr"));
	SDL2::strtod = reinterpret_cast<PF_SDL2_strtod>(dlsym(SDL2_LIBRARY,"SDL_strtod"));
	SDL2::strtol = reinterpret_cast<PF_SDL2_strtol>(dlsym(SDL2_LIBRARY,"SDL_strtol"));
	SDL2::strtoll = reinterpret_cast<PF_SDL2_strtoll>(dlsym(SDL2_LIBRARY,"SDL_strtoll"));
	SDL2::strtoul = reinterpret_cast<PF_SDL2_strtoul>(dlsym(SDL2_LIBRARY,"SDL_strtoul"));
	SDL2::strtoull = reinterpret_cast<PF_SDL2_strtoull>(dlsym(SDL2_LIBRARY,"SDL_strtoull"));
	SDL2::strupr = reinterpret_cast<PF_SDL2_strupr>(dlsym(SDL2_LIBRARY,"SDL_strupr"));
	SDL2::tan = reinterpret_cast<PF_SDL2_tan>(dlsym(SDL2_LIBRARY,"SDL_tan"));
	SDL2::tanf = reinterpret_cast<PF_SDL2_tanf>(dlsym(SDL2_LIBRARY,"SDL_tanf"));
	SDL2::tolower = reinterpret_cast<PF_SDL2_tolower>(dlsym(SDL2_LIBRARY,"SDL_tolower"));
	SDL2::toupper = reinterpret_cast<PF_SDL2_toupper>(dlsym(SDL2_LIBRARY,"SDL_toupper"));
	SDL2::uitoa = reinterpret_cast<PF_SDL2_uitoa>(dlsym(SDL2_LIBRARY,"SDL_uitoa"));
	SDL2::ulltoa = reinterpret_cast<PF_SDL2_ulltoa>(dlsym(SDL2_LIBRARY,"SDL_ulltoa"));
	SDL2::ultoa = reinterpret_cast<PF_SDL2_ultoa>(dlsym(SDL2_LIBRARY,"SDL_ultoa"));
	SDL2::utf8strlcpy = reinterpret_cast<PF_SDL2_utf8strlcpy>(dlsym(SDL2_LIBRARY,"SDL_utf8strlcpy"));
	SDL2::vsnprintf = reinterpret_cast<PF_SDL2_vsnprintf>(dlsym(SDL2_LIBRARY,"SDL_vsnprintf"));
	SDL2::vsscanf = reinterpret_cast<PF_SDL2_vsscanf>(dlsym(SDL2_LIBRARY,"SDL_vsscanf"));
	SDL2::wcslcat = reinterpret_cast<PF_SDL2_wcslcat>(dlsym(SDL2_LIBRARY,"SDL_wcslcat"));
	SDL2::wcslcpy = reinterpret_cast<PF_SDL2_wcslcpy>(dlsym(SDL2_LIBRARY,"SDL_wcslcpy"));
	SDL2::wcslen = reinterpret_cast<PF_SDL2_wcslen>(dlsym(SDL2_LIBRARY,"SDL_wcslen"));
}

PF_SDL2_AddEventWatch SDL2::AddEventWatch;
PF_SDL2_AddHintCallback SDL2::AddHintCallback;
PF_SDL2_AddTimer SDL2::AddTimer;
PF_SDL2_AllocFormat SDL2::AllocFormat;
PF_SDL2_AllocPalette SDL2::AllocPalette;
PF_SDL2_AllocRW SDL2::AllocRW;
/* PF_SDL2_AndroidGetActivity SDL2::AndroidGetActivity;
PF_SDL2_AndroidGetExternalStoragePath SDL2::AndroidGetExternalStoragePath;
PF_SDL2_AndroidGetExternalStorageState SDL2::AndroidGetExternalStorageState;
PF_SDL2_AndroidGetInternalStoragePath SDL2::AndroidGetInternalStoragePath;
PF_SDL2_AndroidGetJNIEnv SDL2::AndroidGetJNIEnv;*/
PF_SDL2_AtomicAdd SDL2::AtomicAdd;
PF_SDL2_AtomicCAS SDL2::AtomicCAS;
PF_SDL2_AtomicCASPtr SDL2::AtomicCASPtr;
PF_SDL2_AtomicGet SDL2::AtomicGet;
PF_SDL2_AtomicGetPtr SDL2::AtomicGetPtr;
PF_SDL2_AtomicLock SDL2::AtomicLock;
PF_SDL2_AtomicSet SDL2::AtomicSet;
PF_SDL2_AtomicSetPtr SDL2::AtomicSetPtr;
PF_SDL2_AtomicTryLock SDL2::AtomicTryLock;
PF_SDL2_AtomicUnlock SDL2::AtomicUnlock;
PF_SDL2_AudioInit SDL2::AudioInit;
PF_SDL2_AudioQuit SDL2::AudioQuit;
PF_SDL2_BuildAudioCVT SDL2::BuildAudioCVT;
PF_SDL2_CalculateGammaRamp SDL2::CalculateGammaRamp;
PF_SDL2_CaptureMouse SDL2::CaptureMouse;
PF_SDL2_ClearError SDL2::ClearError;
PF_SDL2_ClearHints SDL2::ClearHints;
PF_SDL2_ClearQueuedAudio SDL2::ClearQueuedAudio;
PF_SDL2_CloseAudio SDL2::CloseAudio;
PF_SDL2_CloseAudioDevice SDL2::CloseAudioDevice;
PF_SDL2_CondBroadcast SDL2::CondBroadcast;
PF_SDL2_CondSignal SDL2::CondSignal;
PF_SDL2_CondWait SDL2::CondWait;
PF_SDL2_CondWaitTimeout SDL2::CondWaitTimeout;
PF_SDL2_ConvertAudio SDL2::ConvertAudio;
PF_SDL2_ConvertPixels SDL2::ConvertPixels;
PF_SDL2_ConvertSurface SDL2::ConvertSurface;
PF_SDL2_ConvertSurfaceFormat SDL2::ConvertSurfaceFormat;
PF_SDL2_CreateColorCursor SDL2::CreateColorCursor;
PF_SDL2_CreateCond SDL2::CreateCond;
PF_SDL2_CreateCursor SDL2::CreateCursor;
PF_SDL2_CreateMutex SDL2::CreateMutex;
PF_SDL2_CreateRGBSurface SDL2::CreateRGBSurface;
PF_SDL2_CreateRGBSurfaceFrom SDL2::CreateRGBSurfaceFrom;
PF_SDL2_CreateRenderer SDL2::CreateRenderer;
PF_SDL2_CreateSemaphore SDL2::CreateSemaphore;
// PF_SDL2_CreateShapedWindow SDL2::CreateShapedWindow;
PF_SDL2_CreateSoftwareRenderer SDL2::CreateSoftwareRenderer;
PF_SDL2_CreateSystemCursor SDL2::CreateSystemCursor;
PF_SDL2_CreateTexture SDL2::CreateTexture;
PF_SDL2_CreateTextureFromSurface SDL2::CreateTextureFromSurface;
PF_SDL2_CreateThread SDL2::CreateThread;
//PF_SDL2_CreateThread SDL2::CreateThread;
PF_SDL2_CreateWindow SDL2::CreateWindow;
PF_SDL2_CreateWindowAndRenderer SDL2::CreateWindowAndRenderer;
PF_SDL2_CreateWindowFrom SDL2::CreateWindowFrom;
// PF_SDL2_DXGIGetOutputInfo SDL2::DXGIGetOutputInfo;
PF_SDL2_DelEventWatch SDL2::DelEventWatch;
PF_SDL2_DelHintCallback SDL2::DelHintCallback;
PF_SDL2_Delay SDL2::Delay;
PF_SDL2_DestroyCond SDL2::DestroyCond;
PF_SDL2_DestroyMutex SDL2::DestroyMutex;
PF_SDL2_DestroyRenderer SDL2::DestroyRenderer;
PF_SDL2_DestroySemaphore SDL2::DestroySemaphore;
PF_SDL2_DestroyTexture SDL2::DestroyTexture;
PF_SDL2_DestroyWindow SDL2::DestroyWindow;
PF_SDL2_DetachThread SDL2::DetachThread;
// PF_SDL2_Direct3D9GetAdapterIndex SDL2::Direct3D9GetAdapterIndex;
PF_SDL2_DisableScreenSaver SDL2::DisableScreenSaver;
PF_SDL2_EnableScreenSaver SDL2::EnableScreenSaver;
PF_SDL2_EnclosePoints SDL2::EnclosePoints;
PF_SDL2_Error SDL2::Error;
PF_SDL2_EventState SDL2::EventState;
PF_SDL2_FillRect SDL2::FillRect;
PF_SDL2_FillRects SDL2::FillRects;
PF_SDL2_FilterEvents SDL2::FilterEvents;
PF_SDL2_FlushEvent SDL2::FlushEvent;
PF_SDL2_FlushEvents SDL2::FlushEvents;
PF_SDL2_FreeCursor SDL2::FreeCursor;
PF_SDL2_FreeFormat SDL2::FreeFormat;
PF_SDL2_FreePalette SDL2::FreePalette;
PF_SDL2_FreeRW SDL2::FreeRW;
PF_SDL2_FreeSurface SDL2::FreeSurface;
PF_SDL2_FreeWAV SDL2::FreeWAV;
PF_SDL2_GL_BindTexture SDL2::GL_BindTexture;
PF_SDL2_GL_CreateContext SDL2::GL_CreateContext;
PF_SDL2_GL_DeleteContext SDL2::GL_DeleteContext;
PF_SDL2_GL_ExtensionSupported SDL2::GL_ExtensionSupported;
PF_SDL2_GL_GetAttribute SDL2::GL_GetAttribute;
PF_SDL2_GL_GetCurrentContext SDL2::GL_GetCurrentContext;
PF_SDL2_GL_GetCurrentWindow SDL2::GL_GetCurrentWindow;
PF_SDL2_GL_GetDrawableSize SDL2::GL_GetDrawableSize;
PF_SDL2_GL_GetProcAddress SDL2::GL_GetProcAddress;
PF_SDL2_GL_GetSwapInterval SDL2::GL_GetSwapInterval;
PF_SDL2_GL_LoadLibrary SDL2::GL_LoadLibrary;
PF_SDL2_GL_MakeCurrent SDL2::GL_MakeCurrent;
PF_SDL2_GL_ResetAttributes SDL2::GL_ResetAttributes;
PF_SDL2_GL_SetAttribute SDL2::GL_SetAttribute;
PF_SDL2_GL_SetSwapInterval SDL2::GL_SetSwapInterval;
PF_SDL2_GL_SwapWindow SDL2::GL_SwapWindow;
PF_SDL2_GL_UnbindTexture SDL2::GL_UnbindTexture;
PF_SDL2_GL_UnloadLibrary SDL2::GL_UnloadLibrary;
PF_SDL2_GameControllerAddMapping SDL2::GameControllerAddMapping;
PF_SDL2_GameControllerAddMappingsFromRW SDL2::GameControllerAddMappingsFromRW;
PF_SDL2_GameControllerClose SDL2::GameControllerClose;
PF_SDL2_GameControllerEventState SDL2::GameControllerEventState;
PF_SDL2_GameControllerFromInstanceID SDL2::GameControllerFromInstanceID;
PF_SDL2_GameControllerGetAttached SDL2::GameControllerGetAttached;
PF_SDL2_GameControllerGetAxis SDL2::GameControllerGetAxis;
PF_SDL2_GameControllerGetAxisFromString SDL2::GameControllerGetAxisFromString;
PF_SDL2_GameControllerGetBindForAxis SDL2::GameControllerGetBindForAxis;
PF_SDL2_GameControllerGetBindForButton SDL2::GameControllerGetBindForButton;
PF_SDL2_GameControllerGetButton SDL2::GameControllerGetButton;
PF_SDL2_GameControllerGetButtonFromString SDL2::GameControllerGetButtonFromString;
PF_SDL2_GameControllerGetJoystick SDL2::GameControllerGetJoystick;
PF_SDL2_GameControllerGetStringForAxis SDL2::GameControllerGetStringForAxis;
PF_SDL2_GameControllerGetStringForButton SDL2::GameControllerGetStringForButton;
PF_SDL2_GameControllerMapping SDL2::GameControllerMapping;
PF_SDL2_GameControllerMappingForGUID SDL2::GameControllerMappingForGUID;
PF_SDL2_GameControllerName SDL2::GameControllerName;
PF_SDL2_GameControllerNameForIndex SDL2::GameControllerNameForIndex;
PF_SDL2_GameControllerOpen SDL2::GameControllerOpen;
PF_SDL2_GameControllerUpdate SDL2::GameControllerUpdate;
PF_SDL2_GetAssertionHandler SDL2::GetAssertionHandler;
PF_SDL2_GetAssertionReport SDL2::GetAssertionReport;
PF_SDL2_GetAudioDeviceName SDL2::GetAudioDeviceName;
PF_SDL2_GetAudioDeviceStatus SDL2::GetAudioDeviceStatus;
PF_SDL2_GetAudioDriver SDL2::GetAudioDriver;
PF_SDL2_GetAudioStatus SDL2::GetAudioStatus;
PF_SDL2_GetBasePath SDL2::GetBasePath;
PF_SDL2_GetCPUCacheLineSize SDL2::GetCPUCacheLineSize;
PF_SDL2_GetCPUCount SDL2::GetCPUCount;
PF_SDL2_GetClipRect SDL2::GetClipRect;
PF_SDL2_GetClipboardText SDL2::GetClipboardText;
PF_SDL2_GetClosestDisplayMode SDL2::GetClosestDisplayMode;
PF_SDL2_GetColorKey SDL2::GetColorKey;
PF_SDL2_GetCurrentAudioDriver SDL2::GetCurrentAudioDriver;
PF_SDL2_GetCurrentDisplayMode SDL2::GetCurrentDisplayMode;
PF_SDL2_GetCurrentVideoDriver SDL2::GetCurrentVideoDriver;
PF_SDL2_GetCursor SDL2::GetCursor;
PF_SDL2_GetDefaultAssertionHandler SDL2::GetDefaultAssertionHandler;
PF_SDL2_GetDefaultCursor SDL2::GetDefaultCursor;
PF_SDL2_GetDesktopDisplayMode SDL2::GetDesktopDisplayMode;
PF_SDL2_GetDisplayBounds SDL2::GetDisplayBounds;
PF_SDL2_GetDisplayDPI SDL2::GetDisplayDPI;
PF_SDL2_GetDisplayMode SDL2::GetDisplayMode;
PF_SDL2_GetDisplayName SDL2::GetDisplayName;
PF_SDL2_GetError SDL2::GetError;
PF_SDL2_GetEventFilter SDL2::GetEventFilter;
PF_SDL2_GetGlobalMouseState SDL2::GetGlobalMouseState;
PF_SDL2_GetGrabbedWindow SDL2::GetGrabbedWindow;
PF_SDL2_GetHint SDL2::GetHint;
PF_SDL2_GetKeyFromName SDL2::GetKeyFromName;
PF_SDL2_GetKeyFromScancode SDL2::GetKeyFromScancode;
PF_SDL2_GetKeyName SDL2::GetKeyName;
PF_SDL2_GetKeyboardFocus SDL2::GetKeyboardFocus;
PF_SDL2_GetKeyboardState SDL2::GetKeyboardState;
PF_SDL2_GetModState SDL2::GetModState;
PF_SDL2_GetMouseFocus SDL2::GetMouseFocus;
PF_SDL2_GetMouseState SDL2::GetMouseState;
PF_SDL2_GetNumAudioDevices SDL2::GetNumAudioDevices;
PF_SDL2_GetNumAudioDrivers SDL2::GetNumAudioDrivers;
PF_SDL2_GetNumDisplayModes SDL2::GetNumDisplayModes;
PF_SDL2_GetNumRenderDrivers SDL2::GetNumRenderDrivers;
PF_SDL2_GetNumTouchDevices SDL2::GetNumTouchDevices;
PF_SDL2_GetNumTouchFingers SDL2::GetNumTouchFingers;
PF_SDL2_GetNumVideoDisplays SDL2::GetNumVideoDisplays;
PF_SDL2_GetNumVideoDrivers SDL2::GetNumVideoDrivers;
PF_SDL2_GetPerformanceCounter SDL2::GetPerformanceCounter;
PF_SDL2_GetPerformanceFrequency SDL2::GetPerformanceFrequency;
PF_SDL2_GetPixelFormatName SDL2::GetPixelFormatName;
PF_SDL2_GetPlatform SDL2::GetPlatform;
PF_SDL2_GetPowerInfo SDL2::GetPowerInfo;
PF_SDL2_GetPrefPath SDL2::GetPrefPath;
PF_SDL2_GetQueuedAudioSize SDL2::GetQueuedAudioSize;
PF_SDL2_GetRGB SDL2::GetRGB;
PF_SDL2_GetRGBA SDL2::GetRGBA;
PF_SDL2_GetRelativeMouseMode SDL2::GetRelativeMouseMode;
PF_SDL2_GetRelativeMouseState SDL2::GetRelativeMouseState;
PF_SDL2_GetRenderDrawBlendMode SDL2::GetRenderDrawBlendMode;
PF_SDL2_GetRenderDrawColor SDL2::GetRenderDrawColor;
PF_SDL2_GetRenderDriverInfo SDL2::GetRenderDriverInfo;
PF_SDL2_GetRenderTarget SDL2::GetRenderTarget;
PF_SDL2_GetRenderer SDL2::GetRenderer;
PF_SDL2_GetRendererInfo SDL2::GetRendererInfo;
PF_SDL2_GetRendererOutputSize SDL2::GetRendererOutputSize;
PF_SDL2_GetRevision SDL2::GetRevision;
PF_SDL2_GetRevisionNumber SDL2::GetRevisionNumber;
PF_SDL2_GetScancodeFromKey SDL2::GetScancodeFromKey;
PF_SDL2_GetScancodeFromName SDL2::GetScancodeFromName;
PF_SDL2_GetScancodeName SDL2::GetScancodeName;
// PF_SDL2_GetShapedWindowMode SDL2::GetShapedWindowMode;
PF_SDL2_GetSurfaceAlphaMod SDL2::GetSurfaceAlphaMod;
PF_SDL2_GetSurfaceBlendMode SDL2::GetSurfaceBlendMode;
PF_SDL2_GetSurfaceColorMod SDL2::GetSurfaceColorMod;
PF_SDL2_GetSystemRAM SDL2::GetSystemRAM;
PF_SDL2_GetTextureAlphaMod SDL2::GetTextureAlphaMod;
PF_SDL2_GetTextureBlendMode SDL2::GetTextureBlendMode;
PF_SDL2_GetTextureColorMod SDL2::GetTextureColorMod;
PF_SDL2_GetThreadID SDL2::GetThreadID;
PF_SDL2_GetThreadName SDL2::GetThreadName;
PF_SDL2_GetTicks SDL2::GetTicks;
PF_SDL2_GetTouchDevice SDL2::GetTouchDevice;
PF_SDL2_GetTouchFinger SDL2::GetTouchFinger;
PF_SDL2_GetVersion SDL2::GetVersion;
PF_SDL2_GetVideoDriver SDL2::GetVideoDriver;
PF_SDL2_GetWindowBrightness SDL2::GetWindowBrightness;
PF_SDL2_GetWindowData SDL2::GetWindowData;
PF_SDL2_GetWindowDisplayIndex SDL2::GetWindowDisplayIndex;
PF_SDL2_GetWindowDisplayMode SDL2::GetWindowDisplayMode;
PF_SDL2_GetWindowFlags SDL2::GetWindowFlags;
PF_SDL2_GetWindowFromID SDL2::GetWindowFromID;
PF_SDL2_GetWindowGammaRamp SDL2::GetWindowGammaRamp;
PF_SDL2_GetWindowGrab SDL2::GetWindowGrab;
PF_SDL2_GetWindowID SDL2::GetWindowID;
PF_SDL2_GetWindowMaximumSize SDL2::GetWindowMaximumSize;
PF_SDL2_GetWindowMinimumSize SDL2::GetWindowMinimumSize;
PF_SDL2_GetWindowPixelFormat SDL2::GetWindowPixelFormat;
PF_SDL2_GetWindowPosition SDL2::GetWindowPosition;
PF_SDL2_GetWindowSize SDL2::GetWindowSize;
PF_SDL2_GetWindowSurface SDL2::GetWindowSurface;
PF_SDL2_GetWindowTitle SDL2::GetWindowTitle;
// PF_SDL2_GetWindowWMInfo SDL2::GetWindowWMInfo;
PF_SDL2_HapticClose SDL2::HapticClose;
PF_SDL2_HapticDestroyEffect SDL2::HapticDestroyEffect;
PF_SDL2_HapticEffectSupported SDL2::HapticEffectSupported;
PF_SDL2_HapticGetEffectStatus SDL2::HapticGetEffectStatus;
PF_SDL2_HapticIndex SDL2::HapticIndex;
PF_SDL2_HapticName SDL2::HapticName;
PF_SDL2_HapticNewEffect SDL2::HapticNewEffect;
PF_SDL2_HapticNumAxes SDL2::HapticNumAxes;
PF_SDL2_HapticNumEffects SDL2::HapticNumEffects;
PF_SDL2_HapticNumEffectsPlaying SDL2::HapticNumEffectsPlaying;
PF_SDL2_HapticOpen SDL2::HapticOpen;
PF_SDL2_HapticOpenFromJoystick SDL2::HapticOpenFromJoystick;
PF_SDL2_HapticOpenFromMouse SDL2::HapticOpenFromMouse;
PF_SDL2_HapticOpened SDL2::HapticOpened;
PF_SDL2_HapticPause SDL2::HapticPause;
PF_SDL2_HapticQuery SDL2::HapticQuery;
PF_SDL2_HapticRumbleInit SDL2::HapticRumbleInit;
PF_SDL2_HapticRumblePlay SDL2::HapticRumblePlay;
PF_SDL2_HapticRumbleStop SDL2::HapticRumbleStop;
PF_SDL2_HapticRumbleSupported SDL2::HapticRumbleSupported;
PF_SDL2_HapticRunEffect SDL2::HapticRunEffect;
PF_SDL2_HapticSetAutocenter SDL2::HapticSetAutocenter;
PF_SDL2_HapticSetGain SDL2::HapticSetGain;
PF_SDL2_HapticStopAll SDL2::HapticStopAll;
PF_SDL2_HapticStopEffect SDL2::HapticStopEffect;
PF_SDL2_HapticUnpause SDL2::HapticUnpause;
PF_SDL2_HapticUpdateEffect SDL2::HapticUpdateEffect;
PF_SDL2_Has3DNow SDL2::Has3DNow;
PF_SDL2_HasAVX SDL2::HasAVX;
PF_SDL2_HasAVX2 SDL2::HasAVX2;
PF_SDL2_HasAltiVec SDL2::HasAltiVec;
PF_SDL2_HasClipboardText SDL2::HasClipboardText;
PF_SDL2_HasEvent SDL2::HasEvent;
PF_SDL2_HasEvents SDL2::HasEvents;
PF_SDL2_HasIntersection SDL2::HasIntersection;
PF_SDL2_HasMMX SDL2::HasMMX;
PF_SDL2_HasRDTSC SDL2::HasRDTSC;
PF_SDL2_HasSSE SDL2::HasSSE;
PF_SDL2_HasSSE2 SDL2::HasSSE2;
PF_SDL2_HasSSE3 SDL2::HasSSE3;
PF_SDL2_HasSSE41 SDL2::HasSSE41;
PF_SDL2_HasSSE42 SDL2::HasSSE42;
PF_SDL2_HasScreenKeyboardSupport SDL2::HasScreenKeyboardSupport;
PF_SDL2_HideWindow SDL2::HideWindow;
PF_SDL2_Init SDL2::Init;
PF_SDL2_InitSubSystem SDL2::InitSubSystem;
PF_SDL2_IntersectRect SDL2::IntersectRect;
PF_SDL2_IntersectRectAndLine SDL2::IntersectRectAndLine;
PF_SDL2_IsGameController SDL2::IsGameController;
PF_SDL2_IsScreenKeyboardShown SDL2::IsScreenKeyboardShown;
PF_SDL2_IsScreenSaverEnabled SDL2::IsScreenSaverEnabled;
// PF_SDL2_IsShapedWindow SDL2::IsShapedWindow;
PF_SDL2_IsTextInputActive SDL2::IsTextInputActive;
PF_SDL2_JoystickClose SDL2::JoystickClose;
PF_SDL2_JoystickCurrentPowerLevel SDL2::JoystickCurrentPowerLevel;
PF_SDL2_JoystickEventState SDL2::JoystickEventState;
PF_SDL2_JoystickFromInstanceID SDL2::JoystickFromInstanceID;
PF_SDL2_JoystickGetAttached SDL2::JoystickGetAttached;
PF_SDL2_JoystickGetAxis SDL2::JoystickGetAxis;
PF_SDL2_JoystickGetBall SDL2::JoystickGetBall;
PF_SDL2_JoystickGetButton SDL2::JoystickGetButton;
PF_SDL2_JoystickGetDeviceGUID SDL2::JoystickGetDeviceGUID;
PF_SDL2_JoystickGetGUID SDL2::JoystickGetGUID;
PF_SDL2_JoystickGetGUIDFromString SDL2::JoystickGetGUIDFromString;
PF_SDL2_JoystickGetGUIDString SDL2::JoystickGetGUIDString;
PF_SDL2_JoystickGetHat SDL2::JoystickGetHat;
PF_SDL2_JoystickInstanceID SDL2::JoystickInstanceID;
PF_SDL2_JoystickIsHaptic SDL2::JoystickIsHaptic;
PF_SDL2_JoystickName SDL2::JoystickName;
PF_SDL2_JoystickNameForIndex SDL2::JoystickNameForIndex;
PF_SDL2_JoystickNumAxes SDL2::JoystickNumAxes;
PF_SDL2_JoystickNumBalls SDL2::JoystickNumBalls;
PF_SDL2_JoystickNumButtons SDL2::JoystickNumButtons;
PF_SDL2_JoystickNumHats SDL2::JoystickNumHats;
PF_SDL2_JoystickOpen SDL2::JoystickOpen;
PF_SDL2_JoystickUpdate SDL2::JoystickUpdate;
PF_SDL2_LoadBMP_RW SDL2::LoadBMP_RW;
PF_SDL2_LoadDollarTemplates SDL2::LoadDollarTemplates;
PF_SDL2_LoadFunction SDL2::LoadFunction;
PF_SDL2_LoadObject SDL2::LoadObject;
PF_SDL2_LoadWAV_RW SDL2::LoadWAV_RW;
PF_SDL2_LockAudio SDL2::LockAudio;
PF_SDL2_LockAudioDevice SDL2::LockAudioDevice;
PF_SDL2_LockMutex SDL2::LockMutex;
PF_SDL2_LockSurface SDL2::LockSurface;
PF_SDL2_LockTexture SDL2::LockTexture;
PF_SDL2_Log SDL2::Log;
PF_SDL2_LogCritical SDL2::LogCritical;
PF_SDL2_LogDebug SDL2::LogDebug;
PF_SDL2_LogError SDL2::LogError;
PF_SDL2_LogGetOutputFunction SDL2::LogGetOutputFunction;
PF_SDL2_LogGetPriority SDL2::LogGetPriority;
PF_SDL2_LogInfo SDL2::LogInfo;
PF_SDL2_LogMessage SDL2::LogMessage;
PF_SDL2_LogMessageV SDL2::LogMessageV;
PF_SDL2_LogResetPriorities SDL2::LogResetPriorities;
PF_SDL2_LogSetAllPriority SDL2::LogSetAllPriority;
PF_SDL2_LogSetOutputFunction SDL2::LogSetOutputFunction;
PF_SDL2_LogSetPriority SDL2::LogSetPriority;
PF_SDL2_LogVerbose SDL2::LogVerbose;
PF_SDL2_LogWarn SDL2::LogWarn;
PF_SDL2_LowerBlit SDL2::LowerBlit;
PF_SDL2_LowerBlitScaled SDL2::LowerBlitScaled;
PF_SDL2_MapRGB SDL2::MapRGB;
PF_SDL2_MapRGBA SDL2::MapRGBA;
PF_SDL2_MasksToPixelFormatEnum SDL2::MasksToPixelFormatEnum;
PF_SDL2_MaximizeWindow SDL2::MaximizeWindow;
// PF_SDL2_MemoryBarrierAcquire SDL2::MemoryBarrierAcquire;
// PF_SDL2_MemoryBarrierRelease SDL2::MemoryBarrierRelease;
PF_SDL2_MinimizeWindow SDL2::MinimizeWindow;
PF_SDL2_MixAudio SDL2::MixAudio;
PF_SDL2_MixAudioFormat SDL2::MixAudioFormat;
// PF_SDL2_MostSignificantBitIndex32 SDL2::MostSignificantBitIndex32;
PF_SDL2_MouseIsHaptic SDL2::MouseIsHaptic;
PF_SDL2_NumHaptics SDL2::NumHaptics;
PF_SDL2_NumJoysticks SDL2::NumJoysticks;
PF_SDL2_OpenAudio SDL2::OpenAudio;
PF_SDL2_OpenAudioDevice SDL2::OpenAudioDevice;
PF_SDL2_PauseAudio SDL2::PauseAudio;
PF_SDL2_PauseAudioDevice SDL2::PauseAudioDevice;
PF_SDL2_PeepEvents SDL2::PeepEvents;
PF_SDL2_PixelFormatEnumToMasks SDL2::PixelFormatEnumToMasks;
PF_SDL2_PointInRect SDL2::PointInRect;
PF_SDL2_PollEvent SDL2::PollEvent;
PF_SDL2_PumpEvents SDL2::PumpEvents;
PF_SDL2_PushEvent SDL2::PushEvent;
PF_SDL2_QueryTexture SDL2::QueryTexture;
PF_SDL2_QueueAudio SDL2::QueueAudio;
PF_SDL2_Quit SDL2::Quit;
PF_SDL2_QuitSubSystem SDL2::QuitSubSystem;
PF_SDL2_RWFromConstMem SDL2::RWFromConstMem;
PF_SDL2_RWFromFP SDL2::RWFromFP;
//PF_SDL2_RWFromFP SDL2::RWFromFP;
PF_SDL2_RWFromFile SDL2::RWFromFile;
PF_SDL2_RWFromMem SDL2::RWFromMem;
PF_SDL2_RaiseWindow SDL2::RaiseWindow;
PF_SDL2_ReadBE16 SDL2::ReadBE16;
PF_SDL2_ReadBE32 SDL2::ReadBE32;
PF_SDL2_ReadBE64 SDL2::ReadBE64;
PF_SDL2_ReadLE16 SDL2::ReadLE16;
PF_SDL2_ReadLE32 SDL2::ReadLE32;
PF_SDL2_ReadLE64 SDL2::ReadLE64;
PF_SDL2_ReadU8 SDL2::ReadU8;
PF_SDL2_RecordGesture SDL2::RecordGesture;
PF_SDL2_RectEmpty SDL2::RectEmpty;
PF_SDL2_RectEquals SDL2::RectEquals;
// PF_SDL2_RegisterApp SDL2::RegisterApp;
PF_SDL2_RegisterEvents SDL2::RegisterEvents;
PF_SDL2_RemoveTimer SDL2::RemoveTimer;
PF_SDL2_RenderClear SDL2::RenderClear;
PF_SDL2_RenderCopy SDL2::RenderCopy;
PF_SDL2_RenderCopyEx SDL2::RenderCopyEx;
PF_SDL2_RenderDrawLine SDL2::RenderDrawLine;
PF_SDL2_RenderDrawLines SDL2::RenderDrawLines;
PF_SDL2_RenderDrawPoint SDL2::RenderDrawPoint;
PF_SDL2_RenderDrawPoints SDL2::RenderDrawPoints;
PF_SDL2_RenderDrawRect SDL2::RenderDrawRect;
PF_SDL2_RenderDrawRects SDL2::RenderDrawRects;
PF_SDL2_RenderFillRect SDL2::RenderFillRect;
PF_SDL2_RenderFillRects SDL2::RenderFillRects;
PF_SDL2_RenderGetClipRect SDL2::RenderGetClipRect;
// PF_SDL2_RenderGetD3D9Device SDL2::RenderGetD3D9Device;
PF_SDL2_RenderGetLogicalSize SDL2::RenderGetLogicalSize;
PF_SDL2_RenderGetScale SDL2::RenderGetScale;
PF_SDL2_RenderGetViewport SDL2::RenderGetViewport;
PF_SDL2_RenderIsClipEnabled SDL2::RenderIsClipEnabled;
PF_SDL2_RenderPresent SDL2::RenderPresent;
PF_SDL2_RenderReadPixels SDL2::RenderReadPixels;
PF_SDL2_RenderSetClipRect SDL2::RenderSetClipRect;
PF_SDL2_RenderSetLogicalSize SDL2::RenderSetLogicalSize;
PF_SDL2_RenderSetScale SDL2::RenderSetScale;
PF_SDL2_RenderSetViewport SDL2::RenderSetViewport;
PF_SDL2_RenderTargetSupported SDL2::RenderTargetSupported;
PF_SDL2_ReportAssertion SDL2::ReportAssertion;
PF_SDL2_ResetAssertionReport SDL2::ResetAssertionReport;
PF_SDL2_RestoreWindow SDL2::RestoreWindow;
PF_SDL2_SaveAllDollarTemplates SDL2::SaveAllDollarTemplates;
PF_SDL2_SaveBMP_RW SDL2::SaveBMP_RW;
PF_SDL2_SaveDollarTemplate SDL2::SaveDollarTemplate;
PF_SDL2_SemPost SDL2::SemPost;
PF_SDL2_SemTryWait SDL2::SemTryWait;
PF_SDL2_SemValue SDL2::SemValue;
PF_SDL2_SemWait SDL2::SemWait;
PF_SDL2_SemWaitTimeout SDL2::SemWaitTimeout;
PF_SDL2_SetAssertionHandler SDL2::SetAssertionHandler;
PF_SDL2_SetClipRect SDL2::SetClipRect;
PF_SDL2_SetClipboardText SDL2::SetClipboardText;
PF_SDL2_SetColorKey SDL2::SetColorKey;
PF_SDL2_SetCursor SDL2::SetCursor;
PF_SDL2_SetError SDL2::SetError;
PF_SDL2_SetEventFilter SDL2::SetEventFilter;
PF_SDL2_SetHint SDL2::SetHint;
PF_SDL2_SetHintWithPriority SDL2::SetHintWithPriority;
PF_SDL2_SetMainReady SDL2::SetMainReady;
PF_SDL2_SetModState SDL2::SetModState;
PF_SDL2_SetPaletteColors SDL2::SetPaletteColors;
PF_SDL2_SetPixelFormatPalette SDL2::SetPixelFormatPalette;
PF_SDL2_SetRelativeMouseMode SDL2::SetRelativeMouseMode;
PF_SDL2_SetRenderDrawBlendMode SDL2::SetRenderDrawBlendMode;
PF_SDL2_SetRenderDrawColor SDL2::SetRenderDrawColor;
PF_SDL2_SetRenderTarget SDL2::SetRenderTarget;
PF_SDL2_SetSurfaceAlphaMod SDL2::SetSurfaceAlphaMod;
PF_SDL2_SetSurfaceBlendMode SDL2::SetSurfaceBlendMode;
PF_SDL2_SetSurfaceColorMod SDL2::SetSurfaceColorMod;
PF_SDL2_SetSurfacePalette SDL2::SetSurfacePalette;
PF_SDL2_SetSurfaceRLE SDL2::SetSurfaceRLE;
PF_SDL2_SetTextInputRect SDL2::SetTextInputRect;
PF_SDL2_SetTextureAlphaMod SDL2::SetTextureAlphaMod;
PF_SDL2_SetTextureBlendMode SDL2::SetTextureBlendMode;
PF_SDL2_SetTextureColorMod SDL2::SetTextureColorMod;
PF_SDL2_SetThreadPriority SDL2::SetThreadPriority;
PF_SDL2_SetWindowBordered SDL2::SetWindowBordered;
PF_SDL2_SetWindowBrightness SDL2::SetWindowBrightness;
PF_SDL2_SetWindowData SDL2::SetWindowData;
PF_SDL2_SetWindowDisplayMode SDL2::SetWindowDisplayMode;
PF_SDL2_SetWindowFullscreen SDL2::SetWindowFullscreen;
PF_SDL2_SetWindowGammaRamp SDL2::SetWindowGammaRamp;
PF_SDL2_SetWindowGrab SDL2::SetWindowGrab;
PF_SDL2_SetWindowHitTest SDL2::SetWindowHitTest;
PF_SDL2_SetWindowIcon SDL2::SetWindowIcon;
PF_SDL2_SetWindowMaximumSize SDL2::SetWindowMaximumSize;
PF_SDL2_SetWindowMinimumSize SDL2::SetWindowMinimumSize;
PF_SDL2_SetWindowPosition SDL2::SetWindowPosition;
// PF_SDL2_SetWindowShape SDL2::SetWindowShape;
PF_SDL2_SetWindowSize SDL2::SetWindowSize;
PF_SDL2_SetWindowTitle SDL2::SetWindowTitle;
// PF_SDL2_SetWindowsMessageHook SDL2::SetWindowsMessageHook;
PF_SDL2_ShowCursor SDL2::ShowCursor;
PF_SDL2_ShowMessageBox SDL2::ShowMessageBox;
PF_SDL2_ShowSimpleMessageBox SDL2::ShowSimpleMessageBox;
PF_SDL2_ShowWindow SDL2::ShowWindow;
PF_SDL2_SoftStretch SDL2::SoftStretch;
PF_SDL2_StartTextInput SDL2::StartTextInput;
PF_SDL2_StopTextInput SDL2::StopTextInput;
/*PF_SDL2_Swap16 SDL2::Swap16;
PF_SDL2_Swap32 SDL2::Swap32;
PF_SDL2_Swap32 SDL2::Swap32;
PF_SDL2_Swap32 SDL2::Swap32;
PF_SDL2_Swap32 SDL2::Swap32;
PF_SDL2_Swap32 SDL2::Swap32;
PF_SDL2_Swap64 SDL2::Swap64;
PF_SDL2_Swap64 SDL2::Swap64;
PF_SDL2_Swap64 SDL2::Swap64;*/
PF_SDL2_SwapFloat SDL2::SwapFloat;
PF_SDL2_TLSCreate SDL2::TLSCreate;
PF_SDL2_TLSGet SDL2::TLSGet;
PF_SDL2_TLSSet SDL2::TLSSet;
PF_SDL2_ThreadID SDL2::ThreadID;
PF_SDL2_TryLockMutex SDL2::TryLockMutex;
PF_SDL2_UnionRect SDL2::UnionRect;
PF_SDL2_UnloadObject SDL2::UnloadObject;
PF_SDL2_UnlockAudio SDL2::UnlockAudio;
PF_SDL2_UnlockAudioDevice SDL2::UnlockAudioDevice;
PF_SDL2_UnlockMutex SDL2::UnlockMutex;
PF_SDL2_UnlockSurface SDL2::UnlockSurface;
PF_SDL2_UnlockTexture SDL2::UnlockTexture;
// PF_SDL2_UnregisterApp SDL2::UnregisterApp;
PF_SDL2_UpdateTexture SDL2::UpdateTexture;
PF_SDL2_UpdateWindowSurface SDL2::UpdateWindowSurface;
PF_SDL2_UpdateWindowSurfaceRects SDL2::UpdateWindowSurfaceRects;
PF_SDL2_UpdateYUVTexture SDL2::UpdateYUVTexture;
PF_SDL2_UpperBlit SDL2::UpperBlit;
PF_SDL2_UpperBlitScaled SDL2::UpperBlitScaled;
PF_SDL2_VideoInit SDL2::VideoInit;
PF_SDL2_VideoQuit SDL2::VideoQuit;
PF_SDL2_WaitEvent SDL2::WaitEvent;
PF_SDL2_WaitEventTimeout SDL2::WaitEventTimeout;
PF_SDL2_WaitThread SDL2::WaitThread;
PF_SDL2_WarpMouseGlobal SDL2::WarpMouseGlobal;
PF_SDL2_WarpMouseInWindow SDL2::WarpMouseInWindow;
PF_SDL2_WasInit SDL2::WasInit;
// PF_SDL2_WinRTGetFSPathUNICODE SDL2::WinRTGetFSPathUNICODE;
// PF_SDL2_WinRTGetFSPathUTF8 SDL2::WinRTGetFSPathUTF8;
// PF_SDL2_WinRTRunApp SDL2::WinRTRunApp;
PF_SDL2_WriteBE16 SDL2::WriteBE16;
PF_SDL2_WriteBE32 SDL2::WriteBE32;
PF_SDL2_WriteBE64 SDL2::WriteBE64;
PF_SDL2_WriteLE16 SDL2::WriteLE16;
PF_SDL2_WriteLE32 SDL2::WriteLE32;
PF_SDL2_WriteLE64 SDL2::WriteLE64;
PF_SDL2_WriteU8 SDL2::WriteU8;
PF_SDL2_abs SDL2::abs;
PF_SDL2_acos SDL2::acos;
PF_SDL2_asin SDL2::asin;
PF_SDL2_atan SDL2::atan;
PF_SDL2_atan2 SDL2::atan2;
PF_SDL2_atof SDL2::atof;
PF_SDL2_atoi SDL2::atoi;
PF_SDL2_calloc SDL2::calloc;
PF_SDL2_ceil SDL2::ceil;
PF_SDL2_copysign SDL2::copysign;
PF_SDL2_cos SDL2::cos;
PF_SDL2_cosf SDL2::cosf;
PF_SDL2_fabs SDL2::fabs;
PF_SDL2_floor SDL2::floor;
PF_SDL2_free SDL2::free;
PF_SDL2_getenv SDL2::getenv;
// PF_SDL2_iPhoneSetAnimationCallback SDL2::iPhoneSetAnimationCallback;
// PF_SDL2_iPhoneSetEventPump SDL2::iPhoneSetEventPump;
PF_SDL2_iconv SDL2::iconv;
PF_SDL2_iconv_close SDL2::iconv_close;
PF_SDL2_iconv_open SDL2::iconv_open;
PF_SDL2_iconv_string SDL2::iconv_string;
PF_SDL2_isdigit SDL2::isdigit;
PF_SDL2_isspace SDL2::isspace;
PF_SDL2_itoa SDL2::itoa;
PF_SDL2_lltoa SDL2::lltoa;
PF_SDL2_log SDL2::log;
PF_SDL2_ltoa SDL2::ltoa;
PF_SDL2_main SDL2::main;
PF_SDL2_malloc SDL2::malloc;
PF_SDL2_memcmp SDL2::memcmp;
PF_SDL2_memcpy SDL2::memcpy;
PF_SDL2_memmove SDL2::memmove;
PF_SDL2_memset SDL2::memset;
PF_SDL2_memset4 SDL2::memset4;
PF_SDL2_pow SDL2::pow;
PF_SDL2_qsort SDL2::qsort;
PF_SDL2_realloc SDL2::realloc;
PF_SDL2_scalbn SDL2::scalbn;
PF_SDL2_setenv SDL2::setenv;
PF_SDL2_sin SDL2::sin;
PF_SDL2_sinf SDL2::sinf;
PF_SDL2_snprintf SDL2::snprintf;
PF_SDL2_sqrt SDL2::sqrt;
PF_SDL2_sqrtf SDL2::sqrtf;
PF_SDL2_sscanf SDL2::sscanf;
PF_SDL2_strcasecmp SDL2::strcasecmp;
PF_SDL2_strchr SDL2::strchr;
PF_SDL2_strcmp SDL2::strcmp;
PF_SDL2_strdup SDL2::strdup;
PF_SDL2_strlcat SDL2::strlcat;
PF_SDL2_strlcpy SDL2::strlcpy;
PF_SDL2_strlen SDL2::strlen;
PF_SDL2_strlwr SDL2::strlwr;
PF_SDL2_strncasecmp SDL2::strncasecmp;
PF_SDL2_strncmp SDL2::strncmp;
PF_SDL2_strrchr SDL2::strrchr;
PF_SDL2_strrev SDL2::strrev;
PF_SDL2_strstr SDL2::strstr;
PF_SDL2_strtod SDL2::strtod;
PF_SDL2_strtol SDL2::strtol;
PF_SDL2_strtoll SDL2::strtoll;
PF_SDL2_strtoul SDL2::strtoul;
PF_SDL2_strtoull SDL2::strtoull;
PF_SDL2_strupr SDL2::strupr;
PF_SDL2_tan SDL2::tan;
PF_SDL2_tanf SDL2::tanf;
PF_SDL2_tolower SDL2::tolower;
PF_SDL2_toupper SDL2::toupper;
PF_SDL2_uitoa SDL2::uitoa;
PF_SDL2_ulltoa SDL2::ulltoa;
PF_SDL2_ultoa SDL2::ultoa;
PF_SDL2_utf8strlcpy SDL2::utf8strlcpy;
PF_SDL2_vsnprintf SDL2::vsnprintf;
PF_SDL2_vsscanf SDL2::vsscanf;
PF_SDL2_wcslcat SDL2::wcslcat;
PF_SDL2_wcslcpy SDL2::wcslcpy;
PF_SDL2_wcslen SDL2::wcslen;
void* SDL2_LIBRARY;
