#include "SdlWrapper.hpp"
#include <stdexcept>
#include <dlfcn.h>

void LoadSDL()
{
	SDL_LIB = dlopen("libSDL2.so",RTLD_LAZY);
	if(!SDL_LIB) throw std::runtime_error("Couldn't load SDL!");
	SDL::IMG_Init = reinterpret_cast<PF_IMG_Init>(dlsym(SDL_LIB,"IMG_Init"));
	SDL::IMG_InvertAlpha = reinterpret_cast<PF_IMG_InvertAlpha>(dlsym(SDL_LIB,"IMG_InvertAlpha"));
	SDL::IMG_Linked_Version = reinterpret_cast<PF_IMG_Linked_Version>(dlsym(SDL_LIB,"IMG_Linked_Version"));
	SDL::IMG_Load = reinterpret_cast<PF_IMG_Load>(dlsym(SDL_LIB,"IMG_Load"));
	SDL::IMG_LoadBMP_RW = reinterpret_cast<PF_IMG_LoadBMP_RW>(dlsym(SDL_LIB,"IMG_LoadBMP_RW"));
	SDL::IMG_LoadCUR_RW = reinterpret_cast<PF_IMG_LoadCUR_RW>(dlsym(SDL_LIB,"IMG_LoadCUR_RW"));
	SDL::IMG_LoadGIF_RW = reinterpret_cast<PF_IMG_LoadGIF_RW>(dlsym(SDL_LIB,"IMG_LoadGIF_RW"));
	SDL::IMG_LoadICO_RW = reinterpret_cast<PF_IMG_LoadICO_RW>(dlsym(SDL_LIB,"IMG_LoadICO_RW"));
	SDL::IMG_LoadJPG_RW = reinterpret_cast<PF_IMG_LoadJPG_RW>(dlsym(SDL_LIB,"IMG_LoadJPG_RW"));
	SDL::IMG_LoadLBM_RW = reinterpret_cast<PF_IMG_LoadLBM_RW>(dlsym(SDL_LIB,"IMG_LoadLBM_RW"));
	SDL::IMG_LoadPCX_RW = reinterpret_cast<PF_IMG_LoadPCX_RW>(dlsym(SDL_LIB,"IMG_LoadPCX_RW"));
	SDL::IMG_LoadPNG_RW = reinterpret_cast<PF_IMG_LoadPNG_RW>(dlsym(SDL_LIB,"IMG_LoadPNG_RW"));
	SDL::IMG_LoadPNM_RW = reinterpret_cast<PF_IMG_LoadPNM_RW>(dlsym(SDL_LIB,"IMG_LoadPNM_RW"));
	SDL::IMG_LoadTGA_RW = reinterpret_cast<PF_IMG_LoadTGA_RW>(dlsym(SDL_LIB,"IMG_LoadTGA_RW"));
	SDL::IMG_LoadTIF_RW = reinterpret_cast<PF_IMG_LoadTIF_RW>(dlsym(SDL_LIB,"IMG_LoadTIF_RW"));
	SDL::IMG_LoadTyped_RW = reinterpret_cast<PF_IMG_LoadTyped_RW>(dlsym(SDL_LIB,"IMG_LoadTyped_RW"));
	SDL::IMG_LoadWEBP_RW = reinterpret_cast<PF_IMG_LoadWEBP_RW>(dlsym(SDL_LIB,"IMG_LoadWEBP_RW"));
	SDL::IMG_LoadXCF_RW = reinterpret_cast<PF_IMG_LoadXCF_RW>(dlsym(SDL_LIB,"IMG_LoadXCF_RW"));
	SDL::IMG_LoadXPM_RW = reinterpret_cast<PF_IMG_LoadXPM_RW>(dlsym(SDL_LIB,"IMG_LoadXPM_RW"));
	SDL::IMG_LoadXV_RW = reinterpret_cast<PF_IMG_LoadXV_RW>(dlsym(SDL_LIB,"IMG_LoadXV_RW"));
	SDL::IMG_Load_RW = reinterpret_cast<PF_IMG_Load_RW>(dlsym(SDL_LIB,"IMG_Load_RW"));
	SDL::IMG_Quit = reinterpret_cast<PF_IMG_Quit>(dlsym(SDL_LIB,"IMG_Quit"));
	SDL::IMG_ReadXPMFromArray = reinterpret_cast<PF_IMG_ReadXPMFromArray>(dlsym(SDL_LIB,"IMG_ReadXPMFromArray"));
	SDL::IMG_isBMP = reinterpret_cast<PF_IMG_isBMP>(dlsym(SDL_LIB,"IMG_isBMP"));
	SDL::IMG_isCUR = reinterpret_cast<PF_IMG_isCUR>(dlsym(SDL_LIB,"IMG_isCUR"));
	SDL::IMG_isGIF = reinterpret_cast<PF_IMG_isGIF>(dlsym(SDL_LIB,"IMG_isGIF"));
	SDL::IMG_isICO = reinterpret_cast<PF_IMG_isICO>(dlsym(SDL_LIB,"IMG_isICO"));
	SDL::IMG_isJPG = reinterpret_cast<PF_IMG_isJPG>(dlsym(SDL_LIB,"IMG_isJPG"));
	SDL::IMG_isLBM = reinterpret_cast<PF_IMG_isLBM>(dlsym(SDL_LIB,"IMG_isLBM"));
	SDL::IMG_isPCX = reinterpret_cast<PF_IMG_isPCX>(dlsym(SDL_LIB,"IMG_isPCX"));
	SDL::IMG_isPNG = reinterpret_cast<PF_IMG_isPNG>(dlsym(SDL_LIB,"IMG_isPNG"));
	SDL::IMG_isPNM = reinterpret_cast<PF_IMG_isPNM>(dlsym(SDL_LIB,"IMG_isPNM"));
	SDL::IMG_isTIF = reinterpret_cast<PF_IMG_isTIF>(dlsym(SDL_LIB,"IMG_isTIF"));
	SDL::IMG_isWEBP = reinterpret_cast<PF_IMG_isWEBP>(dlsym(SDL_LIB,"IMG_isWEBP"));
	SDL::IMG_isXCF = reinterpret_cast<PF_IMG_isXCF>(dlsym(SDL_LIB,"IMG_isXCF"));
	SDL::IMG_isXPM = reinterpret_cast<PF_IMG_isXPM>(dlsym(SDL_LIB,"IMG_isXPM"));
	SDL::IMG_isXV = reinterpret_cast<PF_IMG_isXV>(dlsym(SDL_LIB,"IMG_isXV"));
	SDL::SDLNet_AddSocket = reinterpret_cast<PF_SDLNet_AddSocket>(dlsym(SDL_LIB,"SDLNet_AddSocket"));
	SDL::SDLNet_AllocPacket = reinterpret_cast<PF_SDLNet_AllocPacket>(dlsym(SDL_LIB,"SDLNet_AllocPacket"));
	SDL::SDLNet_AllocPacketV = reinterpret_cast<PF_SDLNet_AllocPacketV>(dlsym(SDL_LIB,"SDLNet_AllocPacketV"));
	SDL::SDLNet_AllocSocketSet = reinterpret_cast<PF_SDLNet_AllocSocketSet>(dlsym(SDL_LIB,"SDLNet_AllocSocketSet"));
	SDL::SDLNet_CheckSockets = reinterpret_cast<PF_SDLNet_CheckSockets>(dlsym(SDL_LIB,"SDLNet_CheckSockets"));
	SDL::SDLNet_DelSocket = reinterpret_cast<PF_SDLNet_DelSocket>(dlsym(SDL_LIB,"SDLNet_DelSocket"));
	SDL::SDLNet_FreePacket = reinterpret_cast<PF_SDLNet_FreePacket>(dlsym(SDL_LIB,"SDLNet_FreePacket"));
	SDL::SDLNet_FreePacketV = reinterpret_cast<PF_SDLNet_FreePacketV>(dlsym(SDL_LIB,"SDLNet_FreePacketV"));
	SDL::SDLNet_FreeSocketSet = reinterpret_cast<PF_SDLNet_FreeSocketSet>(dlsym(SDL_LIB,"SDLNet_FreeSocketSet"));
	SDL::SDLNet_GetLocalAddresses = reinterpret_cast<PF_SDLNet_GetLocalAddresses>(dlsym(SDL_LIB,"SDLNet_GetLocalAddresses"));
	SDL::SDLNet_Init = reinterpret_cast<PF_SDLNet_Init>(dlsym(SDL_LIB,"SDLNet_Init"));
	SDL::SDLNet_Linked_Version = reinterpret_cast<PF_SDLNet_Linked_Version>(dlsym(SDL_LIB,"SDLNet_Linked_Version"));
	SDL::SDLNet_Quit = reinterpret_cast<PF_SDLNet_Quit>(dlsym(SDL_LIB,"SDLNet_Quit"));
	SDL::SDLNet_Read16 = reinterpret_cast<PF_SDLNet_Read16>(dlsym(SDL_LIB,"SDLNet_Read16"));
	SDL::SDLNet_Read32 = reinterpret_cast<PF_SDLNet_Read32>(dlsym(SDL_LIB,"SDLNet_Read32"));
	SDL::SDLNet_ResizePacket = reinterpret_cast<PF_SDLNet_ResizePacket>(dlsym(SDL_LIB,"SDLNet_ResizePacket"));
	SDL::SDLNet_ResolveHost = reinterpret_cast<PF_SDLNet_ResolveHost>(dlsym(SDL_LIB,"SDLNet_ResolveHost"));
	SDL::SDLNet_ResolveIP = reinterpret_cast<PF_SDLNet_ResolveIP>(dlsym(SDL_LIB,"SDLNet_ResolveIP"));
	SDL::SDLNet_TCP_Accept = reinterpret_cast<PF_SDLNet_TCP_Accept>(dlsym(SDL_LIB,"SDLNet_TCP_Accept"));
	SDL::SDLNet_TCP_Close = reinterpret_cast<PF_SDLNet_TCP_Close>(dlsym(SDL_LIB,"SDLNet_TCP_Close"));
	SDL::SDLNet_TCP_GetPeerAddress = reinterpret_cast<PF_SDLNet_TCP_GetPeerAddress>(dlsym(SDL_LIB,"SDLNet_TCP_GetPeerAddress"));
	SDL::SDLNet_TCP_Open = reinterpret_cast<PF_SDLNet_TCP_Open>(dlsym(SDL_LIB,"SDLNet_TCP_Open"));
	SDL::SDLNet_TCP_Recv = reinterpret_cast<PF_SDLNet_TCP_Recv>(dlsym(SDL_LIB,"SDLNet_TCP_Recv"));
	SDL::SDLNet_TCP_Send = reinterpret_cast<PF_SDLNet_TCP_Send>(dlsym(SDL_LIB,"SDLNet_TCP_Send"));
	SDL::SDLNet_UDP_Bind = reinterpret_cast<PF_SDLNet_UDP_Bind>(dlsym(SDL_LIB,"SDLNet_UDP_Bind"));
	SDL::SDLNet_UDP_Close = reinterpret_cast<PF_SDLNet_UDP_Close>(dlsym(SDL_LIB,"SDLNet_UDP_Close"));
	SDL::SDLNet_UDP_GetPeerAddress = reinterpret_cast<PF_SDLNet_UDP_GetPeerAddress>(dlsym(SDL_LIB,"SDLNet_UDP_GetPeerAddress"));
	SDL::SDLNet_UDP_Open = reinterpret_cast<PF_SDLNet_UDP_Open>(dlsym(SDL_LIB,"SDLNet_UDP_Open"));
	SDL::SDLNet_UDP_Recv = reinterpret_cast<PF_SDLNet_UDP_Recv>(dlsym(SDL_LIB,"SDLNet_UDP_Recv"));
	SDL::SDLNet_UDP_RecvV = reinterpret_cast<PF_SDLNet_UDP_RecvV>(dlsym(SDL_LIB,"SDLNet_UDP_RecvV"));
	SDL::SDLNet_UDP_Send = reinterpret_cast<PF_SDLNet_UDP_Send>(dlsym(SDL_LIB,"SDLNet_UDP_Send"));
	SDL::SDLNet_UDP_SendV = reinterpret_cast<PF_SDLNet_UDP_SendV>(dlsym(SDL_LIB,"SDLNet_UDP_SendV"));
	SDL::SDLNet_UDP_SetPacketLoss = reinterpret_cast<PF_SDLNet_UDP_SetPacketLoss>(dlsym(SDL_LIB,"SDLNet_UDP_SetPacketLoss"));
	SDL::SDLNet_UDP_Unbind = reinterpret_cast<PF_SDLNet_UDP_Unbind>(dlsym(SDL_LIB,"SDLNet_UDP_Unbind"));
	SDL::SDLNet_Write16 = reinterpret_cast<PF_SDLNet_Write16>(dlsym(SDL_LIB,"SDLNet_Write16"));
	SDL::SDLNet_Write32 = reinterpret_cast<PF_SDLNet_Write32>(dlsym(SDL_LIB,"SDLNet_Write32"));
	SDL::AddTimer = reinterpret_cast<PF_SDL_AddTimer>(dlsym(SDL_LIB,"SDL_AddTimer"));
	SDL::AllocRW = reinterpret_cast<PF_SDL_AllocRW>(dlsym(SDL_LIB,"SDL_AllocRW"));
	SDL::AudioDriverName = reinterpret_cast<PF_SDL_AudioDriverName>(dlsym(SDL_LIB,"SDL_AudioDriverName"));
	SDL::AudioInit = reinterpret_cast<PF_SDL_AudioInit>(dlsym(SDL_LIB,"SDL_AudioInit"));
	SDL::AudioQuit = reinterpret_cast<PF_SDL_AudioQuit>(dlsym(SDL_LIB,"SDL_AudioQuit"));
	SDL::BuildAudioCVT = reinterpret_cast<PF_SDL_BuildAudioCVT>(dlsym(SDL_LIB,"SDL_BuildAudioCVT"));
	SDL::CDClose = reinterpret_cast<PF_SDL_CDClose>(dlsym(SDL_LIB,"SDL_CDClose"));
	SDL::CDEject = reinterpret_cast<PF_SDL_CDEject>(dlsym(SDL_LIB,"SDL_CDEject"));
	SDL::CDName = reinterpret_cast<PF_SDL_CDName>(dlsym(SDL_LIB,"SDL_CDName"));
	SDL::CDNumDrives = reinterpret_cast<PF_SDL_CDNumDrives>(dlsym(SDL_LIB,"SDL_CDNumDrives"));
	SDL::CDOpen = reinterpret_cast<PF_SDL_CDOpen>(dlsym(SDL_LIB,"SDL_CDOpen"));
	SDL::CDPause = reinterpret_cast<PF_SDL_CDPause>(dlsym(SDL_LIB,"SDL_CDPause"));
	SDL::CDPlay = reinterpret_cast<PF_SDL_CDPlay>(dlsym(SDL_LIB,"SDL_CDPlay"));
	SDL::CDPlayTracks = reinterpret_cast<PF_SDL_CDPlayTracks>(dlsym(SDL_LIB,"SDL_CDPlayTracks"));
	SDL::CDResume = reinterpret_cast<PF_SDL_CDResume>(dlsym(SDL_LIB,"SDL_CDResume"));
	SDL::CDStatus = reinterpret_cast<PF_SDL_CDStatus>(dlsym(SDL_LIB,"SDL_CDStatus"));
	SDL::CDStop = reinterpret_cast<PF_SDL_CDStop>(dlsym(SDL_LIB,"SDL_CDStop"));
	SDL::ClearError = reinterpret_cast<PF_SDL_ClearError>(dlsym(SDL_LIB,"SDL_ClearError"));
	SDL::CloseAudio = reinterpret_cast<PF_SDL_CloseAudio>(dlsym(SDL_LIB,"SDL_CloseAudio"));
	SDL::CondBroadcast = reinterpret_cast<PF_SDL_CondBroadcast>(dlsym(SDL_LIB,"SDL_CondBroadcast"));
	SDL::CondSignal = reinterpret_cast<PF_SDL_CondSignal>(dlsym(SDL_LIB,"SDL_CondSignal"));
	SDL::CondWait = reinterpret_cast<PF_SDL_CondWait>(dlsym(SDL_LIB,"SDL_CondWait"));
	SDL::CondWaitTimeout = reinterpret_cast<PF_SDL_CondWaitTimeout>(dlsym(SDL_LIB,"SDL_CondWaitTimeout"));
	SDL::ConvertAudio = reinterpret_cast<PF_SDL_ConvertAudio>(dlsym(SDL_LIB,"SDL_ConvertAudio"));
	SDL::ConvertSurface = reinterpret_cast<PF_SDL_ConvertSurface>(dlsym(SDL_LIB,"SDL_ConvertSurface"));
	SDL::CreateCond = reinterpret_cast<PF_SDL_CreateCond>(dlsym(SDL_LIB,"SDL_CreateCond"));
	SDL::CreateCursor = reinterpret_cast<PF_SDL_CreateCursor>(dlsym(SDL_LIB,"SDL_CreateCursor"));
	SDL::CreateMutex = reinterpret_cast<PF_SDL_CreateMutex>(dlsym(SDL_LIB,"SDL_CreateMutex"));
	SDL::CreateRGBSurface = reinterpret_cast<PF_SDL_CreateRGBSurface>(dlsym(SDL_LIB,"SDL_CreateRGBSurface"));
	SDL::CreateRGBSurfaceFrom = reinterpret_cast<PF_SDL_CreateRGBSurfaceFrom>(dlsym(SDL_LIB,"SDL_CreateRGBSurfaceFrom"));
	SDL::CreateSemaphore = reinterpret_cast<PF_SDL_CreateSemaphore>(dlsym(SDL_LIB,"SDL_CreateSemaphore"));
	SDL::CreateThread = reinterpret_cast<PF_SDL_CreateThread>(dlsym(SDL_LIB,"SDL_CreateThread"));
	SDL::CreateThread = reinterpret_cast<PF_SDL_CreateThread>(dlsym(SDL_LIB,"SDL_CreateThread"));
	SDL::CreateYUVOverlay = reinterpret_cast<PF_SDL_CreateYUVOverlay>(dlsym(SDL_LIB,"SDL_CreateYUVOverlay"));
	SDL::Delay = reinterpret_cast<PF_SDL_Delay>(dlsym(SDL_LIB,"SDL_Delay"));
	SDL::DestroyCond = reinterpret_cast<PF_SDL_DestroyCond>(dlsym(SDL_LIB,"SDL_DestroyCond"));
	SDL::DestroyMutex = reinterpret_cast<PF_SDL_DestroyMutex>(dlsym(SDL_LIB,"SDL_DestroyMutex"));
	SDL::DestroySemaphore = reinterpret_cast<PF_SDL_DestroySemaphore>(dlsym(SDL_LIB,"SDL_DestroySemaphore"));
	SDL::DisplayFormat = reinterpret_cast<PF_SDL_DisplayFormat>(dlsym(SDL_LIB,"SDL_DisplayFormat"));
	SDL::DisplayFormatAlpha = reinterpret_cast<PF_SDL_DisplayFormatAlpha>(dlsym(SDL_LIB,"SDL_DisplayFormatAlpha"));
	SDL::DisplayYUVOverlay = reinterpret_cast<PF_SDL_DisplayYUVOverlay>(dlsym(SDL_LIB,"SDL_DisplayYUVOverlay"));
	SDL::EnableKeyRepeat = reinterpret_cast<PF_SDL_EnableKeyRepeat>(dlsym(SDL_LIB,"SDL_EnableKeyRepeat"));
	SDL::EnableUNICODE = reinterpret_cast<PF_SDL_EnableUNICODE>(dlsym(SDL_LIB,"SDL_EnableUNICODE"));
	SDL::Error = reinterpret_cast<PF_SDL_Error>(dlsym(SDL_LIB,"SDL_Error"));
	SDL::EventState = reinterpret_cast<PF_SDL_EventState>(dlsym(SDL_LIB,"SDL_EventState"));
	SDL::FillRect = reinterpret_cast<PF_SDL_FillRect>(dlsym(SDL_LIB,"SDL_FillRect"));
	SDL::Flip = reinterpret_cast<PF_SDL_Flip>(dlsym(SDL_LIB,"SDL_Flip"));
	SDL::FreeCursor = reinterpret_cast<PF_SDL_FreeCursor>(dlsym(SDL_LIB,"SDL_FreeCursor"));
	SDL::FreeRW = reinterpret_cast<PF_SDL_FreeRW>(dlsym(SDL_LIB,"SDL_FreeRW"));
	SDL::FreeSurface = reinterpret_cast<PF_SDL_FreeSurface>(dlsym(SDL_LIB,"SDL_FreeSurface"));
	SDL::FreeWAV = reinterpret_cast<PF_SDL_FreeWAV>(dlsym(SDL_LIB,"SDL_FreeWAV"));
	SDL::FreeYUVOverlay = reinterpret_cast<PF_SDL_FreeYUVOverlay>(dlsym(SDL_LIB,"SDL_FreeYUVOverlay"));
	SDL::GL_GetAttribute = reinterpret_cast<PF_SDL_GL_GetAttribute>(dlsym(SDL_LIB,"SDL_GL_GetAttribute"));
	SDL::GL_GetProcAddress = reinterpret_cast<PF_SDL_GL_GetProcAddress>(dlsym(SDL_LIB,"SDL_GL_GetProcAddress"));
	SDL::GL_LoadLibrary = reinterpret_cast<PF_SDL_GL_LoadLibrary>(dlsym(SDL_LIB,"SDL_GL_LoadLibrary"));
	SDL::GL_Lock = reinterpret_cast<PF_SDL_GL_Lock>(dlsym(SDL_LIB,"SDL_GL_Lock"));
	SDL::GL_SetAttribute = reinterpret_cast<PF_SDL_GL_SetAttribute>(dlsym(SDL_LIB,"SDL_GL_SetAttribute"));
	SDL::GL_SwapBuffers = reinterpret_cast<PF_SDL_GL_SwapBuffers>(dlsym(SDL_LIB,"SDL_GL_SwapBuffers"));
	SDL::GL_Unlock = reinterpret_cast<PF_SDL_GL_Unlock>(dlsym(SDL_LIB,"SDL_GL_Unlock"));
	SDL::GL_UpdateRects = reinterpret_cast<PF_SDL_GL_UpdateRects>(dlsym(SDL_LIB,"SDL_GL_UpdateRects"));
	SDL::GetAppState = reinterpret_cast<PF_SDL_GetAppState>(dlsym(SDL_LIB,"SDL_GetAppState"));
	SDL::GetAudioStatus = reinterpret_cast<PF_SDL_GetAudioStatus>(dlsym(SDL_LIB,"SDL_GetAudioStatus"));
	SDL::GetClipRect = reinterpret_cast<PF_SDL_GetClipRect>(dlsym(SDL_LIB,"SDL_GetClipRect"));
	SDL::GetCursor = reinterpret_cast<PF_SDL_GetCursor>(dlsym(SDL_LIB,"SDL_GetCursor"));
	SDL::GetError = reinterpret_cast<PF_SDL_GetError>(dlsym(SDL_LIB,"SDL_GetError"));
	SDL::GetEventFilter = reinterpret_cast<PF_SDL_GetEventFilter>(dlsym(SDL_LIB,"SDL_GetEventFilter"));
	SDL::GetGammaRamp = reinterpret_cast<PF_SDL_GetGammaRamp>(dlsym(SDL_LIB,"SDL_GetGammaRamp"));
	SDL::GetKeyName = reinterpret_cast<PF_SDL_GetKeyName>(dlsym(SDL_LIB,"SDL_GetKeyName"));
	SDL::GetKeyRepeat = reinterpret_cast<PF_SDL_GetKeyRepeat>(dlsym(SDL_LIB,"SDL_GetKeyRepeat"));
	SDL::GetKeyState = reinterpret_cast<PF_SDL_GetKeyState>(dlsym(SDL_LIB,"SDL_GetKeyState"));
	SDL::GetModState = reinterpret_cast<PF_SDL_GetModState>(dlsym(SDL_LIB,"SDL_GetModState"));
	SDL::GetMouseState = reinterpret_cast<PF_SDL_GetMouseState>(dlsym(SDL_LIB,"SDL_GetMouseState"));
	SDL::GetRGB = reinterpret_cast<PF_SDL_GetRGB>(dlsym(SDL_LIB,"SDL_GetRGB"));
	SDL::GetRGBA = reinterpret_cast<PF_SDL_GetRGBA>(dlsym(SDL_LIB,"SDL_GetRGBA"));
	SDL::GetRelativeMouseState = reinterpret_cast<PF_SDL_GetRelativeMouseState>(dlsym(SDL_LIB,"SDL_GetRelativeMouseState"));
	SDL::GetThreadID = reinterpret_cast<PF_SDL_GetThreadID>(dlsym(SDL_LIB,"SDL_GetThreadID"));
	SDL::GetTicks = reinterpret_cast<PF_SDL_GetTicks>(dlsym(SDL_LIB,"SDL_GetTicks"));
	SDL::GetVideoInfo = reinterpret_cast<PF_SDL_GetVideoInfo>(dlsym(SDL_LIB,"SDL_GetVideoInfo"));
	SDL::GetVideoSurface = reinterpret_cast<PF_SDL_GetVideoSurface>(dlsym(SDL_LIB,"SDL_GetVideoSurface"));
	//SDL::GetWMInfo = reinterpret_cast<PF_SDL_GetWMInfo>(dlsym(SDL_LIB,"SDL_GetWMInfo"));
	SDL::Has3DNow = reinterpret_cast<PF_SDL_Has3DNow>(dlsym(SDL_LIB,"SDL_Has3DNow"));
	SDL::Has3DNowExt = reinterpret_cast<PF_SDL_Has3DNowExt>(dlsym(SDL_LIB,"SDL_Has3DNowExt"));
	SDL::HasAltiVec = reinterpret_cast<PF_SDL_HasAltiVec>(dlsym(SDL_LIB,"SDL_HasAltiVec"));
	SDL::HasMMX = reinterpret_cast<PF_SDL_HasMMX>(dlsym(SDL_LIB,"SDL_HasMMX"));
	SDL::HasMMXExt = reinterpret_cast<PF_SDL_HasMMXExt>(dlsym(SDL_LIB,"SDL_HasMMXExt"));
	SDL::HasRDTSC = reinterpret_cast<PF_SDL_HasRDTSC>(dlsym(SDL_LIB,"SDL_HasRDTSC"));
	SDL::HasSSE = reinterpret_cast<PF_SDL_HasSSE>(dlsym(SDL_LIB,"SDL_HasSSE"));
	SDL::HasSSE2 = reinterpret_cast<PF_SDL_HasSSE2>(dlsym(SDL_LIB,"SDL_HasSSE2"));
	SDL::Init = reinterpret_cast<PF_SDL_Init>(dlsym(SDL_LIB,"SDL_Init"));
	//SDL::InitQuickDraw = reinterpret_cast<PF_SDL_InitQuickDraw>(dlsym(SDL_LIB,"SDL_InitQuickDraw"));
	SDL::InitSubSystem = reinterpret_cast<PF_SDL_InitSubSystem>(dlsym(SDL_LIB,"SDL_InitSubSystem"));
	SDL::JoystickClose = reinterpret_cast<PF_SDL_JoystickClose>(dlsym(SDL_LIB,"SDL_JoystickClose"));
	SDL::JoystickEventState = reinterpret_cast<PF_SDL_JoystickEventState>(dlsym(SDL_LIB,"SDL_JoystickEventState"));
	SDL::JoystickGetAxis = reinterpret_cast<PF_SDL_JoystickGetAxis>(dlsym(SDL_LIB,"SDL_JoystickGetAxis"));
	SDL::JoystickGetBall = reinterpret_cast<PF_SDL_JoystickGetBall>(dlsym(SDL_LIB,"SDL_JoystickGetBall"));
	SDL::JoystickGetButton = reinterpret_cast<PF_SDL_JoystickGetButton>(dlsym(SDL_LIB,"SDL_JoystickGetButton"));
	SDL::JoystickGetHat = reinterpret_cast<PF_SDL_JoystickGetHat>(dlsym(SDL_LIB,"SDL_JoystickGetHat"));
	SDL::JoystickIndex = reinterpret_cast<PF_SDL_JoystickIndex>(dlsym(SDL_LIB,"SDL_JoystickIndex"));
	SDL::JoystickName = reinterpret_cast<PF_SDL_JoystickName>(dlsym(SDL_LIB,"SDL_JoystickName"));
	SDL::JoystickNumAxes = reinterpret_cast<PF_SDL_JoystickNumAxes>(dlsym(SDL_LIB,"SDL_JoystickNumAxes"));
	SDL::JoystickNumBalls = reinterpret_cast<PF_SDL_JoystickNumBalls>(dlsym(SDL_LIB,"SDL_JoystickNumBalls"));
	SDL::JoystickNumButtons = reinterpret_cast<PF_SDL_JoystickNumButtons>(dlsym(SDL_LIB,"SDL_JoystickNumButtons"));
	SDL::JoystickNumHats = reinterpret_cast<PF_SDL_JoystickNumHats>(dlsym(SDL_LIB,"SDL_JoystickNumHats"));
	SDL::JoystickOpen = reinterpret_cast<PF_SDL_JoystickOpen>(dlsym(SDL_LIB,"SDL_JoystickOpen"));
	SDL::JoystickOpened = reinterpret_cast<PF_SDL_JoystickOpened>(dlsym(SDL_LIB,"SDL_JoystickOpened"));
	SDL::JoystickUpdate = reinterpret_cast<PF_SDL_JoystickUpdate>(dlsym(SDL_LIB,"SDL_JoystickUpdate"));
	SDL::KillThread = reinterpret_cast<PF_SDL_KillThread>(dlsym(SDL_LIB,"SDL_KillThread"));
	SDL::Linked_Version = reinterpret_cast<PF_SDL_Linked_Version>(dlsym(SDL_LIB,"SDL_Linked_Version"));
	SDL::ListModes = reinterpret_cast<PF_SDL_ListModes>(dlsym(SDL_LIB,"SDL_ListModes"));
	SDL::LoadBMP_RW = reinterpret_cast<PF_SDL_LoadBMP_RW>(dlsym(SDL_LIB,"SDL_LoadBMP_RW"));
	SDL::LoadFunction = reinterpret_cast<PF_SDL_LoadFunction>(dlsym(SDL_LIB,"SDL_LoadFunction"));
	SDL::LoadObject = reinterpret_cast<PF_SDL_LoadObject>(dlsym(SDL_LIB,"SDL_LoadObject"));
	SDL::LoadWAV_RW = reinterpret_cast<PF_SDL_LoadWAV_RW>(dlsym(SDL_LIB,"SDL_LoadWAV_RW"));
	SDL::LockAudio = reinterpret_cast<PF_SDL_LockAudio>(dlsym(SDL_LIB,"SDL_LockAudio"));
	SDL::LockSurface = reinterpret_cast<PF_SDL_LockSurface>(dlsym(SDL_LIB,"SDL_LockSurface"));
	SDL::LockYUVOverlay = reinterpret_cast<PF_SDL_LockYUVOverlay>(dlsym(SDL_LIB,"SDL_LockYUVOverlay"));
	SDL::LowerBlit = reinterpret_cast<PF_SDL_LowerBlit>(dlsym(SDL_LIB,"SDL_LowerBlit"));
	SDL::MapRGB = reinterpret_cast<PF_SDL_MapRGB>(dlsym(SDL_LIB,"SDL_MapRGB"));
	SDL::MapRGBA = reinterpret_cast<PF_SDL_MapRGBA>(dlsym(SDL_LIB,"SDL_MapRGBA"));
	SDL::MixAudio = reinterpret_cast<PF_SDL_MixAudio>(dlsym(SDL_LIB,"SDL_MixAudio"));
	SDL::NumJoysticks = reinterpret_cast<PF_SDL_NumJoysticks>(dlsym(SDL_LIB,"SDL_NumJoysticks"));
	SDL::OpenAudio = reinterpret_cast<PF_SDL_OpenAudio>(dlsym(SDL_LIB,"SDL_OpenAudio"));
	SDL::PauseAudio = reinterpret_cast<PF_SDL_PauseAudio>(dlsym(SDL_LIB,"SDL_PauseAudio"));
	SDL::PeepEvents = reinterpret_cast<PF_SDL_PeepEvents>(dlsym(SDL_LIB,"SDL_PeepEvents"));
	SDL::PollEvent = reinterpret_cast<PF_SDL_PollEvent>(dlsym(SDL_LIB,"SDL_PollEvent"));
	SDL::PumpEvents = reinterpret_cast<PF_SDL_PumpEvents>(dlsym(SDL_LIB,"SDL_PumpEvents"));
	SDL::PushEvent = reinterpret_cast<PF_SDL_PushEvent>(dlsym(SDL_LIB,"SDL_PushEvent"));
	SDL::Quit = reinterpret_cast<PF_SDL_Quit>(dlsym(SDL_LIB,"SDL_Quit"));
	SDL::QuitSubSystem = reinterpret_cast<PF_SDL_QuitSubSystem>(dlsym(SDL_LIB,"SDL_QuitSubSystem"));
	SDL::RWFromConstMem = reinterpret_cast<PF_SDL_RWFromConstMem>(dlsym(SDL_LIB,"SDL_RWFromConstMem"));
	SDL::RWFromFP = reinterpret_cast<PF_SDL_RWFromFP>(dlsym(SDL_LIB,"SDL_RWFromFP"));
	SDL::RWFromFile = reinterpret_cast<PF_SDL_RWFromFile>(dlsym(SDL_LIB,"SDL_RWFromFile"));
	SDL::RWFromMem = reinterpret_cast<PF_SDL_RWFromMem>(dlsym(SDL_LIB,"SDL_RWFromMem"));
	SDL::ReadBE16 = reinterpret_cast<PF_SDL_ReadBE16>(dlsym(SDL_LIB,"SDL_ReadBE16"));
	SDL::ReadBE32 = reinterpret_cast<PF_SDL_ReadBE32>(dlsym(SDL_LIB,"SDL_ReadBE32"));
	SDL::ReadBE64 = reinterpret_cast<PF_SDL_ReadBE64>(dlsym(SDL_LIB,"SDL_ReadBE64"));
	SDL::ReadLE16 = reinterpret_cast<PF_SDL_ReadLE16>(dlsym(SDL_LIB,"SDL_ReadLE16"));
	SDL::ReadLE32 = reinterpret_cast<PF_SDL_ReadLE32>(dlsym(SDL_LIB,"SDL_ReadLE32"));
	SDL::ReadLE64 = reinterpret_cast<PF_SDL_ReadLE64>(dlsym(SDL_LIB,"SDL_ReadLE64"));
	//SDL::RegisterApp = reinterpret_cast<PF_SDL_RegisterApp>(dlsym(SDL_LIB,"SDL_RegisterApp"));
	SDL::RemoveTimer = reinterpret_cast<PF_SDL_RemoveTimer>(dlsym(SDL_LIB,"SDL_RemoveTimer"));
	SDL::SaveBMP_RW = reinterpret_cast<PF_SDL_SaveBMP_RW>(dlsym(SDL_LIB,"SDL_SaveBMP_RW"));
	SDL::SemPost = reinterpret_cast<PF_SDL_SemPost>(dlsym(SDL_LIB,"SDL_SemPost"));
	SDL::SemTryWait = reinterpret_cast<PF_SDL_SemTryWait>(dlsym(SDL_LIB,"SDL_SemTryWait"));
	SDL::SemValue = reinterpret_cast<PF_SDL_SemValue>(dlsym(SDL_LIB,"SDL_SemValue"));
	SDL::SemWait = reinterpret_cast<PF_SDL_SemWait>(dlsym(SDL_LIB,"SDL_SemWait"));
	SDL::SemWaitTimeout = reinterpret_cast<PF_SDL_SemWaitTimeout>(dlsym(SDL_LIB,"SDL_SemWaitTimeout"));
	SDL::SetAlpha = reinterpret_cast<PF_SDL_SetAlpha>(dlsym(SDL_LIB,"SDL_SetAlpha"));
	SDL::SetClipRect = reinterpret_cast<PF_SDL_SetClipRect>(dlsym(SDL_LIB,"SDL_SetClipRect"));
	SDL::SetColorKey = reinterpret_cast<PF_SDL_SetColorKey>(dlsym(SDL_LIB,"SDL_SetColorKey"));
	SDL::SetColors = reinterpret_cast<PF_SDL_SetColors>(dlsym(SDL_LIB,"SDL_SetColors"));
	SDL::SetCursor = reinterpret_cast<PF_SDL_SetCursor>(dlsym(SDL_LIB,"SDL_SetCursor"));
	SDL::SetError = reinterpret_cast<PF_SDL_SetError>(dlsym(SDL_LIB,"SDL_SetError"));
	SDL::SetEventFilter = reinterpret_cast<PF_SDL_SetEventFilter>(dlsym(SDL_LIB,"SDL_SetEventFilter"));
	SDL::SetGamma = reinterpret_cast<PF_SDL_SetGamma>(dlsym(SDL_LIB,"SDL_SetGamma"));
	SDL::SetGammaRamp = reinterpret_cast<PF_SDL_SetGammaRamp>(dlsym(SDL_LIB,"SDL_SetGammaRamp"));
	SDL::SetModState = reinterpret_cast<PF_SDL_SetModState>(dlsym(SDL_LIB,"SDL_SetModState"));
	//SDL::SetModuleHandle = reinterpret_cast<PF_SDL_SetModuleHandle>(dlsym(SDL_LIB,"SDL_SetModuleHandle"));
	SDL::SetPalette = reinterpret_cast<PF_SDL_SetPalette>(dlsym(SDL_LIB,"SDL_SetPalette"));
	SDL::SetTimer = reinterpret_cast<PF_SDL_SetTimer>(dlsym(SDL_LIB,"SDL_SetTimer"));
	SDL::SetVideoMode = reinterpret_cast<PF_SDL_SetVideoMode>(dlsym(SDL_LIB,"SDL_SetVideoMode"));
	SDL::ShowCursor = reinterpret_cast<PF_SDL_ShowCursor>(dlsym(SDL_LIB,"SDL_ShowCursor"));
	SDL::SoftStretch = reinterpret_cast<PF_SDL_SoftStretch>(dlsym(SDL_LIB,"SDL_SoftStretch"));
	/*SDL::Swap16 = reinterpret_cast<PF_SDL_Swap16>(dlsym(SDL_LIB,"SDL_Swap16"));
	SDL::Swap32 = reinterpret_cast<PF_SDL_Swap32>(dlsym(SDL_LIB,"SDL_Swap32"));
	SDL::Swap32 = reinterpret_cast<PF_SDL_Swap32>(dlsym(SDL_LIB,"SDL_Swap32"));
	SDL::Swap32 = reinterpret_cast<PF_SDL_Swap32>(dlsym(SDL_LIB,"SDL_Swap32"));
	SDL::Swap32 = reinterpret_cast<PF_SDL_Swap32>(dlsym(SDL_LIB,"SDL_Swap32"));
	SDL::Swap32 = reinterpret_cast<PF_SDL_Swap32>(dlsym(SDL_LIB,"SDL_Swap32"));
	SDL::Swap64 = reinterpret_cast<PF_SDL_Swap64>(dlsym(SDL_LIB,"SDL_Swap64"));
	SDL::Swap64 = reinterpret_cast<PF_SDL_Swap64>(dlsym(SDL_LIB,"SDL_Swap64"));
	SDL::Swap64 = reinterpret_cast<PF_SDL_Swap64>(dlsym(SDL_LIB,"SDL_Swap64"));*/
	SDL::ThreadID = reinterpret_cast<PF_SDL_ThreadID>(dlsym(SDL_LIB,"SDL_ThreadID"));
	SDL::UnloadObject = reinterpret_cast<PF_SDL_UnloadObject>(dlsym(SDL_LIB,"SDL_UnloadObject"));
	SDL::UnlockAudio = reinterpret_cast<PF_SDL_UnlockAudio>(dlsym(SDL_LIB,"SDL_UnlockAudio"));
	SDL::UnlockSurface = reinterpret_cast<PF_SDL_UnlockSurface>(dlsym(SDL_LIB,"SDL_UnlockSurface"));
	SDL::UnlockYUVOverlay = reinterpret_cast<PF_SDL_UnlockYUVOverlay>(dlsym(SDL_LIB,"SDL_UnlockYUVOverlay"));
	//SDL::UnregisterApp = reinterpret_cast<PF_SDL_UnregisterApp>(dlsym(SDL_LIB,"SDL_UnregisterApp"));
	SDL::UpdateRect = reinterpret_cast<PF_SDL_UpdateRect>(dlsym(SDL_LIB,"SDL_UpdateRect"));
	SDL::UpdateRects = reinterpret_cast<PF_SDL_UpdateRects>(dlsym(SDL_LIB,"SDL_UpdateRects"));
	SDL::UpperBlit = reinterpret_cast<PF_SDL_UpperBlit>(dlsym(SDL_LIB,"SDL_UpperBlit"));
	SDL::VideoDriverName = reinterpret_cast<PF_SDL_VideoDriverName>(dlsym(SDL_LIB,"SDL_VideoDriverName"));
	SDL::VideoInit = reinterpret_cast<PF_SDL_VideoInit>(dlsym(SDL_LIB,"SDL_VideoInit"));
	SDL::VideoModeOK = reinterpret_cast<PF_SDL_VideoModeOK>(dlsym(SDL_LIB,"SDL_VideoModeOK"));
	SDL::VideoQuit = reinterpret_cast<PF_SDL_VideoQuit>(dlsym(SDL_LIB,"SDL_VideoQuit"));
	SDL::WM_GetCaption = reinterpret_cast<PF_SDL_WM_GetCaption>(dlsym(SDL_LIB,"SDL_WM_GetCaption"));
	SDL::WM_GrabInput = reinterpret_cast<PF_SDL_WM_GrabInput>(dlsym(SDL_LIB,"SDL_WM_GrabInput"));
	SDL::WM_IconifyWindow = reinterpret_cast<PF_SDL_WM_IconifyWindow>(dlsym(SDL_LIB,"SDL_WM_IconifyWindow"));
	SDL::WM_SetCaption = reinterpret_cast<PF_SDL_WM_SetCaption>(dlsym(SDL_LIB,"SDL_WM_SetCaption"));
	SDL::WM_SetIcon = reinterpret_cast<PF_SDL_WM_SetIcon>(dlsym(SDL_LIB,"SDL_WM_SetIcon"));
	SDL::WM_ToggleFullScreen = reinterpret_cast<PF_SDL_WM_ToggleFullScreen>(dlsym(SDL_LIB,"SDL_WM_ToggleFullScreen"));
	SDL::WaitEvent = reinterpret_cast<PF_SDL_WaitEvent>(dlsym(SDL_LIB,"SDL_WaitEvent"));
	SDL::WaitThread = reinterpret_cast<PF_SDL_WaitThread>(dlsym(SDL_LIB,"SDL_WaitThread"));
	SDL::WarpMouse = reinterpret_cast<PF_SDL_WarpMouse>(dlsym(SDL_LIB,"SDL_WarpMouse"));
	SDL::WasInit = reinterpret_cast<PF_SDL_WasInit>(dlsym(SDL_LIB,"SDL_WasInit"));
	SDL::WriteBE16 = reinterpret_cast<PF_SDL_WriteBE16>(dlsym(SDL_LIB,"SDL_WriteBE16"));
	SDL::WriteBE32 = reinterpret_cast<PF_SDL_WriteBE32>(dlsym(SDL_LIB,"SDL_WriteBE32"));
	SDL::WriteBE64 = reinterpret_cast<PF_SDL_WriteBE64>(dlsym(SDL_LIB,"SDL_WriteBE64"));
	SDL::WriteLE16 = reinterpret_cast<PF_SDL_WriteLE16>(dlsym(SDL_LIB,"SDL_WriteLE16"));
	SDL::WriteLE32 = reinterpret_cast<PF_SDL_WriteLE32>(dlsym(SDL_LIB,"SDL_WriteLE32"));
	SDL::WriteLE64 = reinterpret_cast<PF_SDL_WriteLE64>(dlsym(SDL_LIB,"SDL_WriteLE64"));
}
void OffloadSDL()
{
	dlclose(SDL_LIB);
}

namespace SDL
{
PF_IMG_Init IMG_Init;
PF_IMG_InvertAlpha IMG_InvertAlpha;
PF_IMG_Linked_Version IMG_Linked_Version;
PF_IMG_Load IMG_Load;
PF_IMG_LoadBMP_RW IMG_LoadBMP_RW;
PF_IMG_LoadCUR_RW IMG_LoadCUR_RW;
PF_IMG_LoadGIF_RW IMG_LoadGIF_RW;
PF_IMG_LoadICO_RW IMG_LoadICO_RW;
PF_IMG_LoadJPG_RW IMG_LoadJPG_RW;
PF_IMG_LoadLBM_RW IMG_LoadLBM_RW;
PF_IMG_LoadPCX_RW IMG_LoadPCX_RW;
PF_IMG_LoadPNG_RW IMG_LoadPNG_RW;
PF_IMG_LoadPNM_RW IMG_LoadPNM_RW;
PF_IMG_LoadTGA_RW IMG_LoadTGA_RW;
PF_IMG_LoadTIF_RW IMG_LoadTIF_RW;
PF_IMG_LoadTyped_RW IMG_LoadTyped_RW;
PF_IMG_LoadWEBP_RW IMG_LoadWEBP_RW;
PF_IMG_LoadXCF_RW IMG_LoadXCF_RW;
PF_IMG_LoadXPM_RW IMG_LoadXPM_RW;
PF_IMG_LoadXV_RW IMG_LoadXV_RW;
PF_IMG_Load_RW IMG_Load_RW;
PF_IMG_Quit IMG_Quit;
PF_IMG_ReadXPMFromArray IMG_ReadXPMFromArray;
PF_IMG_isBMP IMG_isBMP;
PF_IMG_isCUR IMG_isCUR;
PF_IMG_isGIF IMG_isGIF;
PF_IMG_isICO IMG_isICO;
PF_IMG_isJPG IMG_isJPG;
PF_IMG_isLBM IMG_isLBM;
PF_IMG_isPCX IMG_isPCX;
PF_IMG_isPNG IMG_isPNG;
PF_IMG_isPNM IMG_isPNM;
PF_IMG_isTIF IMG_isTIF;
PF_IMG_isWEBP IMG_isWEBP;
PF_IMG_isXCF IMG_isXCF;
PF_IMG_isXPM IMG_isXPM;
PF_IMG_isXV IMG_isXV;
PF_SDLNet_AddSocket SDLNet_AddSocket;
PF_SDLNet_AllocPacket SDLNet_AllocPacket;
PF_SDLNet_AllocPacketV SDLNet_AllocPacketV;
PF_SDLNet_AllocSocketSet SDLNet_AllocSocketSet;
PF_SDLNet_CheckSockets SDLNet_CheckSockets;
PF_SDLNet_DelSocket SDLNet_DelSocket;
PF_SDLNet_FreePacket SDLNet_FreePacket;
PF_SDLNet_FreePacketV SDLNet_FreePacketV;
PF_SDLNet_FreeSocketSet SDLNet_FreeSocketSet;
PF_SDLNet_GetLocalAddresses SDLNet_GetLocalAddresses;
PF_SDLNet_Init SDLNet_Init;
PF_SDLNet_Linked_Version SDLNet_Linked_Version;
PF_SDLNet_Quit SDLNet_Quit;
PF_SDLNet_Read16 SDLNet_Read16;
PF_SDLNet_Read32 SDLNet_Read32;
PF_SDLNet_ResizePacket SDLNet_ResizePacket;
PF_SDLNet_ResolveHost SDLNet_ResolveHost;
PF_SDLNet_ResolveIP SDLNet_ResolveIP;
PF_SDLNet_TCP_Accept SDLNet_TCP_Accept;
PF_SDLNet_TCP_Close SDLNet_TCP_Close;
PF_SDLNet_TCP_GetPeerAddress SDLNet_TCP_GetPeerAddress;
PF_SDLNet_TCP_Open SDLNet_TCP_Open;
PF_SDLNet_TCP_Recv SDLNet_TCP_Recv;
PF_SDLNet_TCP_Send SDLNet_TCP_Send;
PF_SDLNet_UDP_Bind SDLNet_UDP_Bind;
PF_SDLNet_UDP_Close SDLNet_UDP_Close;
PF_SDLNet_UDP_GetPeerAddress SDLNet_UDP_GetPeerAddress;
PF_SDLNet_UDP_Open SDLNet_UDP_Open;
PF_SDLNet_UDP_Recv SDLNet_UDP_Recv;
PF_SDLNet_UDP_RecvV SDLNet_UDP_RecvV;
PF_SDLNet_UDP_Send SDLNet_UDP_Send;
PF_SDLNet_UDP_SendV SDLNet_UDP_SendV;
PF_SDLNet_UDP_SetPacketLoss SDLNet_UDP_SetPacketLoss;
PF_SDLNet_UDP_Unbind SDLNet_UDP_Unbind;
PF_SDLNet_Write16 SDLNet_Write16;
PF_SDLNet_Write32 SDLNet_Write32;
PF_SDL_AddTimer AddTimer;
PF_SDL_AllocRW AllocRW;
PF_SDL_AudioDriverName AudioDriverName;
PF_SDL_AudioInit AudioInit;
PF_SDL_AudioQuit AudioQuit;
PF_SDL_BuildAudioCVT BuildAudioCVT;
PF_SDL_CDClose CDClose;
PF_SDL_CDEject CDEject;
PF_SDL_CDName CDName;
PF_SDL_CDNumDrives CDNumDrives;
PF_SDL_CDOpen CDOpen;
PF_SDL_CDPause CDPause;
PF_SDL_CDPlay CDPlay;
PF_SDL_CDPlayTracks CDPlayTracks;
PF_SDL_CDResume CDResume;
PF_SDL_CDStatus CDStatus;
PF_SDL_CDStop CDStop;
PF_SDL_ClearError ClearError;
PF_SDL_CloseAudio CloseAudio;
PF_SDL_CondBroadcast CondBroadcast;
PF_SDL_CondSignal CondSignal;
PF_SDL_CondWait CondWait;
PF_SDL_CondWaitTimeout CondWaitTimeout;
PF_SDL_ConvertAudio ConvertAudio;
PF_SDL_ConvertSurface ConvertSurface;
PF_SDL_CreateCond CreateCond;
PF_SDL_CreateCursor CreateCursor;
PF_SDL_CreateMutex CreateMutex;
PF_SDL_CreateRGBSurface CreateRGBSurface;
PF_SDL_CreateRGBSurfaceFrom CreateRGBSurfaceFrom;
PF_SDL_CreateSemaphore CreateSemaphore;
PF_SDL_CreateThread CreateThread;
//PF_SDL_CreateThread CreateThread;
PF_SDL_CreateYUVOverlay CreateYUVOverlay;
PF_SDL_Delay Delay;
PF_SDL_DestroyCond DestroyCond;
PF_SDL_DestroyMutex DestroyMutex;
PF_SDL_DestroySemaphore DestroySemaphore;
PF_SDL_DisplayFormat DisplayFormat;
PF_SDL_DisplayFormatAlpha DisplayFormatAlpha;
PF_SDL_DisplayYUVOverlay DisplayYUVOverlay;
PF_SDL_EnableKeyRepeat EnableKeyRepeat;
PF_SDL_EnableUNICODE EnableUNICODE;
PF_SDL_Error Error;
PF_SDL_EventState EventState;
PF_SDL_FillRect FillRect;
PF_SDL_Flip Flip;
PF_SDL_FreeCursor FreeCursor;
PF_SDL_FreeRW FreeRW;
PF_SDL_FreeSurface FreeSurface;
PF_SDL_FreeWAV FreeWAV;
PF_SDL_FreeYUVOverlay FreeYUVOverlay;
PF_SDL_GL_GetAttribute GL_GetAttribute;
PF_SDL_GL_GetProcAddress GL_GetProcAddress;
PF_SDL_GL_LoadLibrary GL_LoadLibrary;
PF_SDL_GL_Lock GL_Lock;
PF_SDL_GL_SetAttribute GL_SetAttribute;
PF_SDL_GL_SwapBuffers GL_SwapBuffers;
PF_SDL_GL_Unlock GL_Unlock;
PF_SDL_GL_UpdateRects GL_UpdateRects;
PF_SDL_GetAppState GetAppState;
PF_SDL_GetAudioStatus GetAudioStatus;
PF_SDL_GetClipRect GetClipRect;
PF_SDL_GetCursor GetCursor;
PF_SDL_GetError GetError;
PF_SDL_GetEventFilter GetEventFilter;
PF_SDL_GetGammaRamp GetGammaRamp;
PF_SDL_GetKeyName GetKeyName;
PF_SDL_GetKeyRepeat GetKeyRepeat;
PF_SDL_GetKeyState GetKeyState;
PF_SDL_GetModState GetModState;
PF_SDL_GetMouseState GetMouseState;
PF_SDL_GetRGB GetRGB;
PF_SDL_GetRGBA GetRGBA;
PF_SDL_GetRelativeMouseState GetRelativeMouseState;
PF_SDL_GetThreadID GetThreadID;
PF_SDL_GetTicks GetTicks;
PF_SDL_GetVideoInfo GetVideoInfo;
PF_SDL_GetVideoSurface GetVideoSurface;
// PF_SDL_GetWMInfo GetWMInfo;
PF_SDL_Has3DNow Has3DNow;
PF_SDL_Has3DNowExt Has3DNowExt;
PF_SDL_HasAltiVec HasAltiVec;
PF_SDL_HasMMX HasMMX;
PF_SDL_HasMMXExt HasMMXExt;
PF_SDL_HasRDTSC HasRDTSC;
PF_SDL_HasSSE HasSSE;
PF_SDL_HasSSE2 HasSSE2;
PF_SDL_Init Init;
// PF_SDL_InitQuickDraw InitQuickDraw;
PF_SDL_InitSubSystem InitSubSystem;
PF_SDL_JoystickClose JoystickClose;
PF_SDL_JoystickEventState JoystickEventState;
PF_SDL_JoystickGetAxis JoystickGetAxis;
PF_SDL_JoystickGetBall JoystickGetBall;
PF_SDL_JoystickGetButton JoystickGetButton;
PF_SDL_JoystickGetHat JoystickGetHat;
PF_SDL_JoystickIndex JoystickIndex;
PF_SDL_JoystickName JoystickName;
PF_SDL_JoystickNumAxes JoystickNumAxes;
PF_SDL_JoystickNumBalls JoystickNumBalls;
PF_SDL_JoystickNumButtons JoystickNumButtons;
PF_SDL_JoystickNumHats JoystickNumHats;
PF_SDL_JoystickOpen JoystickOpen;
PF_SDL_JoystickOpened JoystickOpened;
PF_SDL_JoystickUpdate JoystickUpdate;
PF_SDL_KillThread KillThread;
PF_SDL_Linked_Version Linked_Version;
PF_SDL_ListModes ListModes;
PF_SDL_LoadBMP_RW LoadBMP_RW;
PF_SDL_LoadFunction LoadFunction;
PF_SDL_LoadObject LoadObject;
PF_SDL_LoadWAV_RW LoadWAV_RW;
PF_SDL_LockAudio LockAudio;
PF_SDL_LockSurface LockSurface;
PF_SDL_LockYUVOverlay LockYUVOverlay;
PF_SDL_LowerBlit LowerBlit;
PF_SDL_MapRGB MapRGB;
PF_SDL_MapRGBA MapRGBA;
PF_SDL_MixAudio MixAudio;
PF_SDL_NumJoysticks NumJoysticks;
PF_SDL_OpenAudio OpenAudio;
PF_SDL_PauseAudio PauseAudio;
PF_SDL_PeepEvents PeepEvents;
PF_SDL_PollEvent PollEvent;
PF_SDL_PumpEvents PumpEvents;
PF_SDL_PushEvent PushEvent;
PF_SDL_Quit Quit;
PF_SDL_QuitSubSystem QuitSubSystem;
PF_SDL_RWFromConstMem RWFromConstMem;
PF_SDL_RWFromFP RWFromFP;
PF_SDL_RWFromFile RWFromFile;
PF_SDL_RWFromMem RWFromMem;
PF_SDL_ReadBE16 ReadBE16;
PF_SDL_ReadBE32 ReadBE32;
PF_SDL_ReadBE64 ReadBE64;
PF_SDL_ReadLE16 ReadLE16;
PF_SDL_ReadLE32 ReadLE32;
PF_SDL_ReadLE64 ReadLE64;
// PF_SDL_RegisterApp RegisterApp;
PF_SDL_RemoveTimer RemoveTimer;
PF_SDL_SaveBMP_RW SaveBMP_RW;
PF_SDL_SemPost SemPost;
PF_SDL_SemTryWait SemTryWait;
PF_SDL_SemValue SemValue;
PF_SDL_SemWait SemWait;
PF_SDL_SemWaitTimeout SemWaitTimeout;
PF_SDL_SetAlpha SetAlpha;
PF_SDL_SetClipRect SetClipRect;
PF_SDL_SetColorKey SetColorKey;
PF_SDL_SetColors SetColors;
PF_SDL_SetCursor SetCursor;
PF_SDL_SetError SetError;
PF_SDL_SetEventFilter SetEventFilter;
PF_SDL_SetGamma SetGamma;
PF_SDL_SetGammaRamp SetGammaRamp;
PF_SDL_SetModState SetModState;
// PF_SDL_SetModuleHandle SetModuleHandle;
PF_SDL_SetPalette SetPalette;
PF_SDL_SetTimer SetTimer;
PF_SDL_SetVideoMode SetVideoMode;
PF_SDL_ShowCursor ShowCursor;
PF_SDL_SoftStretch SoftStretch;
/*PF_SDL_Swap16 Swap16;
PF_SDL_Swap32 Swap32;
PF_SDL_Swap32 Swap32;
PF_SDL_Swap32 Swap32;
PF_SDL_Swap32 Swap32;
PF_SDL_Swap32 Swap32;
PF_SDL_Swap64 Swap64;
PF_SDL_Swap64 Swap64;
PF_SDL_Swap64 Swap64;*/
PF_SDL_ThreadID ThreadID;
PF_SDL_UnloadObject UnloadObject;
PF_SDL_UnlockAudio UnlockAudio;
PF_SDL_UnlockSurface UnlockSurface;
PF_SDL_UnlockYUVOverlay UnlockYUVOverlay;
// PF_SDL_UnregisterApp UnregisterApp;
PF_SDL_UpdateRect UpdateRect;
PF_SDL_UpdateRects UpdateRects;
PF_SDL_UpperBlit UpperBlit;
PF_SDL_VideoDriverName VideoDriverName;
PF_SDL_VideoInit VideoInit;
PF_SDL_VideoModeOK VideoModeOK;
PF_SDL_VideoQuit VideoQuit;
PF_SDL_WM_GetCaption WM_GetCaption;
PF_SDL_WM_GrabInput WM_GrabInput;
PF_SDL_WM_IconifyWindow WM_IconifyWindow;
PF_SDL_WM_SetCaption WM_SetCaption;
PF_SDL_WM_SetIcon WM_SetIcon;
PF_SDL_WM_ToggleFullScreen WM_ToggleFullScreen;
PF_SDL_WaitEvent WaitEvent;
PF_SDL_WaitThread WaitThread;
PF_SDL_WarpMouse WarpMouse;
PF_SDL_WasInit WasInit;
PF_SDL_WriteBE16 WriteBE16;
PF_SDL_WriteBE32 WriteBE32;
PF_SDL_WriteBE64 WriteBE64;
PF_SDL_WriteLE16 WriteLE16;
PF_SDL_WriteLE32 WriteLE32;
PF_SDL_WriteLE64 WriteLE64;
}
void* SDL_LIB;
